<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Troglobit]]></title>
  <link href="http://troglobit.github.io/atom.xml" rel="self"/>
  <link href="http://troglobit.github.io/"/>
  <updated>2015-11-08T21:57:03+01:00</updated>
  <id>http://troglobit.github.io/</id>
  <author>
    <name><![CDATA[Joachim Nilsson]]></name>
    <email><![CDATA[troglobit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Stray Puppies]]></title>
    <link href="http://troglobit.github.io/blog/2015/11/07/stray-puppies/"/>
    <updated>2015-11-07T02:32:12+01:00</updated>
    <id>http://troglobit.github.io/blog/2015/11/07/stray-puppies</id>
    <content type="html"><![CDATA[<p>Sometimes I just cannot help myself.  It&rsquo;s like finding a stray puppy,
or abandonded kitten &hellip;</p>

<p>&hellip; I recently decided to adopt <a href="http://troglobit.github.io/mini-snmpd.html">mini-snmpd</a> since the
<a href="http://members.aon.at/linuxfreak/linux/mini_snmpd.html">original upstream</a> site had passed into the great beyond.  At this
point in my life almost everyone I know can tell you I have no warm
fuzzy feels for SNMP, at all.  So why did I even consider this to begin
with?!</p>

<p>Well, I have to confess that there are certain things that SNMP can be
really useful for.  Most of it is remote monitoring, and since I work
with embedded systems a lot, SNMP can be quite a handy tool.</p>

<p>I first ran into mini-snmpd when I created <a href="https://github.com/troglobit/troglos">TroglOS</a>, by forking
<a href="https://github.com/hno/miniroot">miniroot</a>, and what struck me immediately was how small and simple
it was.  The code was also in reasonably good shape, so it had passed my
initial quality control.  Suddenly one day I could no longer download it
when building TroglOS, so I had to do something!</p>

<p>My plans for mini-snmpd are quite humble.  I&rsquo;m currently cleaning it up
a bit, adding configure script for all optional features, testing
portability to FreeBSD and <a href="https://github.com/javiplx/mini-snmpd">integrating (good) patches</a> from various
sources scattered around the web.</p>

<p>I will not add lots of new features, but as always I&rsquo;m your humble patch
monkey, so if you <a href="https://github.com/troglobit/mini-snmpd">submit a pull reqeust</a> at GitHub it&rsquo;ll probably be
merged and put into a release.</p>

<p>Cheers</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Summer of Code 2015]]></title>
    <link href="http://troglobit.github.io/blog/2015/09/09/summer-of-code-2015/"/>
    <updated>2015-09-09T21:49:13+02:00</updated>
    <id>http://troglobit.github.io/blog/2015/09/09/summer-of-code-2015</id>
    <content type="html"><![CDATA[<p>Summer is now slowly fading away, and what a summer it has been here in
Sweden!  For someone who isn&rsquo;t a fan of the summer heat it has been an
awesome time for brain work, and in my case work on my open source
projects! :-)</p>

<p>Due to my not really taking much vacation previous years I had saved up
for ten weeks (10) this year!  It was really worth it, and for the first
time in many years I actually feel rested.</p>

<p>So what&rsquo;s new?  Well, this summer I&rsquo;ve released a <strong>major</strong> upgrade to
<a href="http://troglobit.github.io/pimd.html">pimd</a>, which received <em>PIM-SSM</em> and full <em>IGMPv3</em> support!
<a href="http://troglobit.github.io/inadyn.html">Inadyn</a> has seen two releases, one feature release with
support for Windows and improved support for custom DDNS providers, and
one bugfix release (today).  My own FTP/TFTP server <a href="http://troglobit.github.io/uftpd.html">uftpd</a>
has also got a bit of an overhaul to improve both concurrency and
improved support for various popular clients (Firefox and wget) &ndash; I
released v1.9 of uftpd as a birthday present to myself! ;-)</p>

<p>I&rsquo;ve done some other minor work as well, on the &ldquo;new&rdquo; <a href="https://github.com/troglobit/netcalc">netcalc</a>, IPv6
and IPv4 subnet calculator, as well as <a href="https://github.com/troglobit/watchdogd">watchdogd</a> and <a href="http://troglobit.github.io/finit.html">finit</a>.  The
latter two have however not seen any releases yet, but both have <em>major</em>
v2.0 releases with lots of very interesting features that are going to
be revealed soon!</p>

<p>For watchdogd several big improvements to system monitoring (loadavg,
file descriptors, RAM) as well as a very advanced process monitoring
(instrumentation) API is being added.  Finit however is the crown in
making, it is being converted to support multiple instances of services
and to be a fully event driven.  I&rsquo;m extremely excited about Finit!</p>

<p>Oh, and don&rsquo;t worry &hellip; I did manage to get some actual real downtime on
the beach as well! ;-)</p>

<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HowTo: Using -lite With a GIT-based Application]]></title>
    <link href="http://troglobit.github.io/blog/2015/07/02/howto-using-lite-with-a-git-based-application/"/>
    <updated>2015-07-02T17:11:55+02:00</updated>
    <id>http://troglobit.github.io/blog/2015/07/02/howto-using-lite-with-a-git-based-application</id>
    <content type="html"><![CDATA[<p>Years ago while looking for a fast <a href="https://en.wikipedia.org/wiki/Init">init</a> replacement for <a href="http://westermo.com/">work</a>,
I found <a href="http://helllabs.org/finit/">Finit</a>.  Originally written by <a href="https://github.com/cmatsuoka">Claudio Matsuoka</a> to act
as a drop-in replacement for the <a href="https://en.wikipedia.org/wiki/Asus_Eee_PC">Asus EeePC</a> <a href="http://wiki.eeeuser.com/boot_process:the_boot_process">fastinit</a>, <em>&ldquo;gaps
filled with frog DNA &hellip;&rdquo;</em></p>

<p>Until I found Finit I had always been in awe of those venturing into the
realm of <a href="http://0pointer.net/blog/">PID 1</a>.  However, learning from the simplicity of Claudio&rsquo;s
code I realized that although PID 1 at times is indistinguishable from
magic, it is really not that hard to master.  <a href="https://github.com/troglobit/finit">My version of Finit</a>
is available on GitHub.</p>

<p>The code is open sourced under the very liberal <a href="http://opensource.org/licenses/MIT">MIT/X11 license</a>,
and much of its frog DNA has proven very useful to me over the years.
This blog post is about how that frog DNA can help you fill gaps in your
projects &hellip;</p>

<!-- more -->


<p>Recently I broke out the most generic pieces from Finit into a separate
library, which I call <a href="https://github.com/troglobit/libite">libite</a> (because it looks awesome linking to
it: <code>-lite</code> :) I complemented it with a few pieces of my own and some
from the <a href="http://www.openbsd.org/">OpenBSD</a> project, most notably their famous string API:
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=strlcpy">strlcpy(3)</a> and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=strlcpy">strlcat(3)</a>.  Also included is the very useful
*BSD linked list API <a href="http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man3/LIST_EMPTY.3">sys/queue.h</a>, which is a much more up to date
version than GLIBC carries.  For example, the new <code>_SAFE</code> macros are
missing, which you want to use while traversing lists to delete/free
nodes.</p>

<p>To make use of <code>-lite</code> and its APIs you can either build it as a
separate library and install <code>lite.h</code> and <code>libite.so.1</code> to your system,
or add <code>libite</code> as a GIT submodule to your project and use only the
parts you need from the archive:</p>

<pre><code>git submodule add https://github.com/troglobit/libite.git
</code></pre>

<p>You then need to add <code>#include "libite/lite.h"</code> to the source and adapt
your Makefile slightly to call the <code>libite/Makefile</code> before linking your
application to the <code>libite.a</code> archive:</p>

<pre><code>all: $(EXEC) libite/libite.a

libite/libite.a: Makefile
        @$(MAKE) -C libite

$(EXEC): $(OBJS) libite/libite.a
        @gcc -o $@ $^
</code></pre>

<p>For an example of how this can look, see the <a href="https://github.com/troglobit/uftpd">uftpd</a> project, which
uses both <code>-lite</code> and <code>-luev</code>.  The latter is my small event library,
<a href="https://github.com/troglobit/libuev">libuEv</a>.  For help using <code>-lite</code> with the GNU configure and build
system, see <a href="https://github.com/troglobit/inadyn">inadyn</a>.</p>

<p>Libite builds in &ldquo;silent mode&rdquo; by default, use <code>make V=1</code> (like the
kernel) to get a more verbose output, usable for autobuilders etc.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HowTo: Push to Multiple GIT Repos With One Command]]></title>
    <link href="http://troglobit.github.io/blog/2015/07/01/howto-push-to-multiple-git-repos-with-one-command/"/>
    <updated>2015-07-01T00:42:17+02:00</updated>
    <id>http://troglobit.github.io/blog/2015/07/01/howto-push-to-multiple-git-repos-with-one-command</id>
    <content type="html"><![CDATA[<p>So, now that I have <a href="http://git.troglobit.com">http://git.troglobit.com</a> setup as a backup GIT repo
to <a href="https://github.com/troglobit,">https://github.com/troglobit,</a> I needed a <em>simple</em> way of always
pushing to both repos &ndash; best way for me is to always hook into my
regular work flow, otherwise I&rsquo;d just forget.  The <a href="1">git-remote(1)</a>
man page describes the new <code>set-url --add</code> sub-command:</p>

<pre><code>git remote set-url --add origin troglobit.com:/srv/git/watchdogd.git
</code></pre>

<p>Now, with a simple <code>git push</code> followed by <code>git push --tags</code> I had now
pushed to both the GitHub repo as well as my own server!</p>

<!-- more -->


<p>Of course I first had to create the empty <code>watchdogd.git</code> on the server:</p>

<pre><code>cd /srv/git
git init --bare watchdogd.git
echo "Refurbished watchdog daemon from uClinux-dist" &gt;watchdogd.git/description
</code></pre>

<p>To inspect your current push/pull repos, issue <code>git remote -v</code>:</p>

<pre><code>origin  git@github.com:troglobit/watchdogd.git (fetch)
origin  git@github.com:troglobit/watchdogd.git (push)
origin  troglobit.com:/srv/git/watchdogd.git (push)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HowTo: Apache With Gitweb on Debian 8.1]]></title>
    <link href="http://troglobit.github.io/blog/2015/06/30/howto-apache-with-gitweb-on-debian-8-dot-1/"/>
    <updated>2015-06-30T23:13:48+02:00</updated>
    <id>http://troglobit.github.io/blog/2015/06/30/howto-apache-with-gitweb-on-debian-8-dot-1</id>
    <content type="html"><![CDATA[<p>I&rsquo;m posting this in case anyone else gets stuck setting up <a href="http://www.apache.org">Apache</a>
with <a href="http://git-scm.com/docs/gitweb">Gitweb</a>.  Also as a reminder to myself in case I ever need to
set up this all over again.</p>

<ol>
<li>You have all your eggs in one basket (GitHub), and</li>
<li>You really like that shiny basket, but</li>
<li>You know you&rsquo;re clumsy and usually drop baskets yourself.</li>
<li>You are wise (yes you are!) and realize you need another basket, so</li>
<li>You set up a server and a domain yourself &hellip;</li>
</ol>


<p>OK.  Let&rsquo;s start simple, since you are already running the latest Debian
you fire up the command line and install the basics:</p>

<pre><code>sudo apt-get install gitweb apache2
</code></pre>

<p>So it&rsquo;ll complain, you&rsquo;ll clarify your request and soon all required
packages are on your server.  Now what?</p>

<p>Debian has already set up <a href="http://localhost/gitweb">http://localhost/gitweb</a> for you, and if you
have a domain already you should go ahead and edit the master file for
that:</p>

<pre><code>editor /etc/apache2/sites-available/000-default.conf
service apache2 reload
</code></pre>

<p>If you want to use that for your gitweb needs, then you&rsquo;re done!</p>

<!-- more -->


<p>For me, running <a href="http://troglobit.com/gitweb">http://troglobit.com/gitweb</a> out of the box was not
enough.  I wanted to setup <a href="http://git.troglobit.com">http://git.troglobit.com</a> and also to make
sure to keep really short and pretty URLs to projects I host.  So the
next part of this post is about how to set that up.</p>

<p>My <code>000-default.conf</code> is for <a href="http://troglobit.com,">http://troglobit.com,</a> so I created a new
one for the sub-domain:</p>

<pre><code>editor /etc/apache2/sites-available/git.conf
</code></pre>

<p>&hellip; and added the following:</p>

<figure class='code'><figcaption><span>/etc/apache2/sites-available/git.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">ServerName</span> git.troglobit.com
</span><span class='line'>    <span class="nb">DocumentRoot</span> <span class="sx">/usr/share/gitweb</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">SetEnv</span> GITWEB_CONFIG    <span class="sx">/etc/gitweb.conf</span>
</span><span class='line'>    <span class="nb">SetEnv</span> GIT_PROJECT_ROOT <span class="sx">/srv/git</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;Directory</span> <span class="s">/usr/share/gitweb</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nb">Options</span> FollowSymLinks ExecCGI
</span><span class='line'>        <span class="nb">AddHandler</span> cgi-script .cgi
</span><span class='line'>
</span><span class='line'>        <span class="nb">DirectoryIndex</span> gitweb.cgi
</span><span class='line'>
</span><span class='line'>        <span class="c"># Pretty gitweb URLs + pathinfo feature in gitweb.conf</span>
</span><span class='line'>        <span class="nb">RewriteEngine</span> <span class="k">On</span>
</span><span class='line'>        <span class="nb">RewriteCond</span> %{REQUEST_FILENAME} !-f
</span><span class='line'>        <span class="nb">RewriteCond</span> %{REQUEST_FILENAME} !-d
</span><span class='line'>        <span class="nb">RewriteRule</span> ^.* <span class="sx">/gitweb.cgi/</span>$0 [L,PT]
</span><span class='line'>    <span class="nt">&lt;/Directory&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># Enable git clone over HTTP</span>
</span><span class='line'>    <span class="nb">ScriptAliasMatch</span> \
</span><span class='line'>        <span class="err">&quot;(?x)^/(</span>.<span class="err">*/(</span><span class="nb">HEAD</span> | \
</span><span class='line'>        <span class="err">info/</span><span class="nb">refs</span> | \
</span><span class='line'>        <span class="err">objects/(info/[^/]+</span> <span class="err">|</span> <span class="err">\</span>
</span><span class='line'>        <span class="err">[0-9a-f]{2}/[0-9a-f]{38}</span> <span class="err">|</span> <span class="err">\</span>
</span><span class='line'>        <span class="err">pack/pack-[0-9a-f]{40}\</span>.<span class="err">(pack|idx))</span> <span class="err">|</span> <span class="err">\</span>
</span><span class='line'>        <span class="err">git-(upload|receive)-pack))$&quot;</span> <span class="err">\</span>
</span><span class='line'>        <span class="err">/usr/lib/git-core/git-http-backend/$1</span>
</span><span class='line'><span class="nt">&lt;/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Remember to enable the new sub-domain in Apache and restart the daemon:</p>

<pre><code>a2ensite git
service apache2 restart
</code></pre>

<p>I&rsquo;m not using the default Debian GIT repo location, <code>/var/lib/git</code>, so I
need to set the project root for both the Apache and the GitWeb config:</p>

<figure class='code'><figcaption><span>/etc/gitweb.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1"># See https://github.com/kogakure/gitweb-theme for more help and pointers</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># path to git projects (&lt;project&gt;.git)</span>
</span><span class='line'><span class="nv">$projectroot</span> <span class="o">=</span> <span class="s">&quot;/srv/git&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">@git_base_url_list</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;git://git.troglobit.com&quot;</span><span class="p">,</span> <span class="s">&quot;http://git.troglobit.com&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># directory to use for temp files</span>
</span><span class='line'><span class="nv">$git_temp</span> <span class="o">=</span> <span class="s">&quot;/tmp&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$site_name</span> <span class="o">=</span> <span class="s">&quot;git.troglobit.com&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># target of the home link on top of all pages</span>
</span><span class='line'><span class="nv">$home_link</span> <span class="o">=</span> <span class="nv">$my_uri</span> <span class="o">||</span> <span class="s">&quot;/&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># html text to include at home page</span>
</span><span class='line'><span class="c1">#$home_text = &quot;indextext.html&quot;;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># file with project list; by default, simply scan the projectroot dir.</span>
</span><span class='line'><span class="c1">#$projects_list = $projectroot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># stylesheet to use</span>
</span><span class='line'><span class="nv">@stylesheets</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;static/gitweb.css&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># javascript code for gitweb</span>
</span><span class='line'><span class="nv">$javascript</span> <span class="o">=</span> <span class="s">&quot;static/gitweb.js&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># logo to use</span>
</span><span class='line'><span class="nv">$logo</span> <span class="o">=</span> <span class="s">&quot;static/git-logo.png&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># the &#39;favicon&#39;</span>
</span><span class='line'><span class="nv">$favicon</span> <span class="o">=</span> <span class="s">&quot;static/git-favicon.png&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># git-diff-tree(1) options to use for generated patches</span>
</span><span class='line'><span class="c1">#@diff_opts = (&quot;-M&quot;);</span>
</span><span class='line'><span class="nv">@diff_opts</span> <span class="o">=</span> <span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Enable PATH_INFO so the server can produce URLs of the</span>
</span><span class='line'><span class="c1"># form: http://git.hokietux.net/project.git/xxx/xxx</span>
</span><span class='line'><span class="c1"># This allows for pretty URLs *within* the Git repository,</span>
</span><span class='line'><span class="c1"># also needs the Apache rewrite rules for full effect.</span>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;pathinfo&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Neat way of prefixing the top URL listing</span>
</span><span class='line'><span class="k">our</span> <span class="nv">@extra_breadcrumbs</span> <span class="o">=</span> <span class="p">(</span>
</span><span class='line'>      <span class="p">[</span> <span class="s">&#39;Troglobit Software&#39;</span> <span class="o">=&gt;</span> <span class="s">&#39;http://troglobit.com/&#39;</span> <span class="p">],</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># List avatars next to committers</span>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;avatar&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;gravatar&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># The category name is read from .git/category, in the same manner as .git/description.</span>
</span><span class='line'><span class="nv">$projects_list_group_categories</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="nv">$project_list_default_category</span> <span class="o">=</span> <span class="s">&quot;misc&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$projects_list_description_width</span> <span class="o">=</span> <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Enable blame, pickaxe search, snapshop, search, and grep</span>
</span><span class='line'><span class="c1"># support, but still allow individual projects to turn them off.</span>
</span><span class='line'><span class="c1"># These are features that users can use to interact with your Git trees. They</span>
</span><span class='line'><span class="c1"># consume some CPU whenever a user uses them, so you can turn them off if you</span>
</span><span class='line'><span class="c1"># need to.  Note that the &#39;override&#39; option means that you can override the</span>
</span><span class='line'><span class="c1"># setting on a per-repository basis.</span>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;blame&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;blame&#39;</span><span class="p">}{</span><span class="s">&#39;override&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;pickaxe&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;pickaxe&#39;</span><span class="p">}{</span><span class="s">&#39;override&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;snapshot&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;snapshot&#39;</span><span class="p">}{</span><span class="s">&#39;override&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;search&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;grep&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;grep&#39;</span><span class="p">}{</span><span class="s">&#39;override&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;highlight&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>The impossibly simple Apache config has been ripped from the intro by
<a href="http://dereenigne.org/debian/debian-gitweb-server">Jonathan McCrohan</a>,
the GitWeb config is a mixture of findings on the Internets.  Notice the
breadcrumbs and the grouping settings, very useful.</p>

<p>The magic with the pretty URLs is in both files, all <code>RewriteRule</code> lines
in the Apache <code>.conf</code> and the <code>$feature{'pathinfo'}{'default'} = [1];</code>
setting in <code>gitweb.conf</code>.</p>

<p>Also, try out the cool <a href="https://github.com/kogakure/gitweb-theme">theme</a>
I use, it looks a lot better than the default.</p>

<p>Happy coding!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Inetd Support in Finit v1.12]]></title>
    <link href="http://troglobit.github.io/blog/2015/03/06/inetd-support-in-finit-v1-dot-12/"/>
    <updated>2015-03-06T22:34:45+01:00</updated>
    <id>http://troglobit.github.io/blog/2015/03/06/inetd-support-in-finit-v1-dot-12</id>
    <content type="html"><![CDATA[<p>A steady flow of features, and releases, is key to keeping any project
alive.  Recently I ticked off another item in the <a href="http://troglobit.github.io/finit.html">Finit</a>
TODO list &hellip;</p>

<p>Finit v1.12 now comes with a built-in inetd!  You no longer need an
external inetd daemon to launch services on demand.</p>

<p>The good news doesn&rsquo;t stop there, this little inetd actually supports a
poor man&rsquo;s tcpwrappers!</p>

<pre><code>inetd ssh/tcp          nowait [2345] /sbin/dropbear -i -R -F
inetd ssh@eth0:222/tcp nowait [2345] /sbin/dropbear -i -R -F
</code></pre>

<p>With these two lines in your <code>/etc/finit.conf</code> you tell finit to launch
the <a href="https://matt.ucc.asn.au/dropbear/dropbear.html">Dropbear SSH</a>
server on demand on port 22 (default ssh/tcp port in <code>/etc/services</code>) on
<em>all</em> interfaces except on <code>eth0</code>, which in your case is the Internet
(WAN) interface, here you want SSH to run on port 222.  Actually, you
don&rsquo;t want port 22 open at all on <code>eth0</code> &hellip; so finit takes care of this
for you!  Seriously, it just works, no need for messing about with that
nasty old <code>iptables</code> anymore!</p>

<p>The original UNIX inetd super server supported many protocols
internally, some of which may seem a bit odd today, and some have been
superseded by more modern protocols.</p>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Echo_Protocol">echo</a></li>
<li><a href="http://en.wikipedia.org/wiki/Character_Generator_Protocol">chargen</a></li>
<li><a href="http://en.wikipedia.org/wiki/Time_Protocol">time</a></li>
<li><a href="http://en.wikipedia.org/wiki/Daytime_Protocol">daytime</a></li>
<li><a href="http://en.wikipedia.org/wiki/Discard_Protocol">discard</a></li>
</ul>


<p>Finit currently only supports one internal/built-in standard service,
<code>time</code>.  It is built as a plugin to serve as an example of how you can
extend Finit yourself.  The time service can be called either as UDP or
TCP.  To prevent security issues, the <code>time</code> protocol is disabled by
default.  To enable it you need two things:</p>

<ol>
<li>The <code>time.so</code> plugin (built by default)</li>
<li>An <code>inetd time ...</code> line in <code>/etc/finit.conf</code></li>
</ol>


<p>Assuming you&rsquo;ve installed the default set of plugins, the following two
lines can be added:</p>

<pre><code>inetd time/udp   wait [2345] internal
inetd time/tcp nowait [2345] internal
</code></pre>

<p>This can be very useful for testing the inetd capabilities, your network
connection, or simply to get the time to a client where NTP for some
reason does not work, or is blocked.  For instance, you could have a GPS
setup on your server and distribute time to clients with the <code>time</code>
protocol.</p>

<p>To use it you need an <a href="http://www.aelius.com/njh/rdate/"><code>rdate</code></a>
client.  Users of <code>rdate</code> in BusyBox may need to be reminded that it
only supports TCP.</p>

<pre><code>$ rdate -pu 198.51.100.42
Sat Mar  7 08:48:58 CET 2015
</code></pre>

<p>For more info on Finit and its features, see the <a href="https://github.com/troglobit/finit/blob/master/README.md">README</a>.</p>

<p>Enjoy! ツ</p>

<!-- more -->


<h3>Changes</h3>

<ul>
<li>Add support for built-in inetd super server &ndash; launch services on
demand.  Supports filtering per interface and custom Inet ports.</li>
<li>Upgrade to <a href="https://github.com/troglobit/libuev">libuEv</a> v1.1.0 to better handle error conditions.</li>
<li>Allow mixed case config directives in <code>finit.conf</code></li>
<li>Add support for RFC 868 (rdate) time plugin, start as inetd service.</li>
<li>Load plugins before parsing <code>finit.conf</code>, this makes it possible to
extend finit even with configuration commands.  E.g., the <code>time.so</code>
plugin must be loaded for the <code>inetd time/tcp internal</code> service to be
accepted when parsing <code>finit.conf</code>.</li>
<li>Slight change in TTY fallback behavior, if no TTY is listed in the
system <code>finit.conf</code> first inspect the <code>console</code> setting and only if
that too is unset fall back to <code>/bin/sh</code></li>
<li>When falling back to the <code>console</code> TTY or <code>/bin/sh</code>, finit now marks
this fallback as console.  Should improve usability in some use cases.</li>
</ul>


<h3>Fixes</h3>

<ul>
<li>Revert &ldquo;Use vfork() instead of fork() before exec()&rdquo; from v1.11.  It
turned out to not work so well after all.  For instance, launching
TTYs in a background process completely blocked inetd services from
even starting up listening sockets &hellip; proper fork seems to work fine
though.  This is the casue for <em>yanking</em> the <a href="https://github.com/troglobit/finit/compare/1.10...1.11">1.11</a> release.</li>
<li>Trap segfaults caused by external plugins/callbacks in a sub-process.
This prevents a single programming mistake in by a 3rd party developer
from taking down the entire system.</li>
<li>Fix Coverity CID 56281: <code>dlopen()</code> resource leak by storing the
pointer.  For the time being we do not support unloading plugins.</li>
<li>Set hostname early, so bootstrap processes like syslog can use it.</li>
<li>Only restart <em>lost daemons</em> when recovering from a <code>SIGSTOP</code>/norespawn.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finit v1.11 Released!]]></title>
    <link href="http://troglobit.github.io/blog/2015/01/24/finit-v1-dot-11-released/"/>
    <updated>2015-01-24T16:54:23+01:00</updated>
    <id>http://troglobit.github.io/blog/2015/01/24/finit-v1-dot-11-released</id>
    <content type="html"><![CDATA[<p><strong>Update 2015-03-09</strong>: This release has unfortunately been <em>yanked</em> due
to serious regressions in launching background processes.  It has been
replaced by <a href="http://troglobit.github.io/blog/2015/03/06/inetd-support-in-finit-v1-dot-12/">v1.12</a></p>

<!-- more -->


<p>I&rsquo;m very pleased to announce <a href="http://troglobit.github.io/finit.html">Finit v1.11</a> — this is the
episode where two of my projects finally get married! ツ</p>

<h3>Changes</h3>

<ul>
<li>Now using the asynchronous <a href="https://github.com/troglobit/libuev">libuEv</a> library for handling all events:
signals, timers and listening to sockets or file descriptors.</li>
<li>Rename NEWS.md &ndash;> CHANGELOG.md, with symlinks for <code>make install</code></li>
<li>Attempt to align with <a href="http://keepachangelog.com">http://keepachangelog.com</a> for the ChangeLog</li>
<li><a href="https://travis-ci.org/troglobit/finit">Travis CI</a> now only invokes <a href="https://scan.coverity.com/projects/3545">Coverity Scan</a> from the &lsquo;dev&rsquo; branch.  This
means that all development, except documentation updates, must go into
that branch.</li>
</ul>


<h3>Fixes</h3>

<ul>
<li>Fix bug with finit dying when no <code>tty</code> is defined in <code>finit.conf</code>, now
even the fallback shell has control over its TTY, see fix in GIT
commit <a href="https://github.com/troglobit/finit/commit/dea3ae8">dea3ae8</a> for this.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rant: All the C Compiler Warnings ...]]></title>
    <link href="http://troglobit.github.io/blog/2015/01/12/rant-all-the-c-compiler-warnings-dot-dot-dot/"/>
    <updated>2015-01-12T01:57:40+01:00</updated>
    <id>http://troglobit.github.io/blog/2015/01/12/rant-all-the-c-compiler-warnings-dot-dot-dot</id>
    <content type="html"><![CDATA[<blockquote><p>&ldquo;Enable <em>all</em> the warnings!&rdquo;</p></blockquote>

<p>This is one of the truths you learn when you start working with C.  Most
of the time adding <code>CPPFLAGS="-W -Wall -Werror"</code> is all you need to find
all the nasty bugs.  And if that&rsquo;s not enough, there are tons of tools
for static code analysis, like <code>scan-build</code> in
<a href="http://clang-analyzer.llvm.org/scan-build.html">Clang</a>, and
<a href="https://scan.coverity.com/">Coverity Scan</a>, to help you <em>find all the
bugs</em>!</p>

<p>However, these pesky warnings (some of which cannot even be disabled!)
are sometimes more of a nuisance than help.  Sometimes you <em>know</em> that
some parameters to a function will remain unused &ndash; it&rsquo;s a callback, and
you don&rsquo;t need all the data given to you.  So you start adding all kinds
of voodoo, like <code>__attribute__ ((unused))</code> &hellip; seriously?</p>

<!-- more -->


<p>Imagine this now sprinkled all over the code base.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">callback</span><span class="p">(</span><span class="kt">uev_ctx_t</span> <span class="o">*</span><span class="n">ctx</span> <span class="n">__attribute__</span><span class="p">((</span><span class="n">unused</span><span class="p">)),</span>
</span><span class='line'>                     <span class="kt">uev_t</span> <span class="o">*</span><span class="n">w</span> <span class="n">__attribute__</span><span class="p">((</span><span class="n">unused</span><span class="p">)),</span>
</span><span class='line'>                     <span class="kt">void</span> <span class="o">*</span><span class="n">arg</span> <span class="n">__attribute__</span><span class="p">((</span><span class="n">unused</span><span class="p">)),</span>
</span><span class='line'>                     <span class="kt">int</span> <span class="n">events</span> <span class="n">__attribute__</span><span class="p">((</span><span class="n">unused</span><span class="p">)))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So you make small macros to help out:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#define UNUSED(arg) arg __attribute__ ((unused))</span>
</span></code></pre></td></tr></table></div></figure>


<p>We now have this instead:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">callback</span><span class="p">(</span><span class="kt">uev_ctx_t</span> <span class="o">*</span><span class="n">UNUSED</span><span class="p">(</span><span class="n">ctx</span><span class="p">),</span> <span class="kt">uev_t</span> <span class="o">*</span><span class="n">UNUSED</span><span class="p">(</span><span class="n">w</span><span class="p">),</span>
</span><span class='line'>                     <span class="kt">void</span> <span class="o">*</span><span class="n">UNUSED</span><span class="p">(</span><span class="n">arg</span><span class="p">),</span> <span class="kt">int</span> <span class="n">UNUSED</span><span class="p">(</span><span class="n">events</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Admittedly, using the macro is much cleaner, but still.  Why not just
allow this <em>much more readable</em> version?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">callback</span><span class="p">(</span><span class="kt">uev_ctx_t</span> <span class="o">*</span><span class="n">ctx</span><span class="p">,</span> <span class="kt">uev_t</span> <span class="o">*</span><span class="n">w</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">arg</span><span class="p">,</span> <span class="kt">int</span> <span class="n">events</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The human eye is marvellous at finding little things that stick out,
but when there&rsquo;s nothing but annoying things on the screen we can no
longer see the most obvious pointer casting bugs, and we get sloppy.</p>

<p>I&rsquo;m seriously considering adding some kind of <code>--developer-mode</code> to my
own projects which will warn like crazy, as usual, and as soon as I turn
it off (default) complete silence will arrive.  That&rsquo;s how sick and
tired I am of <em>all the warnings</em> and the resulting almost completely
unreadable code.</p>

<p><a href="http://blog.codinghorror.com/when-understanding-means-rewriting/">We spend a lot of time reading code</a>,
so it should be enjoyable and easy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recent Open Source Work]]></title>
    <link href="http://troglobit.github.io/blog/2015/01/08/recent-open-source-work/"/>
    <updated>2015-01-08T01:57:14+01:00</updated>
    <id>http://troglobit.github.io/blog/2015/01/08/recent-open-source-work</id>
    <content type="html"><![CDATA[<p>I&rsquo;m a coder, not a writer.  Here&rsquo;s what I&rsquo;ve been working on during the
winter holidays:</p>

<ul>
<li>A new feature release of <a href="http://troglobit.github.io/finit.html">Finit</a> is coming shortly, which
will use <a href="https://github.com/troglobit/libuev">libuEv</a> and feature
inetd support built-in!</li>
<li>Another minor release of my own take on event loops,
<a href="https://github.com/troglobit/libuev">libuEv</a>
<a href="https://github.com/troglobit/libuev/releases/tag/v1.0.3">v1.0.3</a>.
This time with a heavy focus on documentation and Q&amp;A, extensive
validation testing have been done on this release.</li>
<li>Released another minor release of <a href="http://troglobit.github.io/mrouted.html">mrouted</a>,
<a href="https://github.com/troglobit/mrouted/releases/tag/3.9.7">v3.9.7</a>,
which despite its age, and all other obvious limitations of
<a href="http://en.wikipedia.org/wiki/Distance_Vector_Multicast_Routing_Protocol">DVMRP</a>,
is still one of the best options for <em>dynamic</em> multicast routing
available today.</li>
<li><p>Major new release of <a href="http://troglobit.github.io/pimd.html">pimd</a>,
<a href="https://github.com/troglobit/pimd/releases/tag/2.2.0">v2.2.0</a>, which
is likely the last release ever of the old pimd, unless someone starts
paying me to work on it.</p>

<p>&hellip; or more people step up to help.  Both the Xorp PIM-SM and the
upcoming Quagga PIM-SSM implementations are in better shape.  The only
thing old pimd has got going for it is the license.  It&rsquo;s 3-clause
BSD, so very liberal.</p></li>
</ul>


<p>If you&rsquo;re interested in pitching in, on any of my projects, just send me
an email or connect with me on GitHub!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog Restoration Project]]></title>
    <link href="http://troglobit.github.io/blog/2015/01/02/blog-restoration-project-now-also-on-github-pages/"/>
    <updated>2015-01-02T14:12:59+01:00</updated>
    <id>http://troglobit.github.io/blog/2015/01/02/blog-restoration-project-now-also-on-github-pages</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve had this long-standing issue with backups.  It&rsquo;s deadly boring to
set up and maintain, so I don&rsquo;t do any.  Until today!</p>

<p>Today I moved the sources for my <a href="http://troglobit.com">Octopress blag</a>
to GitHub, which also prompted me to set up
<a href="http://troglobit.github.io">a mirror</a> on
<a href="http://pages.github.io">GitHub Pages</a>.  As usual, reading up on the
subject and muster enough motivation took me about three months, whereas
the actual work took about 4h.</p>

<!-- more -->


<p>I now have a concoction of mixed remotes, multiple branches and some
Ruby magic to administer it all with!  Here are some links I used to
get where I am:</p>

<ul>
<li><a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></li>
<li><a href="https://help.github.com/articles/creating-project-pages-manually/">https://help.github.com/articles/creating-project-pages-manually/</a></li>
<li><a href="https://help.github.com/articles/user-organization-and-project-pages/">https://help.github.com/articles/user-organization-and-project-pages/</a></li>
<li><a href="http://www.tomordonez.com/blog/2012/06/04/creating-a-github-blog-using-octopress/">http://www.tomordonez.com/blog/2012/06/04/creating-a-github-blog-using-octopress/</a></li>
<li><a href="http://miguelcamba.com/blog/2013/04/22/tutorial-create-a-blog-with-octopress-and-host-it-in-github-pages/">http://miguelcamba.com/blog/2013/04/22/tutorial-create-a-blog-with-octopress-and-host-it-in-github-pages/</a></li>
<li><a href="http://octopress.org/docs/deploying/github/">http://octopress.org/docs/deploying/github/</a></li>
</ul>


<p>With some added <code>apt-get intall ruby ruby-bundler</code> magic in Ubuntu
everything started to look normal &ndash; now I could even do <code>rake preview</code>
before deploying!  Only a minor problem I had before getting everything
working was this:</p>

<blockquote><p>/usr/local/rvm/gems/ruby-2.1.2/gems/execjs-2.2.0/lib/execjs/runtimes.rb:51:in `autodetect&#8217;:
Could not find a JavaScript runtime. See <a href="https://github.com/sstephenson/execjs">https://github.com/sstephenson/execjs</a>
for a list of available runtimes. (ExecJS::RuntimeUnavailable)</p></blockquote>

<p>Turns out I had to install nodejs as well, dunno why.</p>

<pre><code>sudo apt install nodejs
</code></pre>

<p>Since I wanted a mirrored setup I chose to have Octopress setup default
to deploy to GitHub Pages.  Then I simply rsync the whole shebang to my
own server.</p>

<p>All this means I can now finally begin restoring more content from
<a href="http://troglobit.github.io/blog/2013/02/17/resurrection/">my old blog</a> thanks to partial backups
I&rsquo;ve found at the <a href="https://archive.org/">Wayback Machine</a> :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mrouted v3.9.7]]></title>
    <link href="http://troglobit.github.io/blog/2014/12/28/mrouted-v3-dot-9-7/"/>
    <updated>2014-12-28T19:38:06+01:00</updated>
    <id>http://troglobit.github.io/blog/2014/12/28/mrouted-v3-dot-9-7</id>
    <content type="html"><![CDATA[<p>Another release today is the venerable <a href="http://troglobit.github.io/mrouted.html">mrouted</a>, now
available as
<a href="https://github.com/troglobit/mrouted/releases/tag/3.9.7">v3.9.7 on GitHub</a>.</p>

<!-- more -->


<h2>Changes &amp; New Features</h2>

<ul>
<li>SNMP Support removed.  It never compiled and would have likely
needed a complete refactor to support modern AgentX.</li>
<li>Replaced static <code>config.mk</code> with configure script from pimd</li>
<li>RSRR Support now disabled by default, use <code>--enable-rsrr</code> to configure
script to re-enable</li>
<li>Possible to start with <code>mrouted</code> disabled on all interfaces by
default.  Use <code>enable</code> to .conf <code>phyint</code> directive and <code>-M/-N</code> command
line options to control behavior, default is same as before.  Thanks
to Joseph Gooch (<a href="https://github.com/goochjj">@goochjj</a>) for this feature!</li>
<li>Add David Waitzman and Craig Partridge to list of original authors
of <code>mrouted</code>, after being by Mr Waitzman :)</li>
<li>Change to use <code>stdint.h</code> types instead of unsafe homegrown types</li>
</ul>


<h2>Bug Fixes</h2>

<ul>
<li>Fix issue with older BSD kernels, mainly for current FreeBSD 10 and
older, that don&rsquo;t really give RAW sockets but byte swap <code>ip_len</code>
field, Olivier Cochard-Labbé (<a href="https://github.com/ocochard">@ocochard</a>)</li>
<li>Build fixes for FreeBSD, should make maintaining ports easier :)</li>
<li>Change from <code>select()</code> to <code>poll()</code> due to descriptor limits, e.g.,
on BSD.</li>
<li>UNIX 2038 first audit, inspired by OpenBSD.  Cleanup type confusion
<code>int/u_long</code> where it should be <code>time_t</code>.  Also, clarify that <code>genid</code>
is OK, since it&rsquo;s used and stored as unsigned 32-bit integer.</li>
<li>Lots of minor fixes detected by Coverity Scan and Clang scan-build
<a href="https://scan.coverity.com/projects/3320">https://scan.coverity.com/projects/3320</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pimd v2.2.0 -- the Last Release of Pimd?]]></title>
    <link href="http://troglobit.github.io/blog/2014/12/28/last-release-of-pimd/"/>
    <updated>2014-12-28T13:42:18+01:00</updated>
    <id>http://troglobit.github.io/blog/2014/12/28/last-release-of-pimd</id>
    <content type="html"><![CDATA[<p>On one of the last days of 2014 I release <a href="http://troglobit.github.io/pimd.html">pimd</a>
<a href="https://github.com/troglobit/pimd/releases/tag/2.2.0">v2.2.0</a>, which
is an awesome release with a lot of new features and bug fixes!</p>

<p>However, it could very well be the last release I do.  Even though its
one of my most popular projects on
<a href="https://github.com/troglobit">GitHub</a> I have not had enough time to
dedicate to it over the years.  I will continue to do fixes and merge
pull requests until someone else steps up to take over.  There is also
the distinct possibility that the
<a href="https://github.com/greearb/xorp.ct">Xorp PIM-SM</a> or the new
<a href="https://github.com/udhos/qpimd">Quagga PIM-SSM</a> implementations will
(finally) make good old pimd completely redundant.</p>

<p>At <a href="http://www.westermo.com">work</a> we will likely start using the
Quagga PIM rather than pimd in WeOS.</p>

<p>For now though, enjoy pimd v2.2.0.  It&rsquo;s been tested in both my Qemu
based virtual testbed and a few setups using Linux&#8217; <code>netns</code> feature in
<a href="http://www.nrl.navy.mil/itd/ncs/products/core">CORE</a> &ndash; awesome
little proggy! :-)</p>

<!-- more -->


<h3>Changes &amp; New Features</h3>

<ul>
<li>Add IP fragmentation support for PIM register messages,
by Michael Fine of Cumulus Networks</li>
<li>Support <code>/LEN</code> syntax in <code>phyint</code> to complement <code>masklen LEN</code>, issue #12</li>
<li>Add support for /31 networks, point-to-point, thanks to Apollon Oikonomopoulos</li>
<li>Remove old broken SNMP support</li>
<li>OpenBSD inspired cleanup (deregister)
<a href="http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.sbin/mrouted/">http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.sbin/mrouted/</a></li>
<li>General code cleanup, shorten local variable names, func decl. etc.</li>
<li>Support for router alert IP option in IGMP queries</li>
<li>Support for reading IGMPv3 membership reports</li>
<li>Update IGMP code to support FreeBSD >= 8.x</li>
<li>Retry read of routing tables on FreeBSD</li>
<li>Fix join/leve of ALL PIM Routers for FreeBSD and other UNIX kernels</li>
<li>Tested on FreeBSD, NetBSD and OpenBSD</li>
<li>Add very simple homegrown configure script</li>
<li>Update and document support for <code>rp_address</code>, <code>cand_rp</code>, and <code>cand_bootstrap_router</code></li>
<li>Add new <code>spt_threshold</code> to replace existing <code>switch_register_threshold</code>
and <code>switch_data_threshold</code> settings.  Cisco like and easier to understand</li>
</ul>


<h3>Bug Fixes</h3>

<ul>
<li>Fix to avoid infinite loop during unicast send failure, by Alex Tessmer</li>
<li>Fix bug in bootstrap when configured as candidate RP, issue #15</li>
<li>Fix segfault in <code>accept_igmp()</code>, issue #29</li>
<li>Fix default source preference, should be 101 (not 1024!)</li>
<li>Fix <code>ip_len</code> handling on older BSD&rsquo;s, thanks to Olivier Cochard-Labbé, issue #23</li>
<li>Fix default prefix len in static RP example in <code>pimd.conf</code>, should be /4</li>
<li>Fix issue #31: Make IGMP query interval and querier timeout configurable</li>
<li>Fix issue #33: pimd does not work in background under FreeBSD</li>
<li>Fix issue #35: support for timing out other queriers from mrouted</li>
<li>Hopefully fix issue #22: Crash in (S,G) state when neighbor is lost</li>
<li>Misc. bug fixes thanks to Coverity Scan, static code analysis tool
<a href="https://scan.coverity.com/projects/3319">https://scan.coverity.com/projects/3319</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TFTP Blocksize Negotiation in Uftpd v1.7]]></title>
    <link href="http://troglobit.github.io/blog/2014/12/21/tftp-blocksize-negotiation-in-uftpd-v1-dot-7/"/>
    <updated>2014-12-21T19:42:17+01:00</updated>
    <id>http://troglobit.github.io/blog/2014/12/21/tftp-blocksize-negotiation-in-uftpd-v1-dot-7</id>
    <content type="html"><![CDATA[<p>New release of uftpd, this time with TFTP blocksize negotiation,
<a href="http://tools.ietf.org/html/rfc2348">RFC 2348</a>.  Making it a lot
faster to transfer files over TFTP.</p>

<p><a href="http://troglobit.github.io/uftpd.html">Try it out!</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HowTo: Add Multicast Routing to FreeBSD Kernel]]></title>
    <link href="http://troglobit.github.io/blog/2014/09/23/howto-add-multicast-routing-support-to-the-freebsd-kernel/"/>
    <updated>2014-09-23T01:55:19+02:00</updated>
    <id>http://troglobit.github.io/blog/2014/09/23/howto-add-multicast-routing-support-to-the-freebsd-kernel</id>
    <content type="html"><![CDATA[<p>This is a very short blog post, mostly intended as a reminder to myself.
Basically, there are two methods of adding multicast routing support to
the FreeBSD kernel:</p>

<ol>
<li>Rebuild the kernel with <code>options MROUTING</code></li>
<li>Load the kernel module: <code>kldload ip_mroute</code></li>
</ol>


<p>The kernel rebuild assumes the <code>src.txz</code> set was installed previously.</p>

<pre><code>cd /usr/src
cd sys/amd64/conf
cat GENERIC | sed 's/GENERIC$/MULTICAST/' &gt; MULTICAST
echo 'options   MROUTING         # Multicast routing' &gt;&gt; MULTICAST
echo 'options   PIM              # Enable for pimd'   &gt;&gt; MULTICAST
cd -
make kernel KERNCONF=MULTICAST
reboot
</code></pre>

<p>That&rsquo;s it.  Remember to make sure your Qemu VM has enough RAM or it
will probably page fault on you.  I use 1,0 GB RAM.</p>

<p>The other option, to load the ready made module, is likely better.  But
you want it to load at boot.  So add this to <code>/boot/loader.conf</code>:</p>

<pre><code>ip_mroute_load="yes"
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GnuTLS Support in Inadyn and Fixes to Uftpd]]></title>
    <link href="http://troglobit.github.io/blog/2014/09/13/gnutls-support-in-inadyn-and-fixes-to-uftpd/"/>
    <updated>2014-09-13T19:18:56+02:00</updated>
    <id>http://troglobit.github.io/blog/2014/09/13/gnutls-support-in-inadyn-and-fixes-to-uftpd</id>
    <content type="html"><![CDATA[<p>Quite a few changes lately.  I finally got around to adding support
for <a href="http://www.gnutls.org">GnuTLS</a> to <a href="http://troglobit.github.io/inadyn.html">Inadyn</a>,
hopefully this will get into Debian &hellip; unless the Jessie freeze
prevents that.</p>

<p>Also, thanks to a friend of mine trying out <a href="http://troglobit.github.io/uftpd.html">uftpd</a>
recently I discovered that libuev has been missing from the tarball
since the release of the TFTP support.  Fixed.</p>

<p>Another great piece of news is that
<a href="http://www.coverity.com/">Coverity</a> accepted uftpd as an Open Source
project, I&rsquo;ve been hard at work fixing nasty bugs uncovered by the
<a href="https://scan.coverity.com/">Coverity Scan</a>.  Great stuff! :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bugfix Release of Uftpd]]></title>
    <link href="http://troglobit.github.io/blog/2014/09/04/bugfix-release-of-uftpd/"/>
    <updated>2014-09-04T22:22:09+02:00</updated>
    <id>http://troglobit.github.io/blog/2014/09/04/bugfix-release-of-uftpd</id>
    <content type="html"><![CDATA[<blockquote><p>So them pesky details of `/etc/inetd.conf` really are important?</p></blockquote>


<p>This is a small bugfix release of <a href="http://troglobit.github.io/uftpd.html">uftpd</a>.  Version 1.4
is basically just to change <code>nowait</code> to <code>wait</code> for the TFTP service in
<code>/etc/inetd.conf</code>, but there&rsquo;s also a minor man page update.</p>

<p>Enjoy! :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Awesome Uftpd, Now With TFTP Support! :)]]></title>
    <link href="http://troglobit.github.io/blog/2014/09/02/new-release-of-the-awesome-uftpd/"/>
    <updated>2014-09-02T10:47:35+02:00</updated>
    <id>http://troglobit.github.io/blog/2014/09/02/new-release-of-the-awesome-uftpd</id>
    <content type="html"><![CDATA[<p>Today sees the release of v1.3 of the awesome little uftpd. The main
news is the new TFTP support!  Just like before you don&rsquo;t need any
configuration file, just build and install &ndash; or build a .deb file and
install.</p>

<p>This release completes the main purpose of uftpd for me, I can now use
it as my daily driver and fully replace vsftpd and tftpd-hpa, which to
me are the next best.</p>

<p>What&rsquo;s left then, you ask?  Well, TFTP upload support, TFTP segment
size negotiation and possibly multiple user support in FTP.  As
always, patches are most welcome.  See the
<a href="http://troglobit.github.io/uftpd.html">uftpd homepage</a> and my
<a href="https://github.com/troglobit/uftpd/">GitHub project</a> for details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HowTo Rebase Without an Origin]]></title>
    <link href="http://troglobit.github.io/blog/2014/08/27/howto-rebase-without-an-origin/"/>
    <updated>2014-08-27T10:00:13+02:00</updated>
    <id>http://troglobit.github.io/blog/2014/08/27/howto-rebase-without-an-origin</id>
    <content type="html"><![CDATA[<p>OK, so you&rsquo;ve just been handed the task to integrate a big piece of
corporate software and it&rsquo;s nowhere near as done and ready as project
management thinks.  Of course you&rsquo;ve already started chugging away at
it, fixing bugs, refactoring code and wrapping it in neat containers
to keep the changeset against the base SW small &ndash; you already know
you&rsquo;ll get another drop of the same stinking pieace of code in another
six months, so you keep the changes small and track them in GIT with
neatly formatted commit messages.</p>

<p>About ten commits in it dawns on you that you have several commits
that would need to be squashed and some commit messages that needs to
be edited &hellip; you start typing in <code>git rebase -i origin/...</code> wait, you
haven&rsquo;t pushed anything yet.  So how do you rebase something that&rsquo;s
not been pushed yet?</p>

<p>Well:</p>

<pre><code>git rebase --interactive --root master
</code></pre>

<p>Tip courtesy of my friend and collegue <a href="https://github.com/wkz">wkz</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On the Demise of Free(code) ...]]></title>
    <link href="http://troglobit.github.io/blog/2014/06/29/on-the-demise-of-free-code-dot-dot-dot/"/>
    <updated>2014-06-29T14:52:39+02:00</updated>
    <id>http://troglobit.github.io/blog/2014/06/29/on-the-demise-of-free-code-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>I feel I have to write something about the demise of
<a href="http://freecode.com">free(code)</a>.
<a href="http://esr.ibiblio.org/?p=5936">Others</a> have written about it too,
and its been covered on <a href="http://lwn.net/Articles/603403/">lwn.net</a> as
well.</p>

<p>It&rsquo;s actually a rather depressing development.  They claim it&rsquo;s due to
the low traffic and decline in updates, but it&rsquo;s evident that&rsquo;s not
the whole truth.  The owners recommend their other site, SourceForge,
but anyone having been in the loop for the last decade or two knows
that SourceForge has been in a slow decline for a long time, more so
than free(code) in my opinion.  Also, SourceForge only lists its own
projects, and only the most active or &ldquo;top&rdquo; projects.</p>

<p>I never used free(code) to find the &ldquo;top&rdquo; projects or the most active
ones.  That&rsquo;s completely useless to me.  I went there to dig for small
unknown projects, small gems that are usually unlisted on GitHub or
SourceForge.  I went there to publicize my own small creations, learn
about other similar projects and get a quick feedback on recent
changes of new releases to projects I was interested in.</p>

<!-- more -->


<p>There exist no real replacement to free(code), except perhaps for
<a href="https://www.openhub.net/">Open Hub</a>, previously known as
<a href="http://www.ohloh.net">Ohloh</a>.  The
<a href="http://directory.fsf.org">Free Software Directory</a> could perhaps have
become something over time, but unfortunately feels like yet another
<a href="http://www.catb.org/esr/writings/cathedral-bazaar/">Cathedral Style</a>
project from the FSF.  Don&rsquo;t get me wrong, I love the FSF and almost
everything they do, but they often get lost in their old tradition of
big closed off idealistic projects.  Eric S. Raymond has
<a href="http://esr.ibiblio.org/?p=5948">a proposal</a> for replacing free(code)
and he is that sort of pragmatic person that could get something off
the ground.  In any case it&rsquo;ll be interesting, I&rsquo;m sure.</p>

<p>Some people say all the action is on GitHub these days, but that&rsquo;s
just like an echo of the glory days of CVS, Subversion and the start
of the new millenia when we should all use SourceForge.  Been there,
done that, and yes I do use GitHub, but again it doesn&rsquo;t list anything
but GitHub projects &hellip;</p>

<p>Other people say that to promote your small projects you need to
become active in a Linux distro, or write about them in magazines or
on <a href="http://hackerne.ws">Hacker News</a> &hellip; well, I&rsquo;d like very much to
become a Debian developer one day, but the process to become one seems
so increadibly daunting!  Also, I&rsquo;m not a writer, nor am I a native
English speaker, I&rsquo;m
<a href="http://c2.com/cgi/wiki?JustaProgrammer">just a programmer</a> and I
really miss free(code)!</p>

<p>I don&rsquo;t expect this blog to have any readers at all, so using it as
the sole platform for announcing new releases is rather pointless.  So
I&rsquo;ve started playing around with
<a href="https://www.openhub.net/accounts/troglobit">Open Hub</a> for my own most
relevant projects.  It has some nice stats and other useful features
that I can use.  Hopefully it can serve as a replacement for my most
basic needs.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Releases of Uftpd and Inadyn ...]]></title>
    <link href="http://troglobit.github.io/blog/2014/05/20/new-release-of-uftpd-and-inadyn-dot-dot-dot/"/>
    <updated>2014-05-20T21:08:25+02:00</updated>
    <id>http://troglobit.github.io/blog/2014/05/20/new-release-of-uftpd-and-inadyn-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>The last couple of weeks have both seen the birth of the fabulous
<a href="http://troglobit.github.io/uftpd.html">uftpd</a> and a reignited <a href="http://troglobit.github.io/inadyn.html">inadyn</a> project!
Yesterday v1.2 of uftpd was released and today Inadyn saw the first
working HTTPS support being released as v1.99.8!  This is likely the
last release of Inadyn before the big 2.0, which will introduce the
new .conf file format based on
<a href="http://www.nongnu.org/confuse/">libConfuse</a>.  A .conf file
feasibility study was
<a href="http://troglobit.github.io/blog/2014/02/23/weekend-hack-json-vs-conf/">presented earlier</a> &hellip;</p>

<p>The uftpd project is completely based on user input, currently mostly
mine.  I will add features and bug fixes when I need them, unless I
get more input.  So I welcome anyone to clone it on GitHub and hack
away.  As usual, I will accept any sane patches that adhere to the
coding style and is well written.  The same goes for Inadyn, only with
the added request that the changes are thoroughly tested first, since
I cannot maintain multiple accounts on various DDNS providers myself.</p>

<p>Patches to support flavors of UNIX other than GNU/Linux, including
GNU/Hurd, or even other operating systems are also welcome, as long as
it&rsquo;s not Windows.  I will not maintain any Windows support since I
don&rsquo;t use it myself.  If you want Windows support you will have to
take a very active co-maintainer role in the respective project.</p>
]]></content>
  </entry>
  
</feed>
