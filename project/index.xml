<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Troglobit</title>
    <link>/project/</link>
    <description>Recent content in Projects on Troglobit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>troglobit@gmail.com (Joachim Nilsson)</managingEditor>
    <webMaster>troglobit@gmail.com (Joachim Nilsson)</webMaster>
    <lastBuildDate>Thu, 07 Sep 2017 01:32:00 +0200</lastBuildDate>
    
	<atom:link href="/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Minix Editline</title>
      <link>/project/editline/</link>
      <pubDate>Thu, 07 Sep 2017 01:32:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/editline/</guid>
      <description>This is a line editing library for UNIX. It can be linked into almost any program to provide command line editing and history. It is call compatible with the FSF readline library, but is a fraction of the size (and offers fewer features).
The small size (&amp;lt;30k), lack of dependencies (no ncurses needed!) and the free license should make this library interesting to many embedded developers seeking a replacement for the GNU readline library.</description>
    </item>
    
    <item>
      <title>Small and Simple DDNS Client</title>
      <link>/project/inadyn/</link>
      <pubDate>Thu, 10 Aug 2017 09:42:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/inadyn/</guid>
      <description>Inadyn is a small and simple Dynamic DNS, DDNS, client with HTTPS support. It is commonly available in many GNU/Linux distributions, used in off-the-shelf routers and Internet gateways to automate the task of keeping your DNS record up to date with any IP address changes from your ISP. It can also be used in installations with redundant (backup) connections to the Internet.
Supported Providers The following is a curated list of some of the natively supported DDNS providers.</description>
    </item>
    
    <item>
      <title>The original PIM-SM daemon</title>
      <link>/project/pimd/</link>
      <pubDate>Wed, 12 Jul 2017 20:17:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/pimd/</guid>
      <description>pimd is a lightweight standalone PIM-SM/SSM v2 multicast routing daemon. It is the original USC (netweb/catarina.usc.edu) implementation of the protocol, RFC 2362. Today pimd strives for full RFC compliance, including RFC 4601, RFC 5059, and RFC 5796, with the v2.3.0 release supporting both PIM-SSM and IGMPv3.
In 2003 the OpenBSD project managed to convince Stanford in to change the license of mrouted. This in turn also freed pimd, since it is built with DNA strands from mrouted.</description>
    </item>
    
    <item>
      <title>Mini SNMP daemon</title>
      <link>/project/mini-snmpd/</link>
      <pubDate>Tue, 27 Jun 2017 10:36:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/mini-snmpd/</guid>
      <description>This is an SNMP server for small and embedded systems, currently Linux and FreeBSD are supported. It is easily portable to other UNIX systems since it&amp;rsquo;s written in C. The daemon is very small (~40 kiB) and does not have nowhere near the feature set of Net-SNMP, therefore it has a very low impact on system resources.
Features:
 Supports SNMP version 1 and 2c Supports SNMP get, getnext and getbulk Supports both IPv4 and IPv6 Supports communication over UDP and TCP sockets Supports the most important performance data (uptime, CPU load, memory usage) Supports the most important network data (bytes/packets in/out, error counts) Supports the most important disk data (disk space/inodes available/used/free) Tested with net-snmp, cacti, and MRTG</description>
    </item>
    
    <item>
      <title></title>
      <link>/project/smcroute-conf/</link>
      <pubDate>Tue, 13 Jun 2017 23:15:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/smcroute-conf/</guid>
      <description># # smcroute.conf example # # The configuration file supports joining multicast groups, to use # Layer-2 signaling so that switches and routers open up multicast # traffic to your interfaces. Leave is not supported, remove the # mgroup and SIGHUP your daemon, or send a specific leave command. # # NOTE: Use of the mgroup command should be avoided if possible. # Instead configure &amp;ldquo;router ports&amp;rdquo; or similar on the switches # or bridges on your LAN.</description>
    </item>
    
    <item>
      <title>Static Multicast Routing Daemon</title>
      <link>/project/smcroute/</link>
      <pubDate>Tue, 13 Jun 2017 23:15:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/smcroute/</guid>
      <description>SMCRoute is a daemon and command line tool to manipulate the multicast routing table in the UNIX kernel. Both FreeBSD and Linux kernels are supported, but it may work on other systems as well.
SMCRoute can be used as an alternative to dynamic multicast routing daemons like mrouted or pimd when (only) static multicast routes should be maintained and/or no proper IGMP signalling exists.
Features  Configuration file support, /etc/smcroute.</description>
    </item>
    
    <item>
      <title>System &amp; Process Supervisor for Linux</title>
      <link>/project/watchdogd/</link>
      <pubDate>Sun, 09 Apr 2017 14:52:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/watchdogd/</guid>
      <description>watchdogd(8) is an advanced system and process supervisor daemon. It can monitor critical system resources, supervise the heartbeat of processes, record deadline transgressions, and reset the system on software lockups.
When a system comes back up after a reset, watchdogd determines the reset cause and records it in a logfile for later analysis by an operator or network management system (NMS). This information can be used to put the system in an operational safe state, or non-operational safe state.</description>
    </item>
    
    <item>
      <title>No nonsense FTP/TFTP server</title>
      <link>/project/uftpd/</link>
      <pubDate>Wed, 22 Mar 2017 08:00:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/uftpd/</guid>
      <description>Tired of confusing configuration files and security features you don&amp;rsquo;t need?
Try uftpd(8)!
 Supports both FTP and TFTP Has no confusing configuration file Listens to port ftp/tcp and tftp/udp found in /etc/services, or custom port(s) Serves files from the ftp user&amp;rsquo;s $HOME, as specified in /etc/passwd, or custom path Can run from inetd(8) or as a standalone daemon Can be built and installed as a .deb file, with debconf support Can run as root, with chroot and privsep, or as a regular user Supports TFTP blocksize negotiation, RFC 2348  Basically, it just works!</description>
    </item>
    
    <item>
      <title></title>
      <link>/project/finit/</link>
      <pubDate>Fri, 04 Dec 2015 19:39:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/finit/</guid>
      <description>Finit is a small event based SysV init replacement with built-in process supervision, similar to that of its more famous cousins daemontools and runit &amp;ndash; Services are supervised and automatically restarted if they fail.
Finit primarily targets small and embedded Linux systems by heavily reducing the amount of context switches, forks, and calls to external tools that most other init daemons suffer from.
Finit supports runlevels, process monitoring, and starting/stopping services on demand &amp;ndash; either with the built-in inetd support, or by triggering on free-form conditions.</description>
    </item>
    
    <item>
      <title>Micro Tetris&amp;trade;</title>
      <link>/project/tetris/</link>
      <pubDate>Thu, 08 Jan 2015 01:50:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/tetris/</guid>
      <description>Micro Tetris &amp;mdash; one of the smallest Tetris implementations in the world! Utilizing only ANSI escape sequences to draw the board, no external library dependencys other than a standard C-library, like uClibc or musl libc. Hence, it is very suitable for small embedded devices in need of an easter egg ;-)
The game is based on a 1989 International Obfuscated C Code Contest (IOCCC) entry made by John Tromp.</description>
    </item>
    
    <item>
      <title>The original multicast routing daemon</title>
      <link>/project/mrouted/</link>
      <pubDate>Sun, 28 Dec 2014 16:25:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/mrouted/</guid>
      <description>mrouted is an implementation of the IPv4 DVMRP multicast routing protocol, RFC 1075. It is capable of turning a UNIX workstation, or an embedded Linux device, into a multicast router with tunnelling support, in order to cross non-multicast-aware routers.
DVMRP is a distance vector based protocol, derived from RIP, suitable for closely located multicast users in smaller networks. It simply floods all multicast streams to all routers, i.e. implicit join. This is also known as &amp;ldquo;flood and prune&amp;rdquo; since you can opt out from groups you do not want.</description>
    </item>
    
    <item>
      <title>Micro Snake</title>
      <link>/project/snake/</link>
      <pubDate>Sun, 07 Jul 2013 10:28:00 +0200</pubDate>
      <author>troglobit@gmail.com (Joachim Nilsson)</author>
      <guid>/project/snake/</guid>
      <description>Welcome to Micro Snake, based on an original implementation by Simon Huggins. This version of the snake game is very small, utilizing only ANSI escape sequences to draw the board, no external library dependencys other than a standard C-library, like uClibc. Hence, it is very suitable for todays small embedded devices.
The aim of the game is to collect the gold ($), avoid cactuses (*), borders, and colliding with the snake itself.</description>
    </item>
    
  </channel>
</rss>