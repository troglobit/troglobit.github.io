<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>howto on Joachim Wiberg</title>
    <link>https://troglobit.com/categories/howto/</link>
    <description>Recent content in howto on Joachim Wiberg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>UNIX&amp;trade; 4Life! &amp;#9994;</copyright>
    <lastBuildDate>Sun, 01 Aug 2021 08:31:12 +0200</lastBuildDate>
    
	<atom:link href="https://troglobit.com/categories/howto/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HowTo: Add Multicast Routing to FreeBSD kernel</title>
      <link>https://troglobit.com/howtos/mrouting-in-freebsd/</link>
      <pubDate>Sun, 01 Aug 2021 08:31:12 +0200</pubDate>
      
      <guid>https://troglobit.com/howtos/mrouting-in-freebsd/</guid>
      <description>This is a very short blog post, mostly intended as a reminder to myself. Basically, there are two methods of adding multicast routing support to the FreeBSD kernel:
 Rebuild the kernel with options MROUTING Load the kernel module: kldload ip_mroute  The kernel rebuild assumes the src.txz set was installed previously.
cd /usr/src cd sys/amd64/conf cat GENERIC | sed &#39;s/GENERIC$/MULTICAST/&#39; &amp;gt; MULTICAST echo &#39;options MROUTING # Multicast routing&#39; &amp;gt;&amp;gt; MULTICAST echo &#39;options PIM # Enable for pimd&#39; &amp;gt;&amp;gt; MULTICAST cd - make kernel KERNCONF=MULTICAST reboot  That&amp;rsquo;s it.</description>
    </item>
    
    <item>
      <title>HowTo use NetBSD pre-built packages</title>
      <link>https://troglobit.com/howtos/netbsd-pkgsrc/</link>
      <pubDate>Sat, 22 Aug 2020 21:39:00 +0100</pubDate>
      
      <guid>https://troglobit.com/howtos/netbsd-pkgsrc/</guid>
      <description>Reminder to self: you need to set up the PKG_PATH to the correct FTP URI. Also, use the correct ARCH, otherwise the installer complains. Do not use amd64, but rather x86_64.
Here it is, you&amp;rsquo;d think this be something the installer could set up a default for &amp;hellip;
PKG_PATH=http://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/amd64/6.1.5/All/  or if you use the latest on an old ThinkPad T42:
PKG_PATH=http://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/i386/9.0/All/  The simply
pkg_add -v git  Or so you might think!</description>
    </item>
    
    <item>
      <title>HowTo play with SNMP</title>
      <link>https://troglobit.com/howtos/snmp/</link>
      <pubDate>Sat, 05 May 2018 13:57:00 +0200</pubDate>
      
      <guid>https://troglobit.com/howtos/snmp/</guid>
      <description>This mini HowTo describes how to use the SNMP client tools to retrieve human readable information from devices running an SNMP daemon. In the examples below mini-snmpd is used as the daemon and as client both the command line net-snmp tool and the snmpB GUI are used.
Personally I use both Ubuntu and Debian, so the tools I use to download the clients will reflect that. See your respective UNIX distro&amp;rsquo;s help pages for how to install these client tools in your operating system.</description>
    </item>
    
    <item>
      <title>HowTo run pimd on FreeBSD</title>
      <link>https://troglobit.com/howtos/pimd-on-freebsd/</link>
      <pubDate>Sun, 27 Sep 2015 18:45:00 +0200</pubDate>
      
      <guid>https://troglobit.com/howtos/pimd-on-freebsd/</guid>
      <description>This is not a proper HowTo, more of a &amp;ldquo;note to self&amp;rdquo; after having created a setup to test pimd issue #57. For these notes the following virtual topology, running on Ubuntu 15.10 with Linux 4.2 and Qemu 2.3.0, is used:
.--------. net1 .----. net2 .----. net3 .----------. | Sender |------| R2 |------| R3 |------| Receiver | &amp;#39;--------&amp;#39; &amp;#39;----&amp;#39; &amp;#39;----&amp;#39; &amp;#39;----------&amp;#39; The networks between the boxes are actually Linux bridge devices (br), on which you may have to disable IGMP/MLD snooping to get pimd to run smoothly.</description>
    </item>
    
    <item>
      <title>HowTo run pimd on OpenBSD</title>
      <link>https://troglobit.com/howtos/pimd-on-openbsd/</link>
      <pubDate>Sun, 19 Jul 2015 00:32:00 +0200</pubDate>
      
      <guid>https://troglobit.com/howtos/pimd-on-openbsd/</guid>
      <description>This is an introduction to HowTo run pimd on OpenBSD. I keep it around mostly as a reminder to myself when testing new pimd releases, maybe someone else can make use of it as well.
First of all, my sincere thanks to the OpenBSD team for, not just an awesome UNIX distribution, but also for their good taste in shipping a MULTICAST enabled kernel in the base distribution! On both NetBSD and FreeBSD there is a bit of work to get multicast support, which is one of the reasons for my not writing a HowTo for either of them atm.</description>
    </item>
    
    <item>
      <title>HowTo: Using -lite with a GIT-based application</title>
      <link>https://troglobit.com/2015/07/02/howto-using-lite-with-a-git-based-application/</link>
      <pubDate>Thu, 02 Jul 2015 17:11:55 +0000</pubDate>
      
      <guid>https://troglobit.com/2015/07/02/howto-using-lite-with-a-git-based-application/</guid>
      <description>&lt;p&gt;Years ago while looking for a fast &lt;a href=&#34;https://en.wikipedia.org/wiki/Init&#34;&gt;init&lt;/a&gt; replacement for &lt;a href=&#34;http://westermo.com/&#34;&gt;work&lt;/a&gt;,
I found &lt;a href=&#34;http://helllabs.org/finit/&#34;&gt;Finit&lt;/a&gt;.  Originally written by &lt;a href=&#34;https://github.com/cmatsuoka&#34;&gt;Claudio Matsuoka&lt;/a&gt; to act
as a drop-in replacement for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Asus_Eee_PC&#34;&gt;Asus EeePC&lt;/a&gt; &lt;a href=&#34;http://wiki.eeeuser.com/boot_process:the_boot_process&#34;&gt;fastinit&lt;/a&gt;, &lt;em&gt;&amp;ldquo;gaps
filled with frog DNA …&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Until I found Finit I had always been in awe of those venturing into the
realm of &lt;a href=&#34;http://0pointer.net/blog/&#34;&gt;PID 1&lt;/a&gt;.  However, learning from the simplicity of Claudio&amp;rsquo;s
code I realized that although PID 1 at times is indistinguishable from
magic, it is really not that hard to master.  &lt;a href=&#34;https://github.com/troglobit/finit&#34;&gt;My version of Finit&lt;/a&gt;
is available on GitHub.&lt;/p&gt;
&lt;p&gt;The code is open sourced under the very liberal &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT/X11 license&lt;/a&gt;,
and much of its frog DNA has proven very useful to me over the years.
This blog post is about how that frog DNA can help you fill gaps in your
projects …&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HowTo: Push to multiple GIT repos with one command</title>
      <link>https://troglobit.com/2015/07/01/howto-push-to-multiple-git-repos-with-one-command/</link>
      <pubDate>Wed, 01 Jul 2015 00:42:17 +0000</pubDate>
      
      <guid>https://troglobit.com/2015/07/01/howto-push-to-multiple-git-repos-with-one-command/</guid>
      <description>&lt;p&gt;So, now that I have &lt;a href=&#34;http://git.troglobit.com&#34;&gt;http://git.troglobit.com&lt;/a&gt; setup as a backup GIT repo
to &lt;a href=&#34;https://github.com/troglobit,&#34;&gt;https://github.com/troglobit,&lt;/a&gt; I needed a &lt;em&gt;simple&lt;/em&gt; way to always push
to both repos &amp;ndash; best way for me is to always hook into my regular work
flow, otherwise I&amp;rsquo;d just forget.  The &lt;a href=&#34;1&#34;&gt;git-remote(1)&lt;/a&gt; man page to the
rescue, it describes the &lt;code&gt;set-url --add&lt;/code&gt; sub-command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git remote set-url --add origin ssh://git.troglobit.com:1234/srv/git/watchdogd.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, with a simple &lt;code&gt;git push&lt;/code&gt; followed by &lt;code&gt;git push --tags&lt;/code&gt; I had now
pushed to both the GitHub repo as well as my own server!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HowTo: Apache with Gitweb on Debian 8.1</title>
      <link>https://troglobit.com/2015/06/30/howto-apache-with-gitweb-on-debian-8-dot-1/</link>
      <pubDate>Tue, 30 Jun 2015 23:13:48 +0000</pubDate>
      
      <guid>https://troglobit.com/2015/06/30/howto-apache-with-gitweb-on-debian-8-dot-1/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m posting this in case anyone else gets stuck setting up &lt;a href=&#34;http://www.apache.org&#34;&gt;Apache&lt;/a&gt;
with &lt;a href=&#34;http://git-scm.com/docs/gitweb&#34;&gt;Gitweb&lt;/a&gt;.  Also as a reminder to myself in case I ever need to
set up this all over again.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You have all your eggs in one basket (GitHub), and&lt;/li&gt;
&lt;li&gt;You really like that shiny basket, but&lt;/li&gt;
&lt;li&gt;You know you&amp;rsquo;re clumsy and usually drop baskets yourself.&lt;/li&gt;
&lt;li&gt;You are wise (yes you are!) and realize you need another basket, so&lt;/li&gt;
&lt;li&gt;You set up a server and a domain yourself &amp;hellip;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OK.  Let&amp;rsquo;s start simple, since you are already running the latest Debian
you fire up the command line and install the basics:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install gitweb apache2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So it&amp;rsquo;ll complain, you&amp;rsquo;ll clarify your request and soon all required
packages are on your server.  Now what?&lt;/p&gt;
&lt;p&gt;Debian has already set up http://localhost/gitweb for you, and if you
have a domain already you should go ahead and edit the master file for
that:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;editor /etc/apache2/sites-available/000-default.conf
service apache2 reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to use that for your gitweb needs, then you&amp;rsquo;re done!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HowTo: Add Multicast Routing to FreeBSD kernel</title>
      <link>https://troglobit.com/2014/09/23/howto-add-multicast-routing-support-to-the-freebsd-kernel/</link>
      <pubDate>Tue, 23 Sep 2014 01:55:19 +0000</pubDate>
      
      <guid>https://troglobit.com/2014/09/23/howto-add-multicast-routing-support-to-the-freebsd-kernel/</guid>
      <description>This is a very short blog post, mostly intended as a reminder to myself. Basically, there are two methods of adding multicast routing support to the FreeBSD kernel:
 Rebuild the kernel with options MROUTING Load the kernel module: kldload ip_mroute  The kernel rebuild assumes the src.txz set was installed previously.
cd /usr/src cd sys/amd64/conf cat GENERIC | sed &#39;s/GENERIC$/MULTICAST/&#39; &amp;gt; MULTICAST echo &#39;options MROUTING # Multicast routing&#39; &amp;gt;&amp;gt; MULTICAST echo &#39;options PIM # Enable for pimd&#39; &amp;gt;&amp;gt; MULTICAST cd - make kernel KERNCONF=MULTICAST reboot  That&amp;rsquo;s it.</description>
    </item>
    
    <item>
      <title>HowTo Rebase without an origin</title>
      <link>https://troglobit.com/2014/08/27/howto-rebase-without-an-origin/</link>
      <pubDate>Wed, 27 Aug 2014 10:00:13 +0000</pubDate>
      
      <guid>https://troglobit.com/2014/08/27/howto-rebase-without-an-origin/</guid>
      <description>OK, so you&amp;rsquo;ve just been handed the task to integrate a big piece of corporate software and it&amp;rsquo;s nowhere near as done and ready as project management thinks. Of course you&amp;rsquo;ve already started chugging away at it, fixing bugs, refactoring code and wrapping it in neat containers to keep the changeset against the base SW small &amp;ndash; you already know you&amp;rsquo;ll get another drop of the same stinking pieace of code in another six months, so you keep the changes small and track them in GIT with neatly formatted commit messages.</description>
    </item>
    
  </channel>
</rss>