<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>init on Joachim Wiberg</title>
    <link>https://troglobit.com/tags/init/</link>
    <description>Recent content in init on Joachim Wiberg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>UNIX&amp;trade; 4Life! &amp;#9994;</copyright>
    <lastBuildDate>Mon, 25 Sep 2023 04:48:00 +0000</lastBuildDate><atom:link href="https://troglobit.com/tags/init/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Buildroot demo of FastInit (Finit)</title>
      <link>https://troglobit.com/post/2023-09-25-buildroot-demo-of-fastinit-finit/</link>
      <pubDate>Mon, 25 Sep 2023 04:48:00 +0000</pubDate>
      
      <guid>https://troglobit.com/post/2023-09-25-buildroot-demo-of-fastinit-finit/</guid>
      <description>&lt;p&gt;I believe there is a &lt;strong&gt;gap in the market&lt;/strong&gt; between BusyBox init and
systemd.  In particular in the embedded space.  This blog post shows how
easily it is to get up and running quickly with FastInit (&lt;a href=&#34;https://github.com/troglobit/finit#introduction&#34;&gt;Finit&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m a really bad salesman, and an even worse writer, so instead of
trying to convince you with my poor English, I&amp;rsquo;ve made a demo.  It is a
&lt;a href=&#34;https://nightly.buildroot.org/#outside-br-custom&#34;&gt;Buildroot external&lt;/a&gt;
that can be used to add Finit to your own projects.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For details, look here: &lt;a href=&#34;https://github.com/troglobit/br2-finit-demo&#34;&gt;https://github.com/troglobit/br2-finit-demo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://troglobit.com/images/finit-demo/bootstrap.png&#34; alt=&#34;Finit bootstrap&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finit custom connectivity check</title>
      <link>https://troglobit.com/post/2023-01-15-finit-custom-connectivity-check/</link>
      <pubDate>Sun, 15 Jan 2023 18:42:00 +0000</pubDate>
      
      <guid>https://troglobit.com/post/2023-01-15-finit-custom-connectivity-check/</guid>
      <description>&lt;p&gt;This post shows how you can extend Finit with your own conditions.  The
example we will use is a simple Internet connectivity checker.  When it
triggers we start BusyBox ntpd which, if started with any other type of
condition (none, default route, etc.) may get stuck trying to resolve
&lt;code&gt;pool.ntp.org&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finit in Linux Containers (LXC)</title>
      <link>https://troglobit.com/post/2022-02-13-finit-in-linux-containers-lxc/</link>
      <pubDate>Sun, 13 Feb 2022 17:55:44 +0200</pubDate>
      
      <guid>https://troglobit.com/post/2022-02-13-finit-in-linux-containers-lxc/</guid>
      <description>&lt;p&gt;This is a mini-HowTo on running Finit in an LXC system container.  We
will be using a variant (external) of Buildroot, called &lt;a href=&#34;https://github.com/westermo/netbox&#34;&gt;NetBox&lt;/a&gt; to
create a squashfs (read-only) image for the root filesystem.  Then we
will give the container a single writable directory from which it then
uses bind mount to emulate a full-blown system.&lt;/p&gt;
&lt;p&gt;It is expected you have LXC installed and all the relevant build tools
needed to create the image.  How to set that up is not covered by this
tutorial.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finit v4.2 Released!</title>
      <link>https://troglobit.com/post/2022-01-16-finit-v4.2-released/</link>
      <pubDate>Sun, 16 Jan 2022 15:30:23 +0100</pubDate>
      
      <guid>https://troglobit.com/post/2022-01-16-finit-v4.2-released/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://troglobit.com/finit.html&#34;&gt;&lt;img src=&#34;https://troglobit.com/images/finit3.png#floatright&#34; alt=&#34;finit logo&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m very pleased to announce &lt;a href=&#34;https://github.com/troglobit/finit/releases/tag/4.2&#34;&gt;Finit v4.2&lt;/a&gt;!  It comes seven months
after the last release, v4.1, with a bunch of fixes and some new
features.  See the release notes for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dependency handling in Finit</title>
      <link>https://troglobit.com/post/2022-01-09-dependency-handling-in-finit/</link>
      <pubDate>Sun, 09 Jan 2022 18:46:23 +0100</pubDate>
      
      <guid>https://troglobit.com/post/2022-01-09-dependency-handling-in-finit/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://troglobit.com/finit.html&#34;&gt;&lt;img src=&#34;https://troglobit.com/images/finit3.png#floatright&#34; alt=&#34;finit logo&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a blog post about Finit.  Each post is concluded with a video
summarizing the topic.  The impatient reader can scroll down to the
&lt;a href=&#34;#video&#34;&gt;video&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most non-trivial systems require dependency tracking between services.
Not only does it help ensure correct operation, it is also an enabler
for starting services in parallel.  Less known, but just as important,
is handling dependencies at system reconfiguration.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>It&#39;s Here! â™¥</title>
      <link>https://troglobit.com/post/2021-04-27-its-here/</link>
      <pubDate>Tue, 27 Apr 2021 20:18:06 +0100</pubDate>
      
      <guid>https://troglobit.com/post/2021-04-27-its-here/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://troglobit.com/images/finit3.png#floatright&#34; alt=&#34;finit logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finit v4 was finally released the other day! \o/&lt;/p&gt;
&lt;p&gt;It represents the culmination of many years of hard work and careful
thought put in by many people.  There&amp;rsquo;s so much to tell, hardly know
where to begin &amp;hellip; the plan anyway is to use this blog for a series of
posts detailing different aspects and important features.&lt;/p&gt;
&lt;p&gt;The impatient reader can either scroll down to the &lt;strong&gt;video&lt;/strong&gt; below, or
move on to the project home page: &lt;a href=&#34;https://troglobit.com/finit.html&#34;&gt;https://troglobit.com/finit.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alpine Linux with Finit</title>
      <link>https://troglobit.com/post/2021-02-12-alpine-linux-with-finit/</link>
      <pubDate>Fri, 12 Feb 2021 07:24:06 +0100</pubDate>
      
      <guid>https://troglobit.com/post/2021-02-12-alpine-linux-with-finit/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://alpinelinux.org/&#34;&gt;Alpine Linux&lt;/a&gt; is an amazing little operating
system.  It&amp;rsquo;s small, boots quick, and easy to use.  The size alone makes
it very attractive to container builders.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://troglobit.com/images/finit4-screenshot.png#center&#34; alt=&#34;Alpine Linux started with Finit&#34;&gt;&lt;/p&gt;
&lt;p&gt;This blog post details how to set Alpine up with the Finit init system,
replacing the default OpenRC.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finit3: Almost there ...</title>
      <link>https://troglobit.com/2016/09/21/finit3--almost-there/</link>
      <pubDate>Wed, 21 Sep 2016 19:08:37 +0000</pubDate>
      
      <guid>https://troglobit.com/2016/09/21/finit3--almost-there/</guid>
      <description>Today the new logo for Finit3 was added to the GitHub repo and the homepage
Gorgeous, isn&amp;rsquo;t it?! ðŸ˜Ž
This fancy artwork means we&amp;rsquo;re nearing the end of a long and agonizing release cycle where a lot of the internals of Finit have been rewritten and new exciting features have been added! More on this in an upcoming post ðŸ˜ƒ</description>
    </item>
    
    <item>
      <title>Inetd Support in Finit v1.12</title>
      <link>https://troglobit.com/2015/03/06/inetd-support-in-finit-v1-dot-12/</link>
      <pubDate>Fri, 06 Mar 2015 22:34:45 +0000</pubDate>
      
      <guid>https://troglobit.com/2015/03/06/inetd-support-in-finit-v1-dot-12/</guid>
      <description>&lt;p&gt;A steady flow of features, and releases, is key to keeping any project
alive.  Recently I ticked off another item in the &lt;a href=&#34;https://troglobit.com/finit.html&#34;&gt;Finit&lt;/a&gt;
TODO list &amp;hellip;&lt;/p&gt;
&lt;p&gt;Finit v1.12 now comes with a built-in inetd!  You no longer need an
external inetd daemon to launch services on demand.&lt;/p&gt;
&lt;p&gt;The good news doesn&amp;rsquo;t stop there, this little inetd actually supports a
poor man&amp;rsquo;s tcpwrappers!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;inetd ssh/tcp          nowait [2345] /sbin/dropbear -i -R -F
inetd ssh@eth0:222/tcp nowait [2345] /sbin/dropbear -i -R -F
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With these two lines in your &lt;code&gt;/etc/finit.conf&lt;/code&gt; you tell finit to launch
the &lt;a href=&#34;https://matt.ucc.asn.au/dropbear/dropbear.html&#34;&gt;Dropbear SSH&lt;/a&gt;
server on demand on port 22 (default ssh/tcp port in &lt;code&gt;/etc/services&lt;/code&gt;) on
&lt;em&gt;all&lt;/em&gt; interfaces except on &lt;code&gt;eth0&lt;/code&gt;, which in your case is the Internet
(WAN) interface, here you want SSH to run on port 222.  Actually, you
don&amp;rsquo;t want port 22 open at all on &lt;code&gt;eth0&lt;/code&gt; &amp;hellip; so finit takes care of this
for you!  Seriously, it just works, no need for messing about with that
nasty old &lt;code&gt;iptables&lt;/code&gt; anymore!&lt;/p&gt;
&lt;p&gt;The original UNIX inetd super server supported many protocols
internally, some of which may seem a bit odd today, and some have been
superseded by more modern protocols.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Echo_Protocol&#34;&gt;echo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Character_Generator_Protocol&#34;&gt;chargen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Time_Protocol&#34;&gt;time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Daytime_Protocol&#34;&gt;daytime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Discard_Protocol&#34;&gt;discard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finit currently only supports one internal/built-in standard service,
&lt;code&gt;time&lt;/code&gt;.  It is built as a plugin to serve as an example of how you can
extend Finit yourself.  The time service can be called either as UDP or
TCP.  To prevent security issues, the &lt;code&gt;time&lt;/code&gt; protocol is disabled by
default.  To enable it you need two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;time.so&lt;/code&gt; plugin (built by default)&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;inetd time ...&lt;/code&gt; line in &lt;code&gt;/etc/finit.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Assuming you&amp;rsquo;ve installed the default set of plugins, the following two
lines can be added:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;inetd time/udp   wait [2345] internal
inetd time/tcp nowait [2345] internal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This can be very useful for testing the inetd capabilities, your network
connection, or simply to get the time to a client where NTP for some
reason does not work, or is blocked.  For instance, you could have a GPS
setup on your server and distribute time to clients with the &lt;code&gt;time&lt;/code&gt;
protocol.&lt;/p&gt;
&lt;p&gt;To use it you need an &lt;a href=&#34;http://www.aelius.com/njh/rdate/&#34;&gt;&lt;code&gt;rdate&lt;/code&gt;&lt;/a&gt;
client.  Users of &lt;code&gt;rdate&lt;/code&gt; in BusyBox may need to be reminded that it
only supports TCP.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rdate -pu 198.51.100.42
Sat Mar  7 08:48:58 CET 2015
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more info on Finit and its features, see the &lt;a href=&#34;https://github.com/troglobit/finit/blob/master/README.md&#34;&gt;README&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enjoy! ãƒ„&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finit v1.11 released!</title>
      <link>https://troglobit.com/2015/01/24/finit-v1-dot-11-released/</link>
      <pubDate>Sat, 24 Jan 2015 16:54:23 +0000</pubDate>
      
      <guid>https://troglobit.com/2015/01/24/finit-v1-dot-11-released/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update 2015-03-09&lt;/strong&gt;: This release has unfortunately been &lt;em&gt;yanked&lt;/em&gt; due
to serious regressions in launching background processes.  It has been
replaced by &lt;a href=&#34;https://troglobit.com/blog/2015/03/06/inetd-support-in-finit-v1-dot-12/&#34;&gt;v1.12&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Release of Finit v1.9</title>
      <link>https://troglobit.com/2014/04/21/release-of-finit-v1-dot-9/</link>
      <pubDate>Mon, 21 Apr 2014 16:08:30 +0000</pubDate>
      
      <guid>https://troglobit.com/2014/04/21/release-of-finit-v1-dot-9/</guid>
      <description>Just made it! Here&amp;rsquo;s the result of #Easterhack14 &amp;ndash; Finit v1.9 :-)
Nothing fancy this time, just collecting some bug fixes, playing with cppcheck a bit and adding support for including .conf files. Quite useful if you want to partition your configuration, or if you share major pieces of configuration between different platforms.
Enjoy!</description>
    </item>
    
    <item>
      <title>Finit v1.8</title>
      <link>https://troglobit.com/2013/06/08/finit-v1-dot-8/</link>
      <pubDate>Sat, 08 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://troglobit.com/2013/06/08/finit-v1-dot-8/</guid>
      <description>It&amp;rsquo;s been a long time coming, but here it finally is, Finit v1.8! The goodies we&amp;rsquo;ve been waiting for are:
 Runlevels Multiple TTYs One-shot tasks  Let&amp;rsquo;s start off with tasks. Tasks are one-shot commands, with a syntax like service directives, but are not monitored and respawned like services. Tasks are started in parallel, just like services. For some cases, like the system bootstrap phase, some tasks may need to be executed in sequence, and for that purpose there also exists a run command.</description>
    </item>
    
  </channel>
</rss>
