<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Joachim Wiberg</title>
        <link>/posts/</link>
        <description>Recent content in Posts on Joachim Wiberg</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>UNIX&amp;trade; 4Life! &amp;#9994;</copyright>
        <lastBuildDate>Sun, 17 Apr 2022 16:56:00 +0100</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Your Own Operating System</title>
            <link>/post/2022-04-17-your-own-operating-system/</link>
            <pubDate>Sun, 17 Apr 2022 16:56:00 +0100</pubDate>
            
            <guid>/post/2022-04-17-your-own-operating-system/</guid>
            <description>This post shows how you can create your own operating system based on Buildroot. Add your own packages, patches, and your very own flavor to the experience.
 My own take on this is myLinux, which started out as a TroglOS, and before that as miniroot, by Henrik Nordström. Please feel free to dig around myLinux for more inspiration and tips on how to solve common use-cases.
 The manual, section 9, describes the basic process of setting up a our customizations as a BR2_EXTERNAL tree.</description>
            <content type="html"><![CDATA[<p>This post shows how you can create your own operating system based on
<a href="https://buildroot.org">Buildroot</a>.  Add your own packages, patches, and your very own flavor
to the experience.</p>
<blockquote>
<p>My own take on this is <a href="https://github.com/troglobit/myLinux">myLinux</a>, which started out as a TroglOS,
and before that as <a href="https://github.com/hno/miniroot">miniroot</a>, by Henrik Nordström.  Please feel
free to dig around myLinux for more inspiration and tips on how to
solve common use-cases.</p>
</blockquote>
<!-- more -->
<p>The <a href="https://buildroot.org/downloads/manual/manual.html">manual</a>, section 9, describes the basic process of setting up a
our customizations as a <code>BR2_EXTERNAL</code> tree.  Let&rsquo;s start with the
basic directory layout.  We&rsquo;ve also chosen a name for our little system:
&ldquo;Foo&rdquo;.</p>
<pre><code>mkdir foo
cd foo
git init
touch Makefile
touch Config.in
touch external.mk
touch external.desc
make configs
touch configs/foo_defconfig
git add .
</code></pre>
<p>Edit <code>external.desc</code>, notice the name in CAPITAL letters:</p>
<pre><code>name: FOO
desc: Foo System
</code></pre>
<p>Now, we want our project to be stand-alone, so we add buildroot as a
GIT submodule to our project:</p>
<pre><code>git submodule add https://github.com/buildroot/buildroot.git
</code></pre>
<p>To make things easier for us, we&rsquo;re also creating a Makefile to set some
of the critical buildroot environment variables needed.  For details,
see the <a href="https://buildroot.org/downloads/manual/manual.html">manual</a>.  Edit <code>Makefile</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="k">export </span><span class="nv">BR2_EXTERNAL</span> <span class="o">:=</span> <span class="k">$(</span>CURDIR<span class="k">)</span>
<span class="k">export </span><span class="nv">PATH</span>         <span class="o">:=</span> <span class="k">$(</span>CURDIR<span class="k">)</span>/bin:<span class="k">$(</span>PATH<span class="k">)</span>

<span class="nv">ARCH</span> <span class="o">?=</span> <span class="k">$(</span>shell uname -m<span class="k">)</span>
<span class="nv">O</span>    <span class="o">?=</span> <span class="k">$(</span>CURDIR<span class="k">)</span>/output

<span class="nv">config</span> <span class="o">:=</span> <span class="k">$(</span>O<span class="k">)</span>/.config
<span class="nv">bmake</span>   <span class="o">=</span> <span class="k">$(</span>MAKE<span class="k">)</span> -C buildroot <span class="nv">O</span><span class="o">=</span><span class="k">$(</span>O<span class="k">)</span> <span class="nv">$1</span>


<span class="nf">all</span><span class="o">:</span> <span class="k">$(</span><span class="nv">config</span><span class="k">)</span> <span class="n">buildroot</span>/<span class="n">Makefile</span>
	@+<span class="k">$(</span>call bmake,<span class="nv">$@</span><span class="k">)</span>

<span class="nf">$(config)</span><span class="o">:</span>
	@+<span class="k">$(</span>call bmake,list-defconfigs<span class="k">)</span>
	@echo <span class="s2">&#34;ERROR: No configuration selected.&#34;</span>
	@echo <span class="s2">&#34;Please choose a configuration from the list above by running&#34;</span>
	@echo <span class="s2">&#34;&#39;make &lt;board&gt;_defconfig&#39; before building an image.&#34;</span>
	@exit <span class="m">1</span>

<span class="nf">%</span><span class="o">:</span> <span class="n">buildroot</span>/<span class="n">Makefile</span>
	@+<span class="k">$(</span>call bmake,<span class="nv">$@</span><span class="k">)</span>

<span class="nf">buildroot/Makefile</span><span class="o">:</span>
	@git submodule update --init

<span class="nf">.PHONY</span><span class="o">:</span> <span class="n">all</span> <span class="n">defconfig</span>
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Linux Kernel Development Checklist</title>
            <link>/post/2022-04-11-linux-kernel-development-checklist/</link>
            <pubDate>Mon, 11 Apr 2022 17:19:00 +0200</pubDate>
            
            <guid>/post/2022-04-11-linux-kernel-development-checklist/</guid>
            <description>&lt;p&gt;Because I always tend to forget steps, and haven&amp;rsquo;t half replaced myself
with a shell script (yet), here&amp;rsquo;s a reminder to myself on how to post a
patch to the &lt;a href=&#34;https://lore.kernel.org/netdev/&#34;&gt;Linux netdev&lt;/a&gt; mailing
list.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Because I always tend to forget steps, and haven&rsquo;t half replaced myself
with a shell script (yet), here&rsquo;s a reminder to myself on how to post a
patch to the <a href="https://lore.kernel.org/netdev/">Linux netdev</a> mailing
list.</p>
<ol>
<li>
<p>Make your changes on an up-to-date branch from net-next master:</p>
<pre><code> $ git checkout -b my-patch-series
 $ git fetch --all --tags
 $ git rebase net-next/master
</code></pre>
</li>
<li>
<p>Use <em>logical commits</em>; upgrade package as one, changing/extending
behavior as another, etc.</p>
</li>
<li>
<p>Use commit messages to record <em>why</em> changes are made.  First line is
a summary referencing the sub-system, followed by an empty line and
the message body, and concluded by your sign-off:</p>
<pre><code> net bridge: add support for foo bar
    
 You need an actual body of your commit message, otherwise the
 checkpatch.pl script (below) will complain.  For good reason,
 why wouldn't you want to tell the tale of how you ended up at
 this point in history?
    
 Signed-off-by: Your Name &lt;your.name@example.com&gt;
</code></pre>
</li>
<li>
<p>Maybe consider adding a selftest.  Better than having to answer any
question later on how your feature is supposed to work.  Or even to
give a maintainer a before-after test to see your patch actually
does fix what you say it does.</p>
</li>
<li>
<p>Format your patches, with the optional <code>--cover-letter</code>, very useful
to explain a series of patches:</p>
<pre><code> $  git format-patch --cover-letter -M -n -s -o mail net-next/master
</code></pre>
<p>Remember: <strong>edit the cover letter</strong> &mdash; it serves as an introduction
and explains the reasoning behind your changes.  Focus on <em>the why,
not the how,</em> the patches have separate commit messages</p>
</li>
<li>
<p>Check your patch(es), this is one of the most important steps.  The
<code>checkpatch.pl</code> script is the collected wisdom of the ancients, the
oracle that you can ask free of shame before submitting yourself to
the wrath of the maintainers:</p>
<pre><code> $ ./scripts/checkpatch.pl mail/*
</code></pre>
</li>
<li>
<p>Figure out maintainers to Cc in your correspondence to the mailing
list.  Please note, it is <em>up to you</em> to figure out the relevant
people and lists to Cc.  The script gives you an idea of who have
recently traveled beyond the rim like you, as well as those who do
live there permanently.</p>
<pre><code> $ ./scripts/get_maintainer.pl mail/*
</code></pre>
</li>
<li>
<p>Inspect the cover letter and patches one last time:</p>
<ul>
<li>
<p>Did you remember to add all <code>Reviewed-by:</code> and <code>Acked-by:</code> tags
from a previous version you sent?</p>
</li>
<li>
<p>Did you double-check any updated email addresses for maintainers?</p>
</li>
<li>
<p>OK, time to send &hellip;</p>
<p>$ git send-email &ndash;to netdev@vger,kernel.org &ndash;cc <a href="mailto:foo@example.com">foo@example.com</a> mail/*</p>
</li>
</ul>
<p>You are offered one last chance to proofread the contents (remember
to check the email headers!) before you send.</p>
</li>
</ol>
<blockquote>
<p><strong>Note:</strong> if you haven&rsquo;t set up your <code>~/.gitconfig</code> yet for sending
email, please see <a href="https://git-scm.com/docs/git-send-email">https://git-scm.com/docs/git-send-email</a> or my blog
post <a href="https://troglobit.com/post/2022-01-24-gmail-and-git-send-email/">https://troglobit.com/post/2022-01-24-gmail-and-git-send-email/</a>
for details.</p>
</blockquote>]]></content>
        </item>
        
        <item>
            <title>Finit in Linux Containers (LXC)</title>
            <link>/post/2022-02-13-finit-in-linux-containers-lxc/</link>
            <pubDate>Sun, 13 Feb 2022 17:55:44 +0200</pubDate>
            
            <guid>/post/2022-02-13-finit-in-linux-containers-lxc/</guid>
            <description>&lt;p&gt;This is a mini-HowTo on running Finit in an LXC system container.  We
will be using a variant (external) of Buildroot, called &lt;a href=&#34;https://github.com/westermo/netbox&#34;&gt;NetBox&lt;/a&gt; to
create a squashfs (read-only) image for the root filesystem.  Then we
will give the container a single writable directory from which it then
uses bind mount to emulate a full-blown system.&lt;/p&gt;
&lt;p&gt;It is expected you have LXC installed and all the relevant build tools
needed to create the image.  How to set that up is not covered by this
tutorial.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This is a mini-HowTo on running Finit in an LXC system container.  We
will be using a variant (external) of Buildroot, called <a href="https://github.com/westermo/netbox">NetBox</a> to
create a squashfs (read-only) image for the root filesystem.  Then we
will give the container a single writable directory from which it then
uses bind mount to emulate a full-blown system.</p>
<p>It is expected you have LXC installed and all the relevant build tools
needed to create the image.  How to set that up is not covered by this
tutorial.</p>
<p>First we clone NetBox and build an app image for Zero (x86_64):</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">git clone https://github.com/westermo/netbox
<span class="nb">cd</span> netbox
make netbox_app_zero_defconfig
make
</code></pre></div><p>After a few minutes the build has completed and in the <code>output/images/</code>
directory we have the <code>netbox-app-zero.img</code> which we now can set up an
LXC config file for.  Make sure to create the appropriate directories as
we proceed.  Start by copying the .img file to the LXC images directory,
then create this file:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback"># /var/lib/lxc/foo/config 
lxc.uts.name = foo
lxc.tty.max = 4
lxc.pty.max=1024
#lxc.hook.pre-mount = pre-mount.sh /var/lib/lxc/images/foo.img /var/lib/lxc/foo/rootfs
#lxc.rootfs.path    = overlayfs:/var/lib/lxc/foo/rootfs:/var/lib/lxc/foo/delta0
#lxc.rootfs.options = -t squashfs
lxc.rootfs.path = loop:/var/lib/lxc/images/netbox-app-zero.img
lxc.mount.auto = cgroup:mixed proc:mixed sys:mixed
#lxc.mount.entry=run run tmpfs rw,nodev,relatime,mode=755 0 0
#lxc.mount.entry=shm dev/shm tmpfs rw,nodev,noexec,nosuid,relatime,mode=1777,create=dir 0 0
lxc.mount.entry=/var/lib/lxc/foo/mnt mnt none bind 0 0
lxc.net.0.type = veth
lxc.net.0.flags = up
lxc.net.0.link = lxcbr0
#lxc.init.cmd = /sbin/init finit.debug

#lxc.seccomp.profile = /usr/share/lxc/config/common.seccomp
lxc.apparmor.profile = lxc-container-default-with-mounting
</code></pre></div><p>As can be seen from the example config above, there are many ways to
skin this cat.  This time around are focusing on the uncommented lines
which loop mount the image, mounts a mix of the kernel file systems and
a writable directory on <code>/mnt</code> in the container&rsquo;s namespace.  We also
set up basic networking, which will only work if you have the <code>lxcbr0</code>
bridge interface on your host system.</p>
<p>Notice the AppArmor profile used, you my need to extend it with the
following extra permissions at the bottom:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback"># /etc/apparmor.d/lxc/lxc-default-with-mounting
mount fstype=tmpfs,
mount fstype=overlay,
</code></pre></div><p>Reload AppArmor, or restart your system to activate the changes, then we
can start the container with:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">$ sudo lxc-start -n foo -F
● ● ●  NetBox - The Networking Toolbox ═════════════════════════════════
<span class="o">[</span> OK <span class="o">]</span> Mounting filesystems
<span class="o">[</span> OK <span class="o">]</span> Populating device tree
<span class="o">[</span> OK <span class="o">]</span> Restoring system clock <span class="o">(</span>UTC<span class="o">)</span> from RTC
<span class="o">[</span> OK <span class="o">]</span> Initializing random number generator
<span class="o">[</span> OK <span class="o">]</span> Starting System log daemon
<span class="o">[</span> OK <span class="o">]</span> Starting networking
<span class="o">[</span> OK <span class="o">]</span> Starting SSH daemon
<span class="o">[</span> OK <span class="o">]</span> Calling /etc/rc.local

Welcome to Buildroot
buildroot login: root
                       .--.--.--.-----.-----.-------.-----.----.--------.-----.
   Welcome to NetBox   <span class="p">|</span>  <span class="p">|</span>  <span class="p">|</span>  <span class="p">|</span>  -__<span class="p">|</span>__ --<span class="p">|</span>_     _<span class="p">|</span>  -__<span class="p">|</span>   _<span class="p">|</span>        <span class="p">|</span>  _  <span class="p">|</span>
    Made by Westermo   <span class="p">|</span>________<span class="p">|</span>_____<span class="p">|</span>_____<span class="p">|</span> <span class="p">|</span>___<span class="p">|</span> <span class="p">|</span>_____<span class="p">|</span>__<span class="p">|</span> <span class="p">|</span>__<span class="p">|</span>__<span class="p">|</span>__<span class="p">|</span>_____<span class="p">|</span>
                                                       https://www.westermo.com
NetBox 2021.02-r0-206-g0eba0db-dirty -- Feb <span class="m">13</span> 19:25 CET <span class="m">2022</span>
Type: <span class="s1">&#39;help&#39;</span> <span class="k">for</span> <span class="nb">help</span> with commands, <span class="s1">&#39;exit&#39;</span> to log out.

root@buildroot:~# 
</code></pre></div><p>Type <code>poweroff</code> to terminate the container.  To start it in the
background, omit <code>-F</code> above, then use <code>lxc-attach</code> to connect (and
disconnect) from it.</p>]]></content>
        </item>
        
        <item>
            <title>Gmail and git send-email</title>
            <link>/post/2022-01-24-gmail-and-git-send-email/</link>
            <pubDate>Mon, 24 Jan 2022 19:37:44 +0200</pubDate>
            
            <guid>/post/2022-01-24-gmail-and-git-send-email/</guid>
            <description>&lt;p&gt;As a follow-up to my previous Buildroot mailing-list post about the
&lt;code&gt;git format-patch&lt;/code&gt; and &lt;code&gt;git send-email&lt;/code&gt; commands, this post covers how
to set up the latter.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>As a follow-up to my previous Buildroot mailing-list post about the
<code>git format-patch</code> and <code>git send-email</code> commands, this post covers how
to set up the latter.</p>
<p>In many corporate settings it&rsquo;s either hard or close to impossible to
rely on the services of the IT dept. to send email to Open Source
mailing lists.  In this blog post we will set up Google Mail (Gmail)
as an alternative.</p>
<ul>
<li>Gmail, because many people already have an account</li>
<li>Easy to add &ldquo;another&rdquo; account: <code>yourusername+oss@gmail.com</code></li>
<li>Doesn&rsquo;t add any obnoxious corporate &ldquo;CONFIDENTIAL&rdquo; footer</li>
<li>Your contributions are yours:
<ul>
<li>Remember attribution to your Company, this is usually a good
idea for several reasons, set the <code>Organization:</code> email header</li>
</ul>
</li>
<li>However, <strong>avoid the web client:</strong>
<ul>
<li>Changes tabs to spaces</li>
<li>Wraps text (patch text) unconditionally</li>
<li>Base64 encodes messages with non US ASCII characters: åäö</li>
</ul>
</li>
<li>Instead, <strong>use with external client</strong>:
<ul>
<li>Get <a href="https://myaccount.google.com/apppasswords">application specific password</a></li>
<li>Enable <a href="https://mail.google.com/mail/u/0/#settings/fwdandpop">IMAP for fetching email</a></li>
</ul>
</li>
</ul>
<blockquote>
<p>Tips for how to set up your external email client are available here
<a href="https://www.kernel.org/doc/html/latest/process/email-clients.html">https://www.kernel.org/doc/html/latest/process/email-clients.html</a>,
or check out another blog post about using Emacs with Notmuch Mail:
<a href="https://troglobit.com/post/2021-05-11-emacs-gmail-and-lore-mailing-lists/">https://troglobit.com/post/2021-05-11-emacs-gmail-and-lore-mailing-lists/</a></p>
</blockquote>
<p>Then edit your <code>~/.gitconfig</code> using your favorite editor:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">[user]
    name           = YOUR NAME
    email          = yourusername+oss@gmail.com
[format]
    headers        = &#34;Organization: Company Inc\n&#34;
    signoff        = true
[sendemail]
    chainreplyto   = false
    smtpserver     = smtp.gmail.com
    smtpuser       = yourusername@gmail.com
    smtpencryption = tls
    smtpserverport = 587
    smtpPass       = yourapplicationspecificpassword
    aliasesfile    = ~/.config/mutt/aliases
    aliasfiletype  = mutt
[sendemail.netdev]
    to             = &#34;davem@davemloft.net, kuba@kernel.org&#34;
    cc             = &#34;netdev@vger.kernel.org&#34;
    cccmd          = &#34;./scripts/get_maintainer.pl --norolestats&#34;

# You can also use &#34;alias-foo&#34; in to= and cc=, expands from ~/.config/mutt/aliases
</code></pre></div><p>This fils applies to all your GIT repositories.  If you want to have a
different behavior or setting for a repoistory, see the <code>.git/config</code>
file for that specific working copy.  These file holds other settings,
see the man page <a href="https://git-scm.com/docs/git-config">git-config(1)</a>
for details.</p>
<p>One specific detail deserves to be highlighted.  In the <code>.gitconfig</code>
above, there is a section <code>[sendemail.netdev]</code>.  It is triggered by
the <code>--identity</code> argument:</p>
<pre><code>$ git send-email --identity netdev mail/*
</code></pre>
<p>The extra settings (or overrides) defined for <code>netdev</code> are then used
for all <code>git send-email</code> commands with that identity.  This is useful
in particular if you interact with many mailing-lists, but also when
you are old and forgetful like yours truly.</p>
<p>Good Luck!</p>
<blockquote>
<p><strong>Note:</strong> see my previous post, the <a href="https://troglobit.com/post/2022-01-04-buildroot-development-checklist/">Buildroot Checklist</a>, for an
introduction to how to use <code>git format-patch</code>.  It applies to many
other mail-list based Open Source projects as well.</p>
</blockquote>]]></content>
        </item>
        
        <item>
            <title>Finit v4.2 Released!</title>
            <link>/post/2022-01-16-finit-v4.2-released/</link>
            <pubDate>Sun, 16 Jan 2022 15:30:23 +0100</pubDate>
            
            <guid>/post/2022-01-16-finit-v4.2-released/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://troglobit.com/finit.html&#34;&gt;&lt;img src=&#34;/images/finit3.png#floatright&#34; alt=&#34;finit logo&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m very pleased to announce &lt;a href=&#34;https://github.com/troglobit/finit/releases/tag/4.2&#34;&gt;Finit v4.2&lt;/a&gt;!  It comes seven months
after the last release, v4.1, with a bunch of fixes and some new
features.  See the release notes for details.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p><a href="https://troglobit.com/finit.html"><img src="/images/finit3.png#floatright" alt="finit logo"></a></p>
<p>I&rsquo;m very pleased to announce <a href="https://github.com/troglobit/finit/releases/tag/4.2">Finit v4.2</a>!  It comes seven months
after the last release, v4.1, with a bunch of fixes and some new
features.  See the release notes for details.</p>
<p>One of the most notable fixes is legacy support for old vendor kernels
that do not yet support cgroups v2 &ndash; this is now detected and
disabled automatically by Finit.</p>
<p>Another neat feature is the support for early logging, using the
kernel ring buffer, before any syslog daemon has started.  This
support is synchronized with the <a href="https://github.com/troglobit/sysklogd/releases/tag/v2.3.0">sysklogd v2.3</a> release which adds
support for extracting non-kernel log messages from <code>/dev/kmsg</code> &ndash;
other syslog daemons support this too, but sysklogd is the recommended
syslog with Finit.</p>
<h2 id="try-before-you-buy">Try before you buy!</h2>
<p>If you&rsquo;re interesting in trying Finit out yourself, but haven&rsquo;t got
the time or patience to set it up.  Here is a x86_64 VM image for QEMU
on, based on <a href="https://github.com/troglobit/myLinux">myLinux</a>.</p>
<ul>
<li><strong>Download</strong> <a href="https://ftp.troglobit.com/myLinux/myLinux-2.0-dev.tar.xz">myLinux-2.0-dev.tar.xz</a><br>
(13 MiB, expands to 62 MiB; Fint v4.2)</li>
</ul>
<blockquote>
<p><strong>Note:</strong> this is an example, with a limited number of services
included.  To use in a full-blown production system, you
can quickly build your own image from a <a href="https://github.com/troglobit/myLinux">myLinux</a> base.
I recommend the <a href="https://buildroot.org/">Buildroot</a> manual for help on how to
extract the full potential of your system.</p>
</blockquote>
<p>To start it up:</p>
<ol>
<li>Ensure you have QEMU installed, this varies depending on your
preferred Linux distribution, on Linux Mint and other Debian
derivatives:</li>
</ol>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">    sudo apt install qemu-system-x86
</code></pre></div><ol start="2">
<li>Download the image and untar it:</li>
</ol>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">    <span class="nb">cd</span> ~/Downloads
    tar xf myLinux-2.0-dev.tar.xz
</code></pre></div><ol start="3">
<li>Run the <code>qemu.sh</code> script, you can modify it to suit your needs:</li>
</ol>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">    <span class="nb">cd</span> myLinux-2.0-dev
    ./qemu.sh
</code></pre></div><p>You should see the bootstrap messages and a message at the end:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">    Please press Enter to activate this console.
</code></pre></div><blockquote>
<p>Ctrl-a x &ndash; exit Qemu<br>
Ctrl-a c &ndash; toggle Qemu console/monitor</p>
</blockquote>
<p>No getty is spawned unless a user is active at the console, which in
most headless deployments there isn&rsquo;t.  Let&rsquo;s pretend we&rsquo;re servicing
this devie, and press enter &ndash; you are presented with a login prompt.
The default username is <code>root</code> and for the first time login there is
no password:</p>
<p><img src="/images/finit-v4.2-first-boot.png" alt=""></p>
<p>To allow SSH login, you must set a password, use <code>passwd</code>.  When set
you can connect to the QEMU virtual machine using:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">    ssh -p <span class="m">2222</span> root@localhost
</code></pre></div><p>Now you&rsquo;re settled in and it&rsquo;s time to get to know Finit.  Play around
a bit with <code>initctl</code>, it comes with limited built-in help <code>initctl help</code>, and there is much <a href="https://github.com/troglobit/finit/tree/master/doc">documentation available online</a>, including man pages: <a href="https://man.troglobit.com/man8/initctl.8.html">initctl(8)</a>, <a href="https://man.troglobit.com/man8/finit.8.html">finit(8)</a>, and <a href="https://man.troglobit.com/man5/finit.conf.5.html">finit.conf(5)</a>.</p>
<p><img src="/images/finit-v4.2-initctl.png" alt=""></p>
<p>Try stopping and starting services.  For instance, check the status of
the <code>sntpd</code> service, notice the condition on a default route &ndash; check
what happens when you remove the default route.</p>
<p><a href="/post/2022-01-09-dependency-handling-in-finit/">More on conditions</a>
in another blog post.</p>
<p>Have fun! :-)<br>
/Joachim</p>]]></content>
        </item>
        
        <item>
            <title>Dependency handling in Finit</title>
            <link>/post/2022-01-09-dependency-handling-in-finit/</link>
            <pubDate>Sun, 09 Jan 2022 18:46:23 +0100</pubDate>
            
            <guid>/post/2022-01-09-dependency-handling-in-finit/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://troglobit.com/finit.html&#34;&gt;&lt;img src=&#34;/images/finit3.png#floatright&#34; alt=&#34;finit logo&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a blog post about Finit.  Each post is concluded with a video
summarizing the topic.  The impatient reader can scroll down to the
&lt;a href=&#34;#video&#34;&gt;video&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most non-trivial systems require dependency tracking between services.
Not only does it help ensure correct operation, it is also an enabler
for starting services in parallel.  Less known, but just as important,
is handling dependencies at system reconfiguration.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p><a href="https://troglobit.com/finit.html"><img src="/images/finit3.png#floatright" alt="finit logo"></a></p>
<p>This is a blog post about Finit.  Each post is concluded with a video
summarizing the topic.  The impatient reader can scroll down to the
<a href="#video">video</a>.</p>
<p>Most non-trivial systems require dependency tracking between services.
Not only does it help ensure correct operation, it is also an enabler
for starting services in parallel.  Less known, but just as important,
is handling dependencies at system reconfiguration.</p>
<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Let&#39;s boot up. <a href="https://t.co/AKpDXoh3Vh">pic.twitter.com/AKpDXoh3Vh</a></p>&mdash; ＨＡＣＫＥＲＳＢＯＴ (@Hackers_bot) <a href="https://twitter.com/Hackers_bot/status/1388605672024154114?ref_src=twsrc%5Etfw">May 1, 2021</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> 
<p>Finit handles dependencies between services with a condition subsystem
comprising three major types:</p>
<ul>
<li>pid</li>
<li>net</li>
<li>usr</li>
</ul>
<blockquote>
<p>For more information about the condition subsystem in Finit, see:
<a href="https://github.com/troglobit/finit/blob/master/doc/conditions.md">https://github.com/troglobit/finit/blob/master/doc/conditions.md</a></p>
</blockquote>
<h2 id="pid-conditions">PID Conditions</h2>
<p>A <code>&lt;pid/foo&gt;</code> condition ensures that the service <code>foo</code> has started and
created its PID file in <code>/var/run/foo.pid</code>.  Finit tracks all files
created below <code>/var/run</code> that ends in <code>.pid</code>, or <code>/pid</code> for any
sub-directory.  If the PID in the file matches a service started by
Finit that service&rsquo;s provided condition is asserted.</p>
<blockquote>
<p>At reconfiguration it is expected that services &ldquo;touch&rdquo; their PID
files to reassert the condition they provide.  See the documentation
for details and how to handle non-conformant services.</p>
</blockquote>
<h3 id="example">Example</h3>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">/etc/finit.d/foo.conf

    service manual:yes foo -fooargs -- Foo service
   
/etc/finit.d/bar.conf

    service &lt;pid/foo&gt; bar -barargs -- Bar service
</code></pre></div><p>Bar service is started only when <code>foo</code> is up and ready.</p>
<h2 id="net-conditions">Net Conditions</h2>
<p>A <code>&lt;net/...&gt;</code> condition is for various <em>basic</em> network conditions, e.g.,</p>
<ul>
<li><code>&lt;net/route/default&gt;</code></li>
<li><code>&lt;net/&lt;IFNAME&gt;/exist&gt;</code></li>
<li><code>&lt;net/&lt;IFNAME&gt;/up&gt;</code></li>
<li><code>&lt;net/&lt;IFNAME&gt;/running&gt;</code></li>
</ul>
<h3 id="example-1">Example</h3>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">/etc/finit.d/inadyn.conf

    service &lt;net/route/default&gt; inadyn -ns -- In-a-Dyn DDNS Client
</code></pre></div><p>In-a-Dyn is started only when the system has a default route.  Conversely,
it is stopped (SIGTERM) when the default route is removed.</p>
<h3 id="user-conditions">User Conditions</h3>
<p>A <code>&lt;usr/baz&gt;</code> condition is completely controlled by the user.  These are
<em>static</em> (one-shot) conditions that persist across <code>initctl reload</code>
calls, but do not survive a reboot.</p>
<p>All User conditions are controlled using the <code>initctl cond ..</code> commands:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">initctl cond set baz   # Set (assert) user-defined condition
initctl cond clr baz   # Clear (deassert) user-defined condition
</code></pre></div><h3 id="example-2">Example</h3>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">/etc/finit.d/foo.conf

    service &lt;usr/baz&gt; foo -foargs -- Foo service
</code></pre></div><p>Foo service is not started until the following command is called:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">initctl cond set baz
</code></pre></div><h2 id="video">Video</h2>
<p>Here&rsquo;s a video showing conditions in action, booting Alpine Linux
3.13.  The video shows how <code>ntpd</code> depends on <code>syslogd</code>, how this works
and how other conditions can be added.  Worth noting is how dependant
processes are stopped if their dependencies are not satisfied.</p>
<script id="asciicast-460832" src="https://asciinema.org/a/460832.js" async></script>  
<p>Join the <a href="https://github.com/troglobit/finit/discussions/">discussion on GitHub</a> or #troglobit on Freenode if IRC is
more your thing.</p>]]></content>
        </item>
        
        <item>
            <title>Buildroot Development Checklist</title>
            <link>/post/2022-01-04-buildroot-development-checklist/</link>
            <pubDate>Tue, 04 Jan 2022 10:15:00 +0200</pubDate>
            
            <guid>/post/2022-01-04-buildroot-development-checklist/</guid>
            <description>&lt;p&gt;Because I always forget, here&amp;rsquo;s a reminder to myself on how to use &lt;code&gt;git format-patch&lt;/code&gt; and &lt;code&gt;git send-email&lt;/code&gt; from the command line.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The following process applies to many other mailing-list based
projects as well, with local differences in helper scripts.&lt;/p&gt;
&lt;/blockquote&gt;</description>
            <content type="html"><![CDATA[<p>Because I always forget, here&rsquo;s a reminder to myself on how to use <code>git format-patch</code> and <code>git send-email</code> from the command line.</p>
<blockquote>
<p>The following process applies to many other mailing-list based
projects as well, with local differences in helper scripts.</p>
</blockquote>
<p>The following example is for contributing to the [Buildroot Project][1],
but the process is much the same for other mailing list-based projects.</p>
<ol>
<li>
<p>Make your changes on an up-to-date branch from Buildroot master</p>
<pre><code> $ git checkout -b package/foo
 $ git fetch --all --tags
 $ git rebase origin/master
</code></pre>
</li>
<li>
<p>Use <em>logical commits</em>; upgrade package as one, changing/extending
behavior as another, etc.</p>
</li>
<li>
<p>Use commit messages to record <em>why</em> changes are made.  First line is
a summary referencing the sub-system, followed by an empty line and
the message body, and concluded by your sign-off:</p>
<pre><code> package/foo: bump version to v1.2.3

 Signed-off-by: Your Name &lt;your.name@example.com&gt;
</code></pre>
</li>
<li>
<p>Verify formatting of package files; .in, .mk, etc.</p>
<pre><code> $ ./utils/check-package package/foo/*
</code></pre>
<p>If you change or add a new package, verify you don&rsquo;t introduce any
recursive dependencies, or other nasty surprises.  Remember, the
build systems includes <em>all</em> <code>.mk</code> files into one big Makefile, so
any changes you make are seen by <em>all</em> other packages.</p>
<pre><code> $  make menuconfig         # complains if you have recursive deps.
 $  make &lt;pkg&gt;-rebuild      # check output of build
</code></pre>
</li>
<li>
<p>Test your package/change with a set of cross-compilation toolchains.
The <code>.config</code> file is a menuconfig snippet enabling the package to
test:</p>
<pre><code> $ ./utils/test-pkg -c foo.config -p foo
</code></pre>
<p>Output goes in <code>~/br-test-pkg/</code>, check all logs.  Some toolchains
can help you track down issues with your package you won&rsquo;t see
elsewhere.</p>
</li>
<li>
<p>Format your patches, with the optional <code>--cover-letter</code>, very useful
to explain a series of patches:</p>
<pre><code> $  git format-patch --cover-letter -M -n -s -o mail origin/master
</code></pre>
<p>Remember to <strong>edit the cover letter</strong> &mdash; it serves as an
introduction and explains the reasoning behind your changes.  Focus
on <em>the why, not the how,</em> the patches have separate commit messages</p>
</li>
<li>
<p>Figure out DEVELOPERS to Cc in your correspondence to the mailing list:</p>
<pre><code> $ ./utils/get-developers mail/*
 git send-email --to buildroot@buildroot.org --cc foo@example.com
</code></pre>
</li>
<li>
<p>At the very least, the following should be output:</p>
<pre><code> git send-email --to buildroot@buildroot.org
</code></pre>
</li>
<li>
<p>Append <code>mail/*</code> to send.  You and others in Signed-off-by,
Reviewed-by: are Cc:ed by default</p>
<pre><code> $ git send-email --to buildroot@buildroot.org --cc foo@example.com mail/*
</code></pre>
<p>You are offered one last chance to proofread the contents (remember
to check the email headers!) before you send.</p>
</li>
</ol>
<blockquote>
<p><strong>Note:</strong> if you haven&rsquo;t set up your <code>~/.gitconfig</code> yet for sending
email, please see <a href="https://git-scm.com/docs/git-send-email">https://git-scm.com/docs/git-send-email</a> or my blog
post <a href="https://troglobit.com/post/2022-01-24-gmail-and-git-send-email/">https://troglobit.com/post/2022-01-24-gmail-and-git-send-email/</a>
for details.</p>
</blockquote>]]></content>
        </item>
        
        <item>
            <title>Emacs: GMail and Lore Mailing Lists</title>
            <link>/post/2021-05-11-emacs-gmail-and-lore-mailing-lists/</link>
            <pubDate>Tue, 11 May 2021 19:12:00 +0100</pubDate>
            
            <guid>/post/2021-05-11-emacs-gmail-and-lore-mailing-lists/</guid>
            <description>With lots of help from the tireless Tobias Waldekranz, I think I&amp;rsquo;ve finally found the perfect &amp;ldquo;magit like&amp;rdquo; email setup. With Emacs, of course. This is the story of how I did it.
First install notmuch, mbsync (from the isync package), and afew:
sudo apt install notmuch isync afew Do initial setup of notmuch for your user. I&amp;rsquo;ve opted to store my mail in ~/mail, this is used throughout the text below, ymmv.</description>
            <content type="html"><![CDATA[<p>With lots of help from the tireless Tobias Waldekranz, I think I&rsquo;ve
finally found the perfect &ldquo;magit like&rdquo; email setup.  With Emacs, of
course.  This is the story of how I did it.</p>
<p>First install notmuch, mbsync (from the isync package), and afew:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">sudo apt install notmuch isync afew
</code></pre></div><p>Do initial setup of notmuch for your user.  I&rsquo;ve opted to store my
mail in<code> ~/mail</code>, this is used throughout the text below, ymmv.</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">notmuch setup
</code></pre></div><p>Clone Tobias&rsquo; GitHub <a href="https://github.com/wkz/notmuch-lore">notmuch-lore</a>
repo, we will be using his <code>pre-new</code> hook later on to fetch mailing
lists from lore, along with a <code>post-new</code> hook to do some tagging of new
mail.</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh"><span class="nb">cd</span> ~/src
git clone https://github.com/wkz/notmuch-lore
</code></pre></div><p>Set up isync/mbsync to fetch my own email from Gmail.  Here a note on
Gmail folder structure may be in order.  The view you see in the Google
web interface does not reflect the IMAP hierarchy.  Here&rsquo;s what it looks
like, with exception for countries where Google had to change <code>[Gmail]</code>
to use <code>[Google Mail]</code> instead, e.g., Germany:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">    /
	|-- Drafts
	|-- [Gmail]/
	|     |-- Spam
	|     |-- your-own
	|     |-- folders-here
	|     `-- ...
	|-- INBOX
	|--	Sent
	`-- Trash
</code></pre></div><p>Most of the standard standard folders are available in the root, in my
case only <code>Spam</code> goes in the same <code>[Gmail]/</code> folder as my own folders
do.  This is important to keep track of when configuring your channels
in <code>mbsync</code>.</p>
<p>Here&rsquo;s my <code>~/.mbsyncrc</code> for GMail, I&rsquo;ve included the BusyBox folder,
which is that project&rsquo;s mailing list.  Filtering of incoming mail to
that list is done by GMail, not documented here.  Make sure to create
the parent directory <code>~/mail/gmail</code>.</p>
<blockquote>
<p>Please notice that I&rsquo;ve removed my application-specific password,
you&rsquo;ll have to get your own for you account.</p>
</blockquote>
<div class="highlight"><pre class="chroma"><code class="language-cfg" data-lang="cfg"><span class="na">IMAPAccount gmail</span>
<span class="na">Host imap.gmail.com</span>
<span class="na">User troglobit@gmail.com</span>
<span class="na">Pass heresyourappassword</span>
<span class="na">SSLType IMAPS</span>
<span class="na">SSLVersion TLSv1.2</span>
<span class="na">CertificateFile /etc/ssl/certs/ca-certificates.crt</span>

<span class="na">IMAPStore gmail-remote</span>
<span class="na">Account gmail</span>

<span class="na">MaildirStore gmail-local</span>
<span class="na">SubFolders Verbatim</span>
<span class="c1"># The trailing &#34;/&#34; is important</span>
<span class="na">Path ~/mail/gmail/</span>
<span class="na">Inbox ~/mail/gmail/Inbox</span>
<span class="na">Trash ~/mail/gmail/trash</span>

<span class="na">Channel sync-gmail-default</span>
<span class="na">Master :gmail-remote:</span>
<span class="na">Slave :gmail-local:</span>
<span class="c1"># Select some mailboxes to sync</span>
<span class="na">Patterns &#34;INBOX&#34;</span>
<span class="na">Remove Both</span>

<span class="na">Channel sync-gmail-sent</span>
<span class="na">Master :gmail-remote:&#34;Sent&#34;</span>
<span class="na">Slave :gmail-local:sent</span>
<span class="na">Create Slave</span>

<span class="na">Channel sync-gmail-trash</span>
<span class="na">Master :gmail-remote:&#34;Trash&#34;</span>
<span class="na">Slave :gmail-local:trash</span>
<span class="na">Create Slave</span>

<span class="na">Channel sync-gmail-busybox</span>
<span class="na">Master :gmail-remote:&#34;[Gmail]/BusyBox&#34;</span>
<span class="na">Slave :gmail-local:busybox</span>
<span class="na">Create Slave</span>

<span class="na">Channel sync-gmail-buildroot</span>
<span class="na">Master :gmail-remote:&#34;[Gmail]/Buildroot&#34;</span>
<span class="na">Slave :gmail-local:buildroot</span>
<span class="na">Create Slave</span>
<span class="na">Remove Both</span>

<span class="c1"># Get all the channels together into a group.</span>
<span class="na">Group gmail</span>
<span class="na">Channel sync-gmail-default</span>
<span class="na">Channel sync-gmail-busybox</span>
<span class="na">Channel sync-gmail-sent</span>
<span class="na">Channel sync-gmail-trash</span>
</code></pre></div><blockquote>
<p><strong>NOTE:</strong> empty lines in <code>.mbsyncrc</code> <em>not allowed</em> just anywhere.
This bit me initially and is likely a common error for
others as well.</p>
</blockquote>
<p>Test your mbsync setup first, see the manual page for details.</p>
<p>As you&rsquo;ve probably already learned from the GitHub repo, to fetch mail
from the public inbox mailing lists on lore, you need small .ini file
detailing which subsystems you&rsquo;re interested in:</p>
<div class="highlight"><pre class="chroma"><code class="language-cfg" data-lang="cfg"><span class="c1"># ~/mail/.notmuch/.lore/sources</span>
<span class="k">[netdev]</span>
<span class="na">url</span><span class="o">=</span><span class="s">https://lore.kernel.org/netdev</span>

<span class="k">[mtd]</span>
<span class="na">url</span><span class="o">=</span><span class="s">https://lore.kernel.org/linux-mtd</span>
</code></pre></div><p>Now we can proceed to combine it all in notmuch!  After <code>notmuch setup</code>
you should have a <code>~/mail/.notmuch/hooks/</code> directory.  Let&rsquo;s create a
<code>pre-hook</code> to fetch gmail and mailing lists from lore:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh"><span class="cp">#!/bin/sh
</span><span class="cp"></span><span class="c1"># ~/mail/.notmuch/hooks/pre-new</span>

<span class="c1"># Fetch mail from Gmail</span>
mbsync -a

<span class="c1"># Pull relevant kernel mailing lists using git, of course</span>
~/src/notmuch-lore/pre-new
</code></pre></div><blockquote>
<p>Remember to <code>chown +x pre-new</code> and the <code>post-new</code>, below!</p>
</blockquote>
<p>For help with tagging, or sorting, you can either use the <code>nmsort()</code>
shell script function that Tobias made, or other tools like <code>afew</code>.
The latter needs a small configuration file:</p>
<div class="highlight"><pre class="chroma"><code class="language-cfg" data-lang="cfg"><span class="c1"># ~/.config/afew/config</span>
<span class="c1"># This is the default filter chain</span>
<span class="k">[SpamFilter]</span>
<span class="k">[KillThreadsFilter]</span>
<span class="k">[ListMailsFilter]</span>
<span class="k">[ArchiveSentMailsFilter]</span>
<span class="k">[InboxFilter]</span>
</code></pre></div><p>Set up the <code>post-new</code> for notmuch as follows.  It goes the same
directory as <code>pre-new</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh"><span class="cp">#!/bin/sh
</span><span class="cp"></span><span class="c1"># ~/mail/.notmuch/hooks/post-new</span>

nmsort<span class="o">()</span>
<span class="o">{</span>
    notmuch tag -new <span class="nv">$1</span> -- tag:new <span class="s2">&#34;</span><span class="nv">$2</span><span class="s2">&#34;</span>
<span class="o">}</span>

<span class="nb">echo</span> <span class="s2">&#34;Me&#34;</span> &gt;<span class="p">&amp;</span><span class="m">2</span>
nmsort <span class="s2">&#34;+me +unread&#34;</span> <span class="s2">&#34;to:troglobit OR cc:troglobit&#34;</span>
nmsort <span class="s2">&#34;+me +unread&#34;</span> <span class="s2">&#34;troglobit&#34;</span>

<span class="nb">echo</span> <span class="s2">&#34;Various Mailing Lists&#34;</span> &gt;<span class="p">&amp;</span><span class="m">2</span>
nmsort <span class="s2">&#34;+lists/pidp-11&#34;</span> <span class="s2">&#34;subject:[PiDP-11]&#34;</span>
<span class="c1">#nmsort &#34;+busybox&#34;    &#34;list:busybox&#34;</span>
<span class="c1">#nmsort &#34;+buildroot&#34;  &#34;list:buildroot&#34;</span>

<span class="nb">echo</span> <span class="s2">&#34;Subsystems&#34;</span> &gt;<span class="p">&amp;</span><span class="m">2</span>
nmsort     <span class="s2">&#34;+bridge +subsys&#34;</span> <span class="s2">&#34;subject:bridge:&#34;</span>
nmsort  <span class="s2">&#34;+switchdev +subsys&#34;</span> <span class="s2">&#34;subject:switchdev:&#34;</span>
nmsort    <span class="s2">&#34;+ethtool +subsys&#34;</span> <span class="s2">&#34;subject:ethtool:&#34;</span>
nmsort    <span class="s2">&#34;+phylink +subsys&#34;</span> <span class="s2">&#34;subject:phylink:&#34;</span>
nmsort    <span class="s2">&#34;+devlink +subsys&#34;</span> <span class="s2">&#34;subject:devlink:&#34;</span>
nmsort        <span class="s2">&#34;+dsa +subsys&#34;</span> <span class="s2">&#34;subject:dsa&#34;</span>

<span class="nb">echo</span> <span class="s2">&#34;Hardware&#34;</span> &gt;<span class="p">&amp;</span><span class="m">2</span>
nmsort    <span class="s2">&#34;+dsa +hw&#34;</span> <span class="s2">&#34;subject:mv88e6&#34;</span>
nmsort   <span class="s2">&#34;+mdio +hw&#34;</span> <span class="s2">&#34;subject:mdio&#34;</span>
nmsort    <span class="s2">&#34;+phy +hw&#34;</span> <span class="s2">&#34;subject:phy&#34;</span>
nmsort  <span class="s2">&#34;+mlxsw +hw&#34;</span> <span class="s2">&#34;subject:mlxsw&#34;</span>

<span class="nb">echo</span> <span class="s2">&#34;Vendors&#34;</span> &gt;<span class="p">&amp;</span><span class="m">2</span>
nmsort   <span class="s2">&#34;+marvell +vendor&#34;</span> <span class="s2">&#34;subject:marvell&#34;</span>
nmsort <span class="s2">&#34;+microchip +vendor&#34;</span> <span class="s2">&#34;subject:microchip&#34;</span>

<span class="c1"># If you don&#39;t use afew, uncomment this</span>
<span class="c1">#nmsort &#34;&#34; &#34;*&#34;</span>

<span class="nb">echo</span> <span class="s2">&#34;Let afew handle the remaining ... &#34;</span> &gt;<span class="p">&amp;</span><span class="m">2</span>
afew --tag --new
</code></pre></div><p>Set up SMTP in Emacs, also stolen from Tobias.</p>
<div class="highlight"><pre class="chroma"><code class="language-lisp" data-lang="lisp"><span class="c1">;; Who am I?</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">user-full-name</span> <span class="s">&#34;Joachim Wiberg&#34;</span><span class="p">)</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">user-mail-address</span> <span class="s">&#34;troglobit@gmail.com&#34;</span><span class="p">)</span>

<span class="c1">;; Email setup</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">message-directory</span> <span class="s">&#34;~/.mail&#34;</span>
      <span class="nv">notmuch-fcc-dirs</span> <span class="no">nil</span>
      <span class="nv">read-mail-command</span> <span class="p">(</span><span class="k">quote</span> <span class="nv">notmuch</span><span class="p">)</span>
      <span class="nv">message-citation-line-format</span> <span class="s">&#34;On %a, %b %d, %Y at %R, %f wrote:&#34;</span>
      <span class="nv">message-citation-line-function</span> <span class="ss">&#39;message-insert-formatted-citation-line</span>
      <span class="p">)</span>

<span class="c1">;; Currently gmail as SMTP server</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">message-send-mail-function</span> <span class="ss">&#39;smtpmail-send-it</span>
      <span class="nv">smtpmail-starttls-credentials</span> <span class="o">&#39;</span><span class="p">((</span><span class="s">&#34;smtp.gmail.com&#34;</span> <span class="mi">587</span> <span class="no">nil</span> <span class="no">nil</span><span class="p">))</span>
      <span class="nv">smtpmail-auth-credentials</span> <span class="o">&#39;</span><span class="p">((</span><span class="s">&#34;smtp.gmail.com&#34;</span> <span class="mi">587</span> <span class="s">&#34;troglobit@gmail.com&#34;</span> <span class="no">nil</span><span class="p">))</span>
      <span class="nv">smtpmail-default-smtp-server</span> <span class="s">&#34;smtp.gmail.com&#34;</span>
      <span class="nv">smtpmail-smtp-server</span> <span class="s">&#34;smtp.gmail.com&#34;</span>
      <span class="nv">smtpmail-smtp-service</span> <span class="mi">587</span>
      <span class="nv">starttls-use-gnutls</span> <span class="no">t</span>
      <span class="p">)</span>
</code></pre></div><p>Done.</p>
]]></content>
        </item>
        
        <item>
            <title>It&#39;s Here! ♥</title>
            <link>/post/2021-04-27-its-here/</link>
            <pubDate>Tue, 27 Apr 2021 20:18:06 +0100</pubDate>
            
            <guid>/post/2021-04-27-its-here/</guid>
            <description>&lt;p&gt;&lt;img src=&#34;/images/finit3.png#floatright&#34; alt=&#34;finit logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finit v4 was finally released the other day! \o/&lt;/p&gt;
&lt;p&gt;It represents the culmination of many years of hard work and careful
thought put in by many people.  There&amp;rsquo;s so much to tell, hardly know
where to begin &amp;hellip; the plan anyway is to use this blog for a series of
posts detailing different aspects and important features.&lt;/p&gt;
&lt;p&gt;The impatient reader can either scroll down to the &lt;strong&gt;video&lt;/strong&gt; below, or
move on to the project home page: &lt;a href=&#34;https://troglobit.com/finit.html&#34;&gt;https://troglobit.com/finit.html&lt;/a&gt;&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p><img src="/images/finit3.png#floatright" alt="finit logo"></p>
<p>Finit v4 was finally released the other day! \o/</p>
<p>It represents the culmination of many years of hard work and careful
thought put in by many people.  There&rsquo;s so much to tell, hardly know
where to begin &hellip; the plan anyway is to use this blog for a series of
posts detailing different aspects and important features.</p>
<p>The impatient reader can either scroll down to the <strong>video</strong> below, or
move on to the project home page: <a href="https://troglobit.com/finit.html">https://troglobit.com/finit.html</a></p>
<p>Here&rsquo;s a video showing it in action, booting Alpine Linux 3.13</p>
<script id="asciicast-410316" src="https://asciinema.org/a/410316.js" async></script>  
<p>Join the <a href="https://github.com/troglobit/finit/discussions/169">discussion on GitHub</a> or #troglobit on Freenode if IRC is
more your thing.</p>]]></content>
        </item>
        
        <item>
            <title>Alpine Linux with Finit</title>
            <link>/post/2021-02-12-alpine-linux-with-finit/</link>
            <pubDate>Fri, 12 Feb 2021 07:24:06 +0100</pubDate>
            
            <guid>/post/2021-02-12-alpine-linux-with-finit/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://alpinelinux.org/&#34;&gt;Alpine Linux&lt;/a&gt; is an amazing little operating
system.  It&amp;rsquo;s small, boots quick, and easy to use.  The size alone makes
it very attractive to container builders.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/finit4-screenshot.png#center&#34; alt=&#34;Alpine Linux started with Finit&#34;&gt;&lt;/p&gt;
&lt;p&gt;This blog post details how to set Alpine up with the Finit init system,
replacing the default OpenRC.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p><a href="https://alpinelinux.org/">Alpine Linux</a> is an amazing little operating
system.  It&rsquo;s small, boots quick, and easy to use.  The size alone makes
it very attractive to container builders.</p>
<p><img src="/images/finit4-screenshot.png#center" alt="Alpine Linux started with Finit"></p>
<p>This blog post details how to set Alpine up with the Finit init system,
replacing the default OpenRC.</p>
<h3 id="alpine-sdk">Alpine SDK</h3>
<p>After install you need to add some more packages to build Finit from
source.  The example given here builds from GIT sources, which require a
few more steps.  Building from release tarballs is easier and does not
bring the same amount of overhead.</p>
<pre><code>apk add alpine-sdk autoconf automake libtool linux-headers
</code></pre>
<h3 id="finit-deps">Finit Deps</h3>
<p>Finit relies on two libraries that used to be built-in but now are their
own separate projects: [libite (-lite)][2] and [libuEv][3].  The former
contains basic frog DNA and the latter a small event loop that basically
is just a wrapper for Linux <code>epoll()</code> &amp; C:o.</p>
<pre><code>git clone https://github.com/troglobit/libite
git clone https://github.com/troglobit/libuev
git clone https://github.com/troglobit/finit
</code></pre>
<p>Build each of the dependencies first:</p>
<pre><code>cd libite
./autogen &amp;&amp; ./configure &amp;&amp; make &amp;&amp; make install
...
cd ../libuev
./autogen &amp;&amp; ./configure &amp;&amp; make &amp;&amp; make install
...
</code></pre>
<h3 id="finit">Finit</h3>
<p>Now lets build Finit for Alpine!</p>
<pre><code>cd ../finit
./autogen
./contrib/alpine/build.sh
...
*** Done
</code></pre>
<p>Time to wake up!  We&rsquo;re now at the critical part where we can potentially
screw things up &ndash; the installation.</p>
<blockquote>
<p>Please, read the output from the install script carefully!</p>
</blockquote>
<pre><code>./contrib/alpine/install.sh
</code></pre>
<p>The first question is easy, do you really want to install Finit?  Yes.</p>
<p>For the second question, however, <em>I recommend answering NO</em> first and
manually set <code>init=</code> in the boot loader, just to make sure everything
works OK.  You can re-run <code>install.sh</code> later to repeat the process.</p>
<pre><code>*** Install Finit as the system default IOnit (y/N)? N
*** Done
</code></pre>
<h3 id="testing">Testing</h3>
<p>Reboot your system and be quick to press the Tab key to enter the Alpine
boot loader menu.  Press Tab again to edit the kernel command line, we
want to:</p>
<ol>
<li>Remove the &lsquo;quiet&rsquo; option</li>
<li>Append the &lsquo;init=/sbin/finit&rsquo; option</li>
</ol>
<p>The second of the two is the interesting part, that&rsquo;s what tells the
kernel to not use its built-in heuristics to select the first user space
program to start, but instead start Finit.  We remove the quiet option
just to get some more debug info from the kernel and a boot progress
from Finit itself.</p>
<p>Press Enter to boot.</p>
<p>If everything worked you should see the bootup and be presented with the
login prompt, as shown below.</p>
<p>If you like the setup, you can go ahead and run the install script again
and this time answer Yes to the last question.</p>
<p>Use the <code>initctl</code> companion tool to Finit to start/stop, activate and
reload new configurations.</p>
<p>Good luck and have fun! :)</p>]]></content>
        </item>
        
        <item>
            <title>Backtrace in C</title>
            <link>/post/2020-11-15-backtrace-in-c/</link>
            <pubDate>Sun, 15 Nov 2020 17:25:00 +0100</pubDate>
            
            <guid>/post/2020-11-15-backtrace-in-c/</guid>
            <description>&lt;p&gt;Reminder to self: remember &lt;code&gt;CFLAGS=-g -Og -rdynamic&lt;/code&gt; to allow
&lt;code&gt;backtrace_symbols()&lt;/code&gt; to actually pretty print function names
in stack traces.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Reminder to self: remember <code>CFLAGS=-g -Og -rdynamic</code> to allow
<code>backtrace_symbols()</code> to actually pretty print function names
in stack traces.</p>
<p>Full example:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">jocke@luthien:~/src/pim6sd <span class="o">[</span>master<span class="o">]</span>$ ./configure <span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">&#34;-g -Og -rdynamic&#34;</span> <span class="o">&amp;&amp;</span> make <span class="nv">V</span><span class="o">=</span><span class="m">1</span> clean all
</code></pre></div><p>Source code for stack tracer to instrument your code with:</p>
<div class="highlight"><pre class="chroma"><code class="language-C" data-lang="C"><span class="cp">#include</span> <span class="cpf">&lt;execinfo.h&gt;</span><span class="cp">
</span><span class="cp"></span>
<span class="kt">void</span> <span class="nf">print_trace</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">void</span> <span class="o">*</span><span class="n">array</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span>
    <span class="kt">char</span> <span class="o">**</span><span class="n">strings</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">size</span><span class="p">,</span> <span class="n">i</span><span class="p">;</span>

    <span class="n">size</span> <span class="o">=</span> <span class="n">backtrace</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
    <span class="n">strings</span> <span class="o">=</span> <span class="n">backtrace_symbols</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="n">size</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">strings</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&#34;Obtained %d stack frames.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">size</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">size</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&#34;%s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">strings</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>

    <span class="n">free</span><span class="p">(</span><span class="n">strings</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Weird Screen Artifacts on X200</title>
            <link>/post/2020-08-23-weird-screen-artifacts-on-x200/</link>
            <pubDate>Sun, 23 Aug 2020 14:02:00 +0000</pubDate>
            
            <guid>/post/2020-08-23-weird-screen-artifacts-on-x200/</guid>
            <description>I blogged earlier about the awesome little ThinkPad X200 I found and its blinking WiFi LED. Briefly I mentioned an odd issue with X/Wayland on LMDE 4. This turned out to be a HW bug that can only be worked around by disabling hardware acceleration for virtualization:
https://forums.lenovo.com/t5/Windows-8-1-8-7-Vista-and-XP-Discussions/Bizarre-screen-artifacts-on-R400-Integrated-Graphics-running-Win-7-RTM/m-p/153980?page=1#199768
The post says it should be sufficient to &amp;ldquo;Disable Virtualization Technology for Directed-IO (VT-d)&amp;quot;, but that didn&amp;rsquo;t work for me, and I wanted to keep the 8 GiB of RAM I managed to fit into it.</description>
            <content type="html"><![CDATA[<p>I blogged earlier about the awesome little ThinkPad X200 I found and its
blinking WiFi LED.  Briefly I mentioned an odd issue with X/Wayland on
LMDE 4.  This turned out to be a HW bug that can only be worked around
by disabling hardware acceleration for virtualization:</p>
<p><a href="https://forums.lenovo.com/t5/Windows-8-1-8-7-Vista-and-XP-Discussions/Bizarre-screen-artifacts-on-R400-Integrated-Graphics-running-Win-7-RTM/m-p/153980?page=1#199768">https://forums.lenovo.com/t5/Windows-8-1-8-7-Vista-and-XP-Discussions/Bizarre-screen-artifacts-on-R400-Integrated-Graphics-running-Win-7-RTM/m-p/153980?page=1#199768</a></p>
<p>The post says it should be sufficient to <em>&ldquo;Disable Virtualization
Technology for Directed-IO (VT-d)&quot;</em>, but that didn&rsquo;t work for me,
and I wanted to keep the 8 GiB of RAM I managed to fit into it.
What <em>did work</em>, however, was to disable all the virtualization
options.</p>
]]></content>
        </item>
        
        <item>
            <title>Wireguard and DNS Timeout</title>
            <link>/post/2020-07-17-wireguard-and-dns-timeout/</link>
            <pubDate>Fri, 17 Jul 2020 11:04:09 +0200</pubDate>
            
            <guid>/post/2020-07-17-wireguard-and-dns-timeout/</guid>
            <description>&lt;p&gt;For a while now my Wireguard VPN provider has been handing out a bad DNS
server.  So whenever I do a DNS lookup it takes five (5!) seconds timing
out, which is quite annoying.&lt;/p&gt;
&lt;p&gt;This blog post is about how you can fix this with &lt;code&gt;openresolv&lt;/code&gt; in Ubuntu.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>For a while now my Wireguard VPN provider has been handing out a bad DNS
server.  So whenever I do a DNS lookup it takes five (5!) seconds timing
out, which is quite annoying.</p>
<p>This blog post is about how you can fix this with <code>openresolv</code> in Ubuntu.</p>
<p>When you <code>apt install wireguard wireguard-tools</code> on Ubuntu 20.04, you
need a manager for <code>/etc/resolv.conf</code>.  There are two options here; the
traditional <code>resolvconf</code> package and the newer <code>openresolv</code>.  To fix my
problems I chose the latter.</p>
<p>With the system up and your <code>wg0</code> connection active (setting it up is
not the topic of this post), edit the file <code>/etc/resolvconf.conf</code>, yes
its named that even though we&rsquo;re using the <code>openresolv</code> package.  There
is lots of stuff already in it, but add the following:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">$ sudo vim /etc/resolvconf.conf

# Slow/inactive DNS servers /Jocke
name_server_blacklist=2001:9b1:8826::53

# The edns0 option is from the original resolvconf
resolv_conf_options=&#34;edns0 timeout:1&#34;

# Also from original resolvonf
append_search=localdomain
</code></pre></div><p>I&rsquo;ve added my malfunctioning IPv6 DNS server to the blacklist.  This
means any provider wanting to add a DNS server to <code>/etc/resolv.conf</code>
will be filtered through that blacklist.</p>
<p>Finally, the <code>timeout:1</code> option (notice the double qoutes for multiple
options!).  I&rsquo;ve set the timeout to 1, the default is 5 sec, in case
any other DNS server starts misbehaving.</p>]]></content>
        </item>
        
        <item>
            <title>Fixing file sharing in Debian/Ubuntu/Mint</title>
            <link>/post/2020-07-13-fixing-file-sharing-in-debian/ubuntu/mint/</link>
            <pubDate>Mon, 13 Jul 2020 17:37:00 +0100</pubDate>
            
            <guid>/post/2020-07-13-fixing-file-sharing-in-debian/ubuntu/mint/</guid>
            <description>&lt;p&gt;Mounting my ReadyNAS from Nautilus stopped working after upgrading to
Ubuntu 20.04.  Turns out there was a change in behavior in Sambva v4.11
that disabled SMB1 protocol by default.  It&amp;rsquo;ll be interesting to see how
this pans out in the rest of the Linux community &amp;hellip; fortunately there&amp;rsquo;s
a workaround!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; same on Debian 11 (&lt;em&gt;bullseye&lt;/em&gt;) and Linux Mint 20 (&lt;em&gt;Ulyana&lt;/em&gt;)&lt;/p&gt;
&lt;/blockquote&gt;</description>
            <content type="html"><![CDATA[<p>Mounting my ReadyNAS from Nautilus stopped working after upgrading to
Ubuntu 20.04.  Turns out there was a change in behavior in Sambva v4.11
that disabled SMB1 protocol by default.  It&rsquo;ll be interesting to see how
this pans out in the rest of the Linux community &hellip; fortunately there&rsquo;s
a workaround!</p>
<blockquote>
<p><strong>Update:</strong> same on Debian 11 (<em>bullseye</em>) and Linux Mint 20 (<em>Ulyana</em>)</p>
</blockquote>
<p>The fix, from <a href="https://askubuntu.com/questions/1229929/cant-acces-nas-anymore-after-upgrading-to-20-04">AskUbuntu</a> and <a href="https://www.reddit.com/r/linuxquestions/comments/djvpdn/smb_connection_nautilus_error_debian_bullseye/">Reddit</a>, suggest lowering the min
protocol version.  To do this, open <code>/etc/samba/smb.conf</code> with your
favorite editor:</p>
<pre><code>sudo mg /etc/samba/smb.conf
</code></pre>
<p>Add the following line to the <code>[global]</code> section:</p>
<pre><code>client min protocol = NT1
</code></pre>
<p>If you&rsquo;re using Nautilus (Files, Nemo), you&rsquo;re done.  But if you&rsquo;re
using Samba, e.g. from the command line, restart it to make change take
effect:</p>
<pre><code>sudo systemctl restart smbd.service
</code></pre>
<p>That&rsquo;s it.  If it doesn&rsquo;t work, you could try setting an ever lower
protocol version:</p>
<pre><code>client min protocol = CORE
</code></pre>
<p>For me, however, using <code>NT1</code> makes everything work.  Including renaming
files and such, which does not work with <code>CORE</code>.</p>]]></content>
        </item>
        
        <item>
            <title>Open Source Releases</title>
            <link>/post/2020-06-09-open-source-releases/</link>
            <pubDate>Tue, 09 Jun 2020 22:48:52 +0200</pubDate>
            
            <guid>/post/2020-06-09-open-source-releases/</guid>
            <description>&lt;p&gt;The last couple of months have been crazy.  The downturn in the economy
due to Covid-19, mass layoffs, social distancing and quarantine.  Not
to mention the unrest in US and Europe in the wake of George Floyd&amp;rsquo;s
uneccessary death.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>The last couple of months have been crazy.  The downturn in the economy
due to Covid-19, mass layoffs, social distancing and quarantine.  Not
to mention the unrest in US and Europe in the wake of George Floyd&rsquo;s
uneccessary death.</p>
<p>I&rsquo;ve always been a bit of a misanthrope and indoor enthusiast, keeping
to myself and working on my own stuff.  But even I have to admit to
being quite worried about the world in general and have cried on more
than one occasion.</p>
<p>I&rsquo;ve been channeling all these feelings into my work, primarily all my
Open Source projects.  Over just the last couple of weeks the following
new releases have hit <a href="https://github.com/troglobit">GitHub</a>, my
<a href="https://ftp.troglobit.com">FTP</a>, and my new <a href="https://deb.troglobit.com">.deb
repository</a>:</p>
<ul>
<li><a href="https://github.com/troglobit/sysklogd/releases/tag/v2.1.2">sysklogd v2.1.2</a></li>
<li><a href="https://github.com/troglobit/libite/releases/tag/v2.2.0">-lite v2.2.0</a></li>
<li><a href="https://github.com/troglobit/mdnsd/releases/tag/v0.10">mdnsd v0.10</a></li>
<li><a href="https://github.com/troglobit/uftpd/releases/tag/v2.12">uftpd v2.12</a></li>
<li><a href="https://github.com/troglobit/inadyn/releases/tag/v2.7">In-a-Dyn v2.7</a></li>
<li><a href="https://github.com/troglobit/netcalc/releases/tag/v2.1.6">netcalc v2.1.6</a></li>
<li>ssdp-responder v1.6, and</li>
<li><a href="https://github.com/troglobit/ssdp-responder/releases/tag/v1.7">ssdp-responder v1.7</a></li>
<li><a href="https://github.com/troglobit/nemesis/releases/tag/v1.7">The Nemesis Project v1.7</a></li>
<li><a href="https://github.com/troglobit/mrouted/releases/tag/4.0">mrouted v4.0</a></li>
</ul>
<p>I&rsquo;m most proud of the <a href="/projects/mrouted/">mrouted</a> release, because
it&rsquo;s the culmination of over 10 years of hard work since I first adopted
it.  It&rsquo;s been a wild ride and I&rsquo;ve learned a LOT!</p>
<blockquote>
<p><em>Please take care of each other and be kind to your fellow man!</em>
We&rsquo;re all in this together.</p>
</blockquote>]]></content>
        </item>
        
        <item>
            <title>sudo tricks</title>
            <link>/post/2020-06-07-sudo-tricks/</link>
            <pubDate>Sun, 07 Jun 2020 12:25:52 +0200</pubDate>
            
            <guid>/post/2020-06-07-sudo-tricks/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;My name is Joachim and I&amp;rsquo;m a &lt;code&gt;sudo su -&lt;/code&gt; user.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Before you read any further, please read &lt;a href=&#34;/2016/12/11/a-life-without-sudo/&#34;&gt;A life without sudo&lt;/a&gt;.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<blockquote>
<p>&ldquo;My name is Joachim and I&rsquo;m a <code>sudo su -</code> user.&rdquo;</p>
</blockquote>
<p>Before you read any further, please read <a href="/2016/12/11/a-life-without-sudo/">A life without sudo</a>.</p>
<p>As an avid user of sudo, despite enjoying the wonders of capabilities, I
appreciate all the extra bells and whistles it comes with.  Here&rsquo;s a couple
of my favorites.</p>
<p>Remeber to edit <code>/etc/sudoers</code> with the proper command, which validates the
input to prevent you from locking yourself out:</p>
<pre><code>sudo visudo
</code></pre>
<h2 id="1-remember-auth-in-other-terminal-windows">1. Remember auth. in other terminal windows</h2>
<p>When using <code>sudo</code> in one terminal and then moving to another, you have to
type in your password again.  To avoid that and reuse your &ldquo;ticket&rdquo;, add
the following line after existing <code>Defaults</code>:</p>
<pre><code>Defaults	!tty_tickets
</code></pre>
<h2 id="2-visual-feedback-in-sudo-prompt">2. Visual feedback in sudo prompt</h2>
<p>I&rsquo;m very clumsy with my fingers, in particular early in the morning, add
<code>pwfeedback</code> to the line:</p>
<pre><code>Defaults	env_reset
</code></pre>
<p>Like this:</p>
<pre><code>Defaults	env_reset,pwfeedback
</code></pre>
<p>Now you can see a <code>*</code> for each character you input.  Now you don&rsquo;t have
to Ctrl-U and retype everything.</p>]]></content>
        </item>
        
        <item>
            <title>Fix blinking WiFi LED on X200</title>
            <link>/post/2020-03-28-fix-blinking-wifi-led-on-x200/</link>
            <pubDate>Sat, 28 Mar 2020 14:16:00 +0000</pubDate>
            
            <guid>/post/2020-03-28-fix-blinking-wifi-led-on-x200/</guid>
            <description>&lt;p&gt;Recently got my hands on a ThinkPad X200, the last model without the
useless touchpad and with the awesome classic keyboard.  A fine little
machine that can easily be upgraded with an SSD disk and 8 GiB RAM!&lt;/p&gt;
&lt;p&gt;I set it up with &lt;a href=&#34;https://www.linuxmint.com/download_lmde.php&#34;&gt;Linx Mint (LMDE 4)&lt;/a&gt;, which worked great to begin
with, but there was some odd issue with X/Wayland that sometimes caused
the screen (only the screen) to freeze up and show random color patterns.
Only way to workaround it was to suspend, wait, and resume again.  So
now I&amp;rsquo;m running Ubuntu 20.04 on it and everything seems to work a lot
better, this far.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Recently got my hands on a ThinkPad X200, the last model without the
useless touchpad and with the awesome classic keyboard.  A fine little
machine that can easily be upgraded with an SSD disk and 8 GiB RAM!</p>
<p>I set it up with <a href="https://www.linuxmint.com/download_lmde.php">Linx Mint (LMDE 4)</a>, which worked great to begin
with, but there was some odd issue with X/Wayland that sometimes caused
the screen (only the screen) to freeze up and show random color patterns.
Only way to workaround it was to suspend, wait, and resume again.  So
now I&rsquo;m running Ubuntu 20.04 on it and everything seems to work a lot
better, this far.</p>
<p>One really annoying thing is the WiFi LED blinking like crazy.  Very
disturbing when you&rsquo;re working on something.</p>
<p>Turns out it was quite easy to fix.  Create the following file, or
modify it if it exists already (Ubuntu), so that the first line after
comments is this:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback"># sudo editor /etc/modprobe.d/iwlwifi.conf
options iwlwifi led_mode=1
</code></pre></div><p>Reboot et voilà! \o/</p>]]></content>
        </item>
        
        <item>
            <title>HowTo: Install pre-built packages</title>
            <link>/post/2020-02-23-howto-install-pre-built-packages/</link>
            <pubDate>Sun, 23 Feb 2020 19:16:45 +0100</pubDate>
            
            <guid>/post/2020-02-23-howto-install-pre-built-packages/</guid>
            <description>&lt;p&gt;Every now and then people ask me for pre-built packages of software I
maintain.  Up until today I&amp;rsquo;ve had to refer them to the cold hard build
instructions for each of my programs.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Every now and then people ask me for pre-built packages of software I
maintain.  Up until today I&rsquo;ve had to refer them to the cold hard build
instructions for each of my programs.</p>
<p>However, today I announce <a href="https://deb.troglobit.com">https://deb.troglobit.com</a>, a repository of
pre-built amd64 packages built for Debian 10 (Buster), which will work
on any Debian derived distribution; Ubuntu, Linux Mint, etc.</p>
<p>To install packages from this repository,</p>
<ol>
<li>
<p>add the archive key:</p>
<pre><code> curl -sS https://deb.troglobit.com/pubkey.gpg | sudo apt-key add -
</code></pre>
</li>
<li>
<p>add the repository to your sources.list:</p>
<pre><code> echo &quot;deb [arch=amd64] https://deb.troglobit.com/debian stable main&quot; \
      | sudo tee /etc/apt/sources.list.d/troglobit.list
</code></pre>
</li>
<li>
<p>update the package cache</p>
<pre><code> sudo apt-get update
</code></pre>
</li>
</ol>
<p>To install some packages:</p>
<pre><code>sudo apt-get install inadyn mg uftpd mcjoin mini-snmpd libeditline-dev
</code></pre>
<p>Please let me know when there&rsquo;s anything you&rsquo;d like me to add.</p>]]></content>
        </item>
        
        <item>
            <title>Set up a Debian/Ubuntu APT Repository</title>
            <link>/2017/09/30/set-up-a-debian-ubuntu-apt-repository/</link>
            <pubDate>Sat, 22 Feb 2020 12:28:00 +0000</pubDate>
            
            <guid>/2017/09/30/set-up-a-debian-ubuntu-apt-repository/</guid>
            <description>&lt;p&gt;How to set up a Debian/Ubuntu APT repository with GPG signing.&lt;/p&gt;
&lt;p&gt;At first I tried to use &lt;a href=&#34;https://debian-administration.org/article/717/Setting_up_a_personal_secure_apt_repository&#34;&gt;Bas Wijnen&amp;rsquo;s mini-dinstall howto&lt;/a&gt;, but never
managed to get it working.  Probably due to problems with GPG.  Then I
went down the tried and true path of using &lt;a href=&#34;https://debian-administration.org/article/286/Setting_up_your_own_APT_repository_with_upload_support&#34;&gt;reprepro&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve tried to document my steps here, but I&amp;rsquo;ve very likely missed a few
steps that a beginner admin may run into. YMMV B-)&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>How to set up a Debian/Ubuntu APT repository with GPG signing.</p>
<p>At first I tried to use <a href="https://debian-administration.org/article/717/Setting_up_a_personal_secure_apt_repository">Bas Wijnen&rsquo;s mini-dinstall howto</a>, but never
managed to get it working.  Probably due to problems with GPG.  Then I
went down the tried and true path of using <a href="https://debian-administration.org/article/286/Setting_up_your_own_APT_repository_with_upload_support">reprepro</a>.</p>
<p>I&rsquo;ve tried to document my steps here, but I&rsquo;ve very likely missed a few
steps that a beginner admin may run into. YMMV B-)</p>
<h3 id="install">Install</h3>
<p>First set up the web server and its directories.  I obviously use
<a href="https://github.com/troglobit/merecat">Merecat httpd</a>, but you can use just about any web server:</p>
<pre><code>$ sudo mkdir /srv/deb
$ sudo mkdir /var/www/deb.troglobit.com
$ sudo echo &quot;/srv/deb  /var/www/deb.troglobit.com  none  defaults,bind  0 0&quot; &gt;&gt;/etc/fstab
</code></pre>
<p>Then install reprepro</p>
<pre><code>$ sudo apt install reprepro
</code></pre>
<p>The man page and the documentation in <code>/usr/share/doc/reprepro/</code> is
quite good, so I recommend at least skimming through it before you
continue.</p>
<h3 id="setup">Setup</h3>
<p>The following steps create the necessary directories and configuration
files:</p>
<pre><code>$ sudo mkdir -p /srv/deb/{debian,ubuntu}/{conf,dists,incoming,indices,logs,pool,project,tmp}
$ cd /srv/deb
$ sudo chown -R `whoami` .
</code></pre>
<p>I&rsquo;ve created a set of directories for both Debian and Ubuntu, below I
will continue with Debian only.  Notice the use of Debian code names
which are different in the Ubuntu world.</p>
<pre><code>$ cd debian/conf
$ mg distributions
</code></pre>
<p>Notice the <code>Suite</code> and <code>Codename</code> for each entry in the <code>distributions</code>
file below.  These are the official names and their current release
state in Debian.  Below we will use <code>reprepro createsymlinks</code> to
automatically create synmlinks based on this file.</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">Origin: Troglobit Software
Label: deb.troglobit.com
Suite: oldstable
Codename: stretch
Architectures: amd64
Components: main
Description: Unofficial Debian/Ubuntu Packages maintained by Joachim Nilsson
SignWith: 4B8786A6

Origin: Troglobit Software
Label: deb.troglobit.com
Suite: stable
Codename: buster
Architectures: amd64
Components: main
Description: Unofficial Debian/Ubuntu Packages maintained by Joachim Nilsson
SignWith: 4B8786A6

Origin: Troglobit Software
Label: deb.troglobit.com
Suite: unstable
Codename: sid
Architectures: amd64
Components: main
Description: Unofficial Debian/Ubuntu Packages maintained by Joachim Nilsson
SignWith: 4B8786A6
</code></pre></div><p>Next up is <code>conf/incoming</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">Name: default
IncomingDir: incoming
TempDir: tmp
Allow: oldstable&gt;stretch stable&gt;buster unstable&gt;sid
Cleanup: on_deny on_error
</code></pre></div><p>We can now create the initial structure, symbolic links and initial
Packages files:</p>
<pre><code>$ cd /srv/deb/debian
$ reprepro -Vb . createsymlinks
$ reprepro -Vb . export
</code></pre>
<h3 id="signing">Signing</h3>
<p>To be able to actually sign <code>.deb</code> files you need to create (and also
publish the public part of) a GPG signing key.  Answer the questions to
<code>--gen-key</code> below, select type 4 RSA key for signing.  Make sure to use
a 4096 bit key.  I set it up <em>without a passphrase</em> for convenince¹ and
then upload the resulting public key:</p>
<pre><code>$ gpg --gen-key
gpg: key 44D7FA0A marked as ultimately trusted
public and secret key created and signed.
$ gpg --send-keys 4B8786A6
gpg: sending key 4B8786A6 to hkp server keys.gnupg.net
</code></pre>
<p>Add the fingerprint to the <code>SignWith:</code> in the <code>conf/distributions</code> file.</p>
<h3 id="publishing-the-public-key">Publishing the Public Key</h3>
<p>The public part of the GPG key also needs to be published as a regular
<code>.deb</code> package.  Clone my <a href="https://github.com/troglobit/deb">GIT repo</a>
and change the <code>active/archive.asc</code> key:</p>
<pre><code>$ git clone https://github.com/troglobit/deb.git
$ cd deb/
$ gpg --export archive@troglobit.com &gt;active/archive.gpg
</code></pre>
<p>Then edit the files in the <code>debian/</code> sub-directory to match your repo
and build the package:</p>
<pre><code>$ dpkg-buildpackage
</code></pre>
<p>Alternatively, publish it in ascii form in a safe place:</p>
<pre><code>$ cd /srv/deb/
$ gpg --armor --export archive@troglobit.com &gt; pubkey.gpg
</code></pre>
<p>Done.</p>
<h3 id="developer">Developer</h3>
<p>It&rsquo;s now time for the developer(s) to upload the(ir) package(s) to the
<code>/srv/deb/debian/incoming/</code> directory.</p>
<pre><code>$ scp troglobit-archive-keyring_* server:/srv/deb/debian/incoming/
</code></pre>
<p>Then tell reprepro to process the incoming queue:</p>
<pre><code>$ cd /srv/deb/debian
$ reprepro -Vb . processincoming default
</code></pre>
<h3 id="users">Users</h3>
<pre><code>$ curl -sS https://deb.troglobit.com/pubkey.gpg | sudo apt-key add -
$ echo &quot;deb [arch=amd64] https://deb.troglobit.com/debian stable main&quot; | sudo tee /etc/apt/sources.list.d/troglobit.list
$ sudo apt-get update
</code></pre>
<p>There.  Packages can now be installed.</p>
<h3 id="footnotes">Footnotes</h3>
<p>¹ To remove a GPG passphrase from a key, use <code>gpg --edit-key HASH</code>, and
then <code>passwd</code> at the <code>gpg&gt;</code> prompt.  Simply press enter when prompted
for the new passphrase.</p>]]></content>
        </item>
        
        <item>
            <title>Useful UNIX API:s</title>
            <link>/post/2020-02-22-useful-unix-apis/</link>
            <pubDate>Sat, 22 Feb 2020 09:45:00 +0000</pubDate>
            
            <guid>/post/2020-02-22-useful-unix-apis/</guid>
            <description>&lt;p&gt;Had an interesting conversation with a buddy last night.  It started out
as a shift-reduce problem with Bison and ended up a ping-pong of useful
UNIX API:s.  We concluded that despite having worked professionally with
UNIX for over two decades, it is still very satisfying finding gems like
these.&lt;/p&gt;
&lt;p&gt;Most people are completely unaware they exist and end up rolling their
own (buggy) implementations.  For instance, string manipulation and
various forms of linked lists.  Which is why I many years ago extracted
the &lt;em&gt;frog DNA&lt;/em&gt; from &lt;a href=&#34;https://github.com/troglobit/finit/&#34;&gt;Finit&lt;/a&gt; to a
separate library called &lt;a href=&#34;https://github.com/troglobit/libite/&#34;&gt;libite&lt;/a&gt;,
or -lite for short.  It imports the OpenBSD &lt;code&gt;strlcpy()&lt;/code&gt; family of API:s,
up-to-date &lt;code&gt;queue.h&lt;/code&gt; with the &lt;code&gt;_SAFE&lt;/code&gt; iterators, and more.  Some people
like &lt;a href=&#34;https://libbsd.freedesktop.org/wiki/&#34;&gt;libbsd&lt;/a&gt; for this, but I&amp;rsquo;ve
found many of the ports incomplete and unsafe and prefer to stay closer
to the upstream *BSD versions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; This post was originally written Nov 14, 2015.  It was a
Saturday and I remember being extremely inspired when I wrote it.  I&amp;rsquo;ve
continued adding to it over the years, and still do.  So, as of Jul 2,
2017 I&amp;rsquo;m bumping the modification date each time I add something new :-)&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Had an interesting conversation with a buddy last night.  It started out
as a shift-reduce problem with Bison and ended up a ping-pong of useful
UNIX API:s.  We concluded that despite having worked professionally with
UNIX for over two decades, it is still very satisfying finding gems like
these.</p>
<p>Most people are completely unaware they exist and end up rolling their
own (buggy) implementations.  For instance, string manipulation and
various forms of linked lists.  Which is why I many years ago extracted
the <em>frog DNA</em> from <a href="https://github.com/troglobit/finit/">Finit</a> to a
separate library called <a href="https://github.com/troglobit/libite/">libite</a>,
or -lite for short.  It imports the OpenBSD <code>strlcpy()</code> family of API:s,
up-to-date <code>queue.h</code> with the <code>_SAFE</code> iterators, and more.  Some people
like <a href="https://libbsd.freedesktop.org/wiki/">libbsd</a> for this, but I&rsquo;ve
found many of the ports incomplete and unsafe and prefer to stay closer
to the upstream *BSD versions.</p>
<p><strong>Update:</strong> This post was originally written Nov 14, 2015.  It was a
Saturday and I remember being extremely inspired when I wrote it.  I&rsquo;ve
continued adding to it over the years, and still do.  So, as of Jul 2,
2017 I&rsquo;m bumping the modification date each time I add something new :-)</p>
<h2 id="sysv-searchh">SysV <code>search.h</code></h2>
<p>Mangage a <a href="http://pubs.opengroup.org/onlinepubs/009695399/functions/insque.html">simple queue</a>:</p>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/insque.3.html"><code>insque()</code></a>,</li>
<li><a href="http://man7.org/linux/man-pages/man3/remque.3.html"><code>remque()</code></a>,</li>
</ul>
<p>Manage <a href="http://pubs.opengroup.org/onlinepubs/009695399/functions/hcreate.html">hash search table</a>:</p>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/hsearch.3.html"><code>hsearch()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/hcreate.3.html"><code>hcreate()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/hdestroy.3.html"><code>hdestroy()</code></a></li>
</ul>
<p>Manage a <a href="http://pubs.opengroup.org/onlinepubs/009695399/functions/tsearch.html">binary search tree</a>:</p>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/tsearch.3.html"><code>tsearch()</code></a>,</li>
<li><a href="http://man7.org/linux/man-pages/man3/tfind.3.html"><code>tfind()</code></a>,</li>
<li><a href="http://man7.org/linux/man-pages/man3/tdelete.3.html"><code>tdelete()</code></a>,</li>
<li><a href="http://man7.org/linux/man-pages/man3/twalk.3.html"><code>twalk()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/tdestroy.3.html"><code>tdestroy()</code></a>,</li>
</ul>
<p><a href="http://pubs.opengroup.org/onlinepubs/009695399/functions/lsearch.html">Linear search</a> and update:</p>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/lfind.3.html"><code>lfind()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/lsearch.3.html"><code>lsearch()</code></a></li>
</ul>
<h2 id="bsd-sysqueueh">BSD <code>sys/queue.h</code></h2>
<p><a href="https://www.freebsd.org/cgi/man.cgi?query=queue&amp;sektion=3">This header</a> has lots of macros for handling various forms of
linked lists.  The version in GLIBC is a bit behind the BSD&rsquo;s, because
the latter also have <code>_safe()</code> versions of some macros to aid the user
in some tricky cases, e.g. when removing entries while iterating.</p>
<p>Several types of lists are supported:</p>
<ul>
<li>LIST: Doubly linked list</li>
<li>SLIST: Single linked list</li>
<li>STAILQ: Single linked tail queue</li>
<li>SIMPLEQ: Simple queue</li>
<li>TAILQ: Tail queue</li>
</ul>
<p>Here&rsquo;s a few of them, this example for doubly linked lists:</p>
<ul>
<li><code>LIST_INIT()</code></li>
<li><code>LIST_EMPTY()</code></li>
<li><code>LIST_FIRST()</code></li>
<li><code>LIST_NEXT()</code></li>
<li><code>LIST_REMOVE()</code></li>
<li><code>LIST_FOREACH()</code></li>
<li><code>LIST_INSERT_AFTER()</code></li>
<li><code>LIST_INSERT_BEFORE()</code></li>
<li><code>LIST_INSERT_HEAD()</code></li>
</ul>
<p>I wrote a <a href="https://github.com/troglobit/toolbox/blob/master/tailq-demo.c">demo of the TAILQ API</a> a couple of years ago.</p>
<h2 id="other-noteworthy-apis">Other Noteworthy API&rsquo;s</h2>
<p>Other (standard/POSIX) functions worthy of mentioning here are:</p>
<h3 id="stdioh"><code>stdio.h</code></h3>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/fmemopen.3.html"><code>fmemopen()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/getdelim.3.html"><code>getdelim()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/getline.3.html"><code>getline()</code></a></li>
</ul>
<h3 id="stdlibh"><code>stdlib.h</code></h3>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/atexit.3.html"><code>atexit()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/bsearch.3.html"><code>bsearch()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/realpath.3.html"><code>realpath()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/qsort.3.html"><code>qsort()</code></a></li>
</ul>
<h3 id="globh"><code>glob.h</code></h3>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/glob.3.html"><code>glob()</code></a></li>
</ul>
<h3 id="fnmatchh"><code>fnmatch.h</code></h3>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/fnmatch.3.html"><code>fnmatch()</code></a></li>
</ul>
<h3 id="ftsh"><code>fts.h</code></h3>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/fts_open.3.html"><code>fts_open()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/fts_read.3.html"><code>fts_read()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/fts_close.3.html"><code>fts_close()</code></a></li>
</ul>
<h3 id="ftwh"><code>ftw.h</code></h3>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/ftw.3.html"><code>ftw()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/nftw.3.html"><code>nftw()</code></a></li>
</ul>
<h3 id="unistdh"><code>unistd.h</code></h3>
<ul>
<li><a href="http://man7.org/linux/man-pages/man2/access.2.html"><code>access()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man2/alarm.2.html"><code>alarm()</code></a>,
<a href="http://man7.org/linux/man-pages/man2/pause.2.html"><code>pause()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/crypt.3.html"><code>crypt()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/daemon.3.html"><code>daemon()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man2/pipe.2.html"><code>pipe()</code></a></li>
<li><a href="http://man7.org/linux/man-pages/man3/profil.3.html"><code>profil()</code></a></li>
</ul>
<h3 id="wordexph"><code>wordexp.h</code></h3>
<ul>
<li><a href="http://man7.org/linux/man-pages/man3/wordexp.3.html"><code>wordexp()</code></a></li>
</ul>
<p><strong>Note:</strong> API&rsquo;s specific to GNU or BSD are not included, but there are
<em>many</em> more useful functions on your specific OS, in case you do not
need to write code that is portable across different UNIX platforms.
Examples can be <code>unshare()</code> and <code>clone()</code> on Linux and <code>pledge()</code> on
OpenBSD, all highly useful but also very specific.</p>]]></content>
        </item>
        
        <item>
            <title>BSD syslogd in Linux</title>
            <link>/post/2019-11-03-bsd-syslogd-in-linux/</link>
            <pubDate>Sun, 03 Nov 2019 23:04:00 +0100</pubDate>
            
            <guid>/post/2019-11-03-bsd-syslogd-in-linux/</guid>
            <description>&lt;p&gt;Some time ago now I was in a meeting with a customer where I first learned of
the new syslog standard, &lt;a href=&#34;https://tools.ietf.org/html/rfc5424&#34;&gt;RFC5424&lt;/a&gt;.  I say &amp;ldquo;new&amp;rdquo; because, despite it being
ten years old, it was new to me.&lt;/p&gt;
&lt;p&gt;Three weeks ago I started updating my fork of &lt;a href=&#34;https://www.infodrom.org/projects/sysklogd/&#34;&gt;sysklogd&lt;/a&gt; to be &lt;a href=&#34;https://tools.ietf.org/html/rfc5424&#34;&gt;RFC5424&lt;/a&gt;
compliant.  I ended up ripping out most of the old code and replacing it with
fresh DNA strands from FreeBSD and NetBSD.&lt;/p&gt;
&lt;p&gt;The result is a fully RFC compliant &lt;code&gt;syslogd&lt;/code&gt;, &lt;strong&gt;and&lt;/strong&gt; a &lt;code&gt;libsyslog&lt;/code&gt; with a
replacement &lt;code&gt;syslog.h&lt;/code&gt; header for sending RFC5424 events from applications!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/troglobit/sysklogd/&#34;&gt;https://github.com/troglobit/sysklogd/&lt;/a&gt;&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Some time ago now I was in a meeting with a customer where I first learned of
the new syslog standard, <a href="https://tools.ietf.org/html/rfc5424">RFC5424</a>.  I say &ldquo;new&rdquo; because, despite it being
ten years old, it was new to me.</p>
<p>Three weeks ago I started updating my fork of <a href="https://www.infodrom.org/projects/sysklogd/">sysklogd</a> to be <a href="https://tools.ietf.org/html/rfc5424">RFC5424</a>
compliant.  I ended up ripping out most of the old code and replacing it with
fresh DNA strands from FreeBSD and NetBSD.</p>
<p>The result is a fully RFC compliant <code>syslogd</code>, <strong>and</strong> a <code>libsyslog</code> with a
replacement <code>syslog.h</code> header for sending RFC5424 events from applications!</p>
<p><a href="https://github.com/troglobit/sysklogd/">https://github.com/troglobit/sysklogd/</a></p>
<p>When I first embarked on this journey I was very surprised to learn that Linux
(GLIBC) did not have an RFC5424 compliant <code>syslog()</code> API.  As it turned out,
neither did FreeBSD.  Only NetBSD had implemented a full stack, from C-library
to syslog daemon.</p>
<p>So the <code>libsyslog</code> and <code>syslog.h</code> replacements included now in sysklogd are
taken from NetBSD, whereas the major parts of the <a href="https://tools.ietf.org/html/rfc3164">RFC3164</a> and <a href="https://tools.ietf.org/html/rfc5424">RFC5424</a>
parsing code in syslogd are taken from FreeBSD.</p>
<h2 id="differences">Differences</h2>
<p>So what are the main differences between the two RFCs?  Well, there are in
fact three different standards at play here.  The first is the original BSD
implementation, which was later sort of standardized in <a href="https://tools.ietf.org/html/rfc3164">RFC3164</a>, this
original BSD is what sysklogd was.</p>
<p>One major difference from the original BSD code and RFC3164, I learned, is
that when sending messages to a remote syslog server, there was no timestamp
or hostname included.  So the receiving syslog server had to look up the host
from the source address in the IP header and then also do the timestamping.
In some respects this is good (and understandable): 1) early on many hosts did
not properly set their hostname, and 2) these same hosts often did not even
have the correct time.</p>
<p>The first job of updating <code>sysklogd</code> was to update it to properly support
RFC3164 formatting of remote syslog messages:</p>
<pre><code>&lt;------- HEADER --------&gt; &lt;----------- MSG ------------&gt;
Aug 24 05:14:15 192.0.2.1 myproc[8710]: Kilroy was here.
 \                \        \      \      \
  \                \        \      \      `-- What you think is the message
   \                \        \      `-------- Convention for process ID (PID)
    \				 \	      `-------------- Convention for process name
     \                `---------------------- Hostname or IP address
      `-------------------------------------- Notice lack of year ...
</code></pre>
<p>The second part was to add RFC5424 formatting:</p>
<pre><code>&lt;---------------------- HEADER ------------------------&gt;   &lt;---- MSG -----&gt;
2003-08-24T05:14:15.000003-07:00 192.0.2.1 myproc 8710 - - Kilroy was here.
 \                                \         \      \    \ \ \
  \                                \         \      \    \ \ `-- Actual message
   \                                \         \      \    \ `--- Structured data
    \                                \         \      \    `---- Message ID (MsgID)
     \                                \         \      `-------- Process ID (ProcID)
      \                                \         `-------------- Process name (App-Name)
       \                                `----------------------- Hostname or IP address
        `------------------------------------------------------- RFC3339 Timestamp
</code></pre>
<p>Yeah, what about those dashes (<code>-</code>)?  I had to fake it to begin with, because
those dashes, if you disregard the difference in the timestamp, is what are
the major differences between the two RFCs.  As you can see from the figures
above, the RFC3164 world was empty and scary, and the RFC5424 world is full of
confusing stuff??</p>
<p>The first dash above is the new MsgID field, which is a free-form string that
a receiver can use for quick and easy regexp filtering.  The second dash is
<em>structured data</em> and is essentially name-value pairs in a <code>[ .. ]</code> container.
See the RFC for more details and <a href="https://tools.ietf.org/html/rfc5424#section-6.3.5">an example in section
6.3.5</a></p>
<p>To distinguish between the two formats RFC5424 added a version field that
comes right after the <code>&lt;PRI&gt;</code> field, which is at the very start of each syslog
message.  I.e., RFC3164 starts with <code>&lt;PRI&gt;</code> and a space, and RFC5424 starts
with <code>&lt;PRI&gt;1</code> and a space, before the timestamp.</p>
<h2 id="netbsd-api">NetBSD API</h2>
<p>The GLIBC, musl, and uClibc libraries all currently just support RFC3164.  So
there is no way for a Linux application today to add a MsgID or any structured
data to a syslog message &hellip; until now.</p>
<p><code>sysklogd</code> comes with <code>libsyslog</code> and a <code>syslog.h</code> header replacement that
has the NetBSD <code>syslogp()</code> family of APIs:</p>
<div class="highlight"><pre class="chroma"><code class="language-c" data-lang="c"><span class="kt">int</span>  <span class="nf">setlogmask</span>  <span class="p">(</span><span class="kt">int</span> <span class="n">maskpri</span><span class="p">);</span>
<span class="kt">int</span>  <span class="nf">setlogmask_r</span><span class="p">(</span><span class="kt">int</span> <span class="n">maskpri</span><span class="p">,</span> <span class="k">struct</span> <span class="n">syslog_data</span> <span class="o">*</span><span class="n">data</span><span class="p">);</span>

<span class="kt">void</span> <span class="nf">openlog</span>   <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">ident</span><span class="p">,</span> <span class="kt">int</span> <span class="n">logopt</span><span class="p">,</span> <span class="kt">int</span> <span class="n">facility</span><span class="p">);</span>
<span class="kt">void</span> <span class="nf">openlog_r</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">ident</span><span class="p">,</span> <span class="kt">int</span> <span class="n">logopt</span><span class="p">,</span> <span class="kt">int</span> <span class="n">facility</span><span class="p">,</span> <span class="k">struct</span> <span class="n">syslog_data</span> <span class="o">*</span><span class="n">data</span><span class="p">);</span>

<span class="kt">void</span> <span class="nf">closelog</span>  <span class="p">(</span><span class="kt">void</span><span class="p">);</span>
<span class="kt">void</span> <span class="nf">closelog_r</span><span class="p">(</span><span class="k">struct</span> <span class="n">syslog_data</span> <span class="o">*</span><span class="n">data</span><span class="p">);</span>

<span class="kt">void</span> <span class="nf">syslog</span>    <span class="p">(</span><span class="kt">int</span> <span class="n">priority</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">message</span><span class="p">,</span> <span class="p">...);</span>
<span class="kt">void</span> <span class="nf">vsyslog</span>   <span class="p">(</span><span class="kt">int</span> <span class="n">priority</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">message</span><span class="p">,</span> <span class="n">va_list</span> <span class="n">args</span><span class="p">);</span>

<span class="kt">void</span> <span class="nf">syslogp</span>   <span class="p">(</span><span class="kt">int</span> <span class="n">priority</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">msgid</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sd</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">message</span><span class="p">,</span> <span class="p">...);</span>
<span class="kt">void</span> <span class="nf">vsyslogp</span>  <span class="p">(</span><span class="kt">int</span> <span class="n">priority</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">msgid</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sd</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">message</span><span class="p">,</span> <span class="n">va_list</span> <span class="n">args</span><span class="p">);</span>

<span class="kt">void</span> <span class="nf">syslog_r</span>  <span class="p">(</span><span class="kt">int</span> <span class="n">priority</span><span class="p">,</span> <span class="k">struct</span> <span class="n">syslog_data</span> <span class="o">*</span><span class="n">data</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">message</span><span class="p">,</span> <span class="p">...);</span>
<span class="kt">void</span> <span class="nf">vsyslog_r</span> <span class="p">(</span><span class="kt">int</span> <span class="n">priority</span><span class="p">,</span> <span class="k">struct</span> <span class="n">syslog_data</span> <span class="o">*</span><span class="n">data</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">message</span><span class="p">,</span> <span class="n">va_list</span> <span class="n">args</span><span class="p">);</span>

<span class="kt">void</span> <span class="nf">syslogp_r</span> <span class="p">(</span><span class="kt">int</span> <span class="n">priority</span><span class="p">,</span> <span class="k">struct</span> <span class="n">syslog_data</span> <span class="o">*</span><span class="n">data</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">msgid</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sd</span><span class="p">,</span>
                <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">message</span><span class="p">,</span> <span class="p">...);</span>
<span class="kt">void</span> <span class="nf">vsyslogp_r</span><span class="p">(</span><span class="kt">int</span> <span class="n">priority</span><span class="p">,</span> <span class="k">struct</span> <span class="n">syslog_data</span> <span class="o">*</span><span class="n">data</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">msgid</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sd</span><span class="p">,</span>
                <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">message</span><span class="p">,</span> <span class="n">va_list</span> <span class="n">args</span><span class="p">);</span>
</code></pre></div><h2 id="example">Example</h2>
<p>To use the new API on Linux we create an example application:</p>
<div class="highlight"><pre class="chroma"><code class="language-c" data-lang="c"><span class="cm">/* example.c - Example of how to use NetBSD syslogp() API */</span>
<span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;syslog/syslog.h&gt;</span><span class="cp">
</span><span class="cp"></span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
        <span class="n">openlog</span><span class="p">(</span><span class="s">&#34;example&#34;</span><span class="p">,</span> <span class="n">LOG_PID</span><span class="p">,</span> <span class="n">LOG_USER</span><span class="p">);</span>
        <span class="n">syslogp</span><span class="p">(</span><span class="n">LOG_NOTICE</span><span class="p">,</span> <span class="s">&#34;MSGID&#34;</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="s">&#34;Kilroy was here.&#34;</span><span class="p">);</span>
        <span class="n">closelog</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div><p>We build and run the application.</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">jocke@troglobit:~/tmp $ gcc <span class="sb">`</span>pkg-config --libs --static --cflags libsyslog<span class="sb">`</span> <span class="se">\
</span><span class="se"></span>                            -o example example.c
jocke@troglobit:~/tmp $ ./example
</code></pre></div><p>Provided <code>syslogd</code> is set up properly the following would be logged in your
local log file, or sent to a remote syslog server:</p>
<pre><code>2019-11-03T00:46:34.034324+01:00 troglobit example 1234 MSGID - Kilroy was here.
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Controlling Display Brightness</title>
            <link>/post/2019-07-18-controlling-display-brightness/</link>
            <pubDate>Thu, 18 Jul 2019 15:13:53 +0200</pubDate>
            
            <guid>/post/2019-07-18-controlling-display-brightness/</guid>
            <description>About a year ago I wrote about a way to control the brightness on my x250. I found a lot of tools, and at the time I saw a lot of potential in light, which I even contributed to a lot.
However, I ended up not using the evolved versions myself, and it took me a while to digest why. I think the project just outgrew me and what I wanted in such a tool.</description>
            <content type="html"><![CDATA[<p>About a year ago I wrote about a way to control the <a href="/post/2018-08-03-display-brightness-in-awesome-on-thinkpad-x250/">brightness on my
x250</a>.  I found a
lot of tools, and at the time I saw a lot of potential in <a href="https://github.com/haikarainen/light/">light</a>,
which I even contributed to a lot.</p>
<p>However, I ended up not using the evolved versions myself, and it took
me a while to digest why.  I think the project just outgrew me and what
I wanted in such a tool.</p>
<p><a href="https://github.com/Hummer12007/brightnessctl/">brightnessctl</a> was another tool I had looked into, but I wanted
something much simpler, so today I wrote my own 😄</p>
<p><a href="https://github.com/troglobit/backlight">https://github.com/troglobit/backlight</a></p>
<p>To use it, download the <a href="https://github.com/troglobit/backlight/releases/latest">latest release</a>; then unpack, configure,
build, and install.  You may have to reboot for the udev rules to take
effect.</p>
<p>Users of the <a href="https://awesomewm.org/">Awesome WM</a> can update their <code>~/.config/awesome/rc.lua</code>
to include the following:</p>
<div class="highlight"><pre class="chroma"><code class="language-lua" data-lang="lua">    <span class="c1">-- Brightness</span>
    <span class="n">awful.key</span><span class="p">({</span> <span class="p">},</span> <span class="s2">&#34;XF86MonBrightnessUp&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">os.execute</span><span class="p">(</span><span class="s2">&#34;backlight up&#34;</span><span class="p">)</span> <span class="kr">end</span><span class="p">,</span>
              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;Increase brightness&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;hotkeys&#34;</span><span class="p">}),</span>
    <span class="n">awful.key</span><span class="p">({</span> <span class="p">},</span> <span class="s2">&#34;XF86MonBrightnessDown&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">os.execute</span><span class="p">(</span><span class="s2">&#34;backlight down&#34;</span><span class="p">)</span> <span class="kr">end</span><span class="p">,</span>
              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;Decrease brightness&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;hotkeys&#34;</span><span class="p">}),</span>
</code></pre></div><p>Reload Awesome and your brightness keys will now work as expected.</p>
]]></content>
        </item>
        
        <item>
            <title>XScreenSaver Fonts</title>
            <link>/post/2019-07-07-xscreensaver-fonts/</link>
            <pubDate>Sun, 07 Jul 2019 14:27:58 +0200</pubDate>
            
            <guid>/post/2019-07-07-xscreensaver-fonts/</guid>
            <description>&lt;p&gt;I run Awesome on Ubuntu 19.04 with XScreenSaver.  This post is a brief
writeup of what I did to fix the ugly default fonts.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>I run Awesome on Ubuntu 19.04 with XScreenSaver.  This post is a brief
writeup of what I did to fix the ugly default fonts.</p>
<p>Let&rsquo;s start with the <code>~/.Xdefaults</code> file:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">! xft
Xft.antialias: true
Xft.dpi: 96
Xft.hinting: true
Xft.hintstyle: hintfull
Xft.lcdfilter: lcddefault
Xft.rgba: rgb

! XScreenSaver font settings
xscreensaver.Dialog.headingFont:        -*-verdana-bold-r-*-*-28-*-*-*-*-*-*-*
xscreensaver.Dialog.bodyFont:           -*-verdana-medium-r-*-*-20-*-*-*-*-*-*-*
xscreensaver.Dialog.labelFont:          -*-verdana-medium-r-*-*-20-*-*-*-*-*-*-*
xscreensaver.Dialog.unameFont:          -*-verdana-medium-r-*-*-26-*-*-*-*-*-*-*
xscreensaver.Dialog.buttonFont:         -*-verdana-bold-r-*-*-20-*-*-*-*-*-*-*
xscreensaver.Dialog.dateFont:           -*-terminus-medium-r-*-*-16-*-*-*-*-*-*-*
xscreensaver.passwd.passwdFont:         -*-verdana-bold-r-*-*-20-*-*-*-*-*-*-*
</code></pre></div><p>If you don&rsquo;t have Verdana installed:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">sudo apt install ttf-mscorefonts-installer
</code></pre></div><p>To make TrueType fonts visible to old X applications one has to jump
through a few hoops.</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh"><span class="nb">cd</span> /usr/share/fonts/truetype/msttcorefonts
sudo mkfontscale
sudo mkfontdir
xset +fp /usr/share/fonts/truetype/msttcorefonts/
xset fp rehash
xrdb -merge ~/.Xdefaults
xscreensaver-command -restart
</code></pre></div><p>Test it with <code>xfontsel</code></p>
<p>You may also want to enable a few X server settings:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh"><span class="nb">cd</span> /etc/fonts/conf.d
sudo ln -s ../conf.avail/10-autohint.conf .
sudo ln -s ../conf.avail/10-sub-pixel-rgb.conf .
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Minor Miracles</title>
            <link>/post/2019-06-26-minor-miracles/</link>
            <pubDate>Wed, 26 Jun 2019 19:07:29 +0200</pubDate>
            
            <guid>/post/2019-06-26-minor-miracles/</guid>
            <description>The last six months at work have been really stressful, so to finally get a week off for Swedish Midsummer celebrations was really what the doctor ordered! I&amp;rsquo;ve managed to wind down and relax, spend time with my kids and my family, and even put in some time on my personal software projects!
Three years ago I forked thttpd and began merging patches I&amp;rsquo;d found scattered around the net. I&amp;rsquo;ve also added a few features of my own, and to avoid any confusion with the original (bug free!</description>
            <content type="html"><![CDATA[<p>The last six months at work have been really stressful, so to finally
get a week off for Swedish Midsummer celebrations was really what the
doctor ordered!  I&rsquo;ve managed to wind down and relax, spend time with my
kids and my family, and even put in some time on my personal software
projects!</p>
<p>Three years ago I forked <a href="http://acme.com/software/thttpd/">thttpd</a> and began merging patches I&rsquo;d found
scattered around the net.  I&rsquo;ve also added a few features of my own, and
to avoid any confusion with the original (bug free!) project, I renamed
the resulting monster <a href="https://merecat.troglobit.com/">Merecat</a> and it
has served <a href="http://troglobit.com">http://troglobit.com</a> and its subdomains since then.  Test
in production, yo!</p>
<p>Last year I added native support for HTTPS to Merecat, but it was still
not possible to serve both HTTP and HTTPS from the same httpd process,
so I began a slow refactor which I&rsquo;ve now finalized! \o/</p>
<p>With a little help from <a href="https://letsencrypt.org/">Let&rsquo;s Encrypt</a>, I now
have <a href="https://troglobit.com">https://troglobit.com</a> up and running, and the HTTP site is also
running &ndash; soon with automatic redirect to the HTTPS site.</p>
<p>Vacation works, it really does.</p>
<hr>
<p><a href="http://acme.com/software/thttpd/">thttpd</a> is a web server made by <a href="http://acme.com/">Jef Poskanzer</a>.
Jef is one of my big heroes, not only a great coder and over all nice
guy, he&rsquo;s also a great photographer!  Follow his <a href="https://twitter.com/jef_poskanzer/">adventures on
Twitter</a></p>
]]></content>
        </item>
        
        <item>
            <title>FLOSS Progress</title>
            <link>/post/2019-03-13-floss-progress/</link>
            <pubDate>Wed, 13 Mar 2019 00:11:32 +0100</pubDate>
            
            <guid>/post/2019-03-13-floss-progress/</guid>
            <description>&lt;p&gt;This post is an update of what&amp;rsquo;s happened since last I posted about my
many pet projects.  As usual nothing fancy.  If you want to know more I
suggest you find one on GitHub you&amp;rsquo;re interested in.  File an issue, or
better yet, post a pull request to scratch that itch you have deep down:
👉 &lt;a href=&#34;https://github.com/troglobit&#34;&gt;https://github.com/troglobit&lt;/a&gt;&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This post is an update of what&rsquo;s happened since last I posted about my
many pet projects.  As usual nothing fancy.  If you want to know more I
suggest you find one on GitHub you&rsquo;re interested in.  File an issue, or
better yet, post a pull request to scratch that itch you have deep down:
👉 <a href="https://github.com/troglobit">https://github.com/troglobit</a></p>
<hr>
<p><strong>editline</strong>, finally saw the addition of event loop support (and some
other cool small features).  Took some time to finalize but it&rsquo;s really
good, <a href="https://github.com/troglobit/editline/releases/tag/1.16.0">v1.16</a></p>
<p><strong>mdnsd</strong>, thanks to <a href="https://github.com/thom-nic">Thom Nichols</a> I
finished the work I had started three years ago.  It was a great feeling
to get that one out the door!  Honestly, I rarely take the time to look
back at the things I inevitably learn, but this time I did and it&rsquo;s been
very useful professionally.  This one&rsquo;s a little gem, so check it out:
<a href="https://github.com/troglobit/mdnsd/releases/tag/v0.8">v0.8</a></p>
<p><a href="https://github.com/troglobit/pimd">pimd</a>, work continues steadily,
albeit slowly, on this Sisyphus project of mine.  I&rsquo;ve been working on
v3.0 for over two years now and there&rsquo;s still a lot of things left to
fix before releasing it.  Regressions for one thing &ndash; consider this an
official plea for help to test it!</p>
<p><a href="https://github.com/troglobit/mrouted">mrouted</a>, with all the work
that&rsquo;s gone in to pimd over the years I&rsquo;ve long felt it was time to give
mrouted its mayby final push.  For one because of its kinship with pimd
(they share a lot of code), but also because it&rsquo;s a <em>really simple</em>
multicast router.  The last couple of months I&rsquo;ve fixed bugs and added
two critical features: <code>mroutectl</code> and proper IGMPv3 support!  It&rsquo;s
almost ready for release, stoked! =)</p>
<p><strong>sysklogd</strong>, yeah I finally went ahead and adopted this one.  We&rsquo;ve
used it at <code>$work</code> for ages with a few patches, e.g. buit-in logrotate,
so I published them, cleaned it up and added a few more neat features as
<a href="https://github.com/troglobit/sysklogd/releases/tag/v1.6">sysklogd v1.6</a></p>
<p><strong>mg</strong>, despite there being multiple &ldquo;portable&rdquo; projects of OpenBSD Mg,
I still believe mine is the better one.  It uses well known configure,
is completely (!) self-hosting apart from a libc and ncurses (termcap).
<a href="https://github.com/troglobit/mg/releases/tag/v3.2">Mg v3.2</a></p>
<p><strong>libConfuse</strong>, saw only small CVE fix release issued in August, usual
download place at GitHub: <a href="https://github.com/martinh/libconfuse/releases/tag/v3.2.2">libConfuse
v3.2.2</a></p>
<p><a href="https://github.com/troglobit/sntpd">sntpd</a>, the continuation of Larry
Doolittle&rsquo;s ntpclient.  The changes I&rsquo;d made (oh so long ago, almost 10
years) had started leaking out, and one Linux distribution had actually
packaged my version.  With the obvious consequence that users of said
distro were upset &hellip; with me.  Rather than try to explain the
differences for the Nth time, I finally did what I should have done ages
ago and simply renamed my fork.  Of course there will be a day when
someone will be upset with that too and maybe I&rsquo;ll have more time on my
hands by then, or I can haunt them due to my being dead!
Moahahahahahahaaaa!</p>
<hr>
<p>There&rsquo;s more, but I&rsquo;m sure everyone&rsquo;s lost interest by now, so good
night and remember to floss before going to bed! :)</p>]]></content>
        </item>
        
        <item>
            <title>Odd Progress</title>
            <link>/post/2019-03-12-odd-progress/</link>
            <pubDate>Tue, 12 Mar 2019 23:11:30 +0100</pubDate>
            
            <guid>/post/2019-03-12-odd-progress/</guid>
            <description>&lt;p&gt;A lot has happened since my last post; I had my bike stolen, stumbled
upon the guys who&amp;rsquo;d stolen it, got mugged by same guys, decided I&amp;rsquo;d had
enough and then bought a house and moved to another city.  That&amp;rsquo;s the
long and short of it.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m OK, sort of.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>A lot has happened since my last post; I had my bike stolen, stumbled
upon the guys who&rsquo;d stolen it, got mugged by same guys, decided I&rsquo;d had
enough and then bought a house and moved to another city.  That&rsquo;s the
long and short of it.</p>
<p>I&rsquo;m OK, sort of.</p>
<p>Yeah, sort of &hellip; it took a few weeks before I could sleep at all again
after it happened.  Felt like such a weight came off my shoulders when I
finally moved, four months after the mugging.  Still having real problem
sleeping though.  Usually don&rsquo;t get more than 6-7h, and that&rsquo;s on a good
night.</p>
<p>To top things off, the house I bought isn&rsquo;t really in such a great
shape.  Lots of things needs fixing, some more urgent than others.  So
at times I&rsquo;m seriously questioning my decision to move.  Sure, I turned
down to a lot (!) of houses that were in worse shape than this, and I
really don&rsquo;t have any money saved up.  Guess I&rsquo;m just worried I can&rsquo;t
turn things around all on my own.</p>
<p>This is all just doubts I carry around with me in my head.  I know I&rsquo;m
fully capable of fixing most stuff, and I can break down into managable
parts the rest which I&rsquo;ll have to pay someone else to do.  I know this.
Shit just wears you down sometimes, you know.  So I&rsquo;m taking it one day
at a time right now.  Trying to focus on things that give me energy and
motivation rather than the other way around.</p>
<p>It&rsquo;s working, sort of.</p>]]></content>
        </item>
        
        <item>
            <title>Dark Themes Ahead</title>
            <link>/post/2018-08-12-dark-themes-ahead/</link>
            <pubDate>Sun, 12 Aug 2018 23:51:52 +0200</pubDate>
            
            <guid>/post/2018-08-12-dark-themes-ahead/</guid>
            <description>&lt;p&gt;&lt;em&gt;Reminder to self:&lt;/em&gt; How to fix Firefox &lt;code&gt;about:config&lt;/code&gt; when using a Dark
Theme in Gnome or &lt;a href=&#34;https://awesomewm.org/&#34;&gt;Awesome&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I use &lt;a href=&#34;https://system76.com/&#34;&gt;System76&lt;/a&gt; amazing Gtk+ theme from &lt;a href=&#34;https://github.com/pop-os/gtk-theme&#34;&gt;Pop!_OS&lt;/a&gt;.  It&amp;rsquo;s quite
simple to set up on top of Ubuntu and use in Awesome:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;    sudo add-apt-repository ppa:system76/pop
    sudo apt update
    sudo apt install pop-theme
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I then use &lt;a href=&#34;https://wiki.gnome.org/Apps/Tweaks&#34;&gt;gnome-tweaks&lt;/a&gt; to select the Pop-dark-slim theme.  Now, the
problem is that certain text box inputs in Firefox is either completely
dark or white and the text cannot be seen until you mark it.  This isn&amp;rsquo;t
specific to the Pop!_OS theme, Adwaita-dark is exactly as bad.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p><em>Reminder to self:</em> How to fix Firefox <code>about:config</code> when using a Dark
Theme in Gnome or <a href="https://awesomewm.org/">Awesome</a>.</p>
<p>I use <a href="https://system76.com/">System76</a> amazing Gtk+ theme from <a href="https://github.com/pop-os/gtk-theme">Pop!_OS</a>.  It&rsquo;s quite
simple to set up on top of Ubuntu and use in Awesome:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">    sudo add-apt-repository ppa:system76/pop
    sudo apt update
    sudo apt install pop-theme
</code></pre></div><p>I then use <a href="https://wiki.gnome.org/Apps/Tweaks">gnome-tweaks</a> to select the Pop-dark-slim theme.  Now, the
problem is that certain text box inputs in Firefox is either completely
dark or white and the text cannot be seen until you mark it.  This isn&rsquo;t
specific to the Pop!_OS theme, Adwaita-dark is exactly as bad.</p>
<p>Here&rsquo;s how you fix it:</p>
<ol>
<li>Open about:config in Firefox</li>
<li>Create a new String value (right click), named <code>widget.content.gtk-theme-override</code></li>
<li>Set a light GTK theme name as the value, i chose Pop</li>
<li>Restart Firefox</li>
</ol>
<p>Thanks to <a href="https://www.mkammerer.de/blog/gtk-dark-theme-and-firefox/">Moritz Kammerer</a> for blogging about this so I could find a solution.</p>]]></content>
        </item>
        
        <item>
            <title>Display Brightness in Awesome on ThinkPad X250</title>
            <link>/post/2018-08-03-display-brightness-in-awesome-on-thinkpad-x250/</link>
            <pubDate>Fri, 03 Aug 2018 16:15:00 +0200</pubDate>
            
            <guid>/post/2018-08-03-display-brightness-in-awesome-on-thinkpad-x250/</guid>
            <description>&lt;p&gt;Having just received a new (used) ThinkPad X250 I felt somewhat lost
when I realized the display brightness keys didn&amp;rsquo;t do anything in my
&lt;a href=&#34;https://awesomewm.org&#34;&gt;Awesome WM&lt;/a&gt; setup.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Having just received a new (used) ThinkPad X250 I felt somewhat lost
when I realized the display brightness keys didn&rsquo;t do anything in my
<a href="https://awesomewm.org">Awesome WM</a> setup.</p>
<p>My previous ThinkPads were a T430s and an X230 and it turns out Lenovo
had changed from HW controlled to SW controlled in this new generation.</p>
<p>A quick google later and I had found Fredrik Haikarainen&rsquo;s <a href="https://github.com/haikarainen/light">light</a>
and bound it to the approriate keys in my <code>.config/awesome/rc.lua</code>:</p>
<pre><code>-- Brightness
globalkeys = gears.table.join(globalkeys,
  awful.key({}, &quot;XF86MonBrightnessUp&quot;,   function () awful.util.spawn(&quot;light -A 10&quot;) end),
  awful.key({}, &quot;XF86MonBrightnessDown&quot;, function () awful.util.spawn(&quot;light -U 10&quot;) end))
root.keys(globalkeys)
</code></pre>
<p>Actually, I tried running light from the command line first, without
running <code>sudo make install</code>, and that didn&rsquo;t work so I was about to give
up.  Turns out <code>light</code> needs to be SUID root because of reasons.  Oh well,
that we should be able fix relatively easy.</p>
<p>Great little tool, much recommend!</p>]]></content>
        </item>
        
        <item>
            <title>Open Source Releases</title>
            <link>/post/2018-06-16-open-source-releases/</link>
            <pubDate>Sat, 16 Jun 2018 15:19:28 +0200</pubDate>
            
            <guid>/post/2018-06-16-open-source-releases/</guid>
            <description>&lt;p&gt;Last three months have been hectic, lots of exciting things going on &lt;a href=&#34;https://www.westermo.com&#34;&gt;at
work&lt;/a&gt;, with my kids, and also with some of my
pet projects.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Last three months have been hectic, lots of exciting things going on <a href="https://www.westermo.com">at
work</a>, with my kids, and also with some of my
pet projects.</p>
<p>Here&rsquo;s quick update:</p>
<ul>
<li><a href="https://github.com/troglobit/libite">libite (-lite)</a> saw a new minor
release of this collection of useful APIs, v2.0.2</li>
<li><a href="https://github.com/troglobit/tinyroot">tinyroot</a> is a new project.  I
started it mostly to serve as a very simple example of an embedded
system, v2018_071</li>
<li><a href="https://github.com/troglobit/nemesis">nemesis</a> is the latest stray
I&rsquo;ve adopeted.  It&rsquo;s been updated to work with the latest
<a href="https://github.com/sam-github/libnet">libnet</a> releases and seems to
have been well received, v1.5</li>
<li><a href="https://github.com/troglobit/uftpd">uftpd</a> saw a major new release,
with lots of new features added to support streaming video to the VLC
Android app., v2.5</li>
<li><a href="https://github.com/troglobit/smcroute">smcroute</a> got a minor update
ahead of a new upload to Debian, v2.4.1</li>
</ul>
<p>If you’re interested in my work, any of my projects, just drop me an
email or connect with me at <a href="https://github.com/troglobit">GitHub</a>!</p>]]></content>
        </item>
        
        <item>
            <title>N E M E S I S</title>
            <link>/post/2018-04-15-n-e-m-e-s-i-s/</link>
            <pubDate>Sun, 15 Apr 2018 16:11:23 +0200</pubDate>
            
            <guid>/post/2018-04-15-n-e-m-e-s-i-s/</guid>
            <description>&lt;p&gt;Summer is  almost upon us.  The  weather in Sweden has  been amazing the
last couple of weeks, sunny and  warm.  This has of course not prevented
me from pursuing my favorite  indoor activity; coding!  This time around
I&amp;rsquo;ve spent some time to resurrect the packet injection tool &lt;a href=&#34;/projects/nemesis/&#34;&gt;Nemesis&lt;/a&gt;.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Summer is  almost upon us.  The  weather in Sweden has  been amazing the
last couple of weeks, sunny and  warm.  This has of course not prevented
me from pursuing my favorite  indoor activity; coding!  This time around
I&rsquo;ve spent some time to resurrect the packet injection tool <a href="/projects/nemesis/">Nemesis</a>.</p>
<p>Nemesis was seemingly abandonded by its original authors almost 15 years
ago.  There  was talk on the  mailing-list about porting to  libdnet, as
well as visions of a proper  stand-alone CLI instead of the command line
tool with options,  but it seems none of these  plans materialized.  The
last  release, which  was v1.4,  does  not build  against libnet1,  only
libnet0.</p>
<p>However, I discovered  through the mailiing list there was  a CVS branch
integrating the porting work of some Cisco engineers to libnet1.</p>
<p><a href="https://sourceforge.net/p/nemesis/mailman/message/177129/">https://sourceforge.net/p/nemesis/mailman/message/177129/</a></p>
<p>I needed something simple for myself to generate IGMP packets, and since
I&rsquo;m fluent in C, I decided to give Nemesis a whirl.  I finished the port
in a few days and began fixing some obvious bugs and incorporating fixes
from the mailing list and Debian.</p>
<p>I have set up a new home page  and a GitHub project.  I&rsquo;m planning a new
release, v1.5, before the  summer.  If you want to help  out or are just
curious to try it out, check out the ⇒ <a href="/projects/nemesis/">Home Page</a></p>]]></content>
        </item>
        
        <item>
            <title>Slow Down</title>
            <link>/post/2018-02-15-slow-down/</link>
            <pubDate>Thu, 15 Feb 2018 20:05:25 +0100</pubDate>
            
            <guid>/post/2018-02-15-slow-down/</guid>
            <description>Anyone who knows me knows I&amp;rsquo;m quite stubborn. Whenever I set my sights on something I finish it. The last couple of years I&amp;rsquo;ve been quite busy on GitHub, making at least one commit per day. I&amp;rsquo;ve had a lot of things I&amp;rsquo;ve wanted to do and complete, and this commit regimen has kept me on track to do just that.
However, nothing comes for free, and although I&amp;rsquo;ve achieved my goals, I&amp;rsquo;ve also had to make a lot of sacrifices.</description>
            <content type="html"><![CDATA[<p>Anyone who knows me knows I&rsquo;m quite stubborn.  Whenever I set my sights
on something I finish it.  The last couple of years I&rsquo;ve been quite busy
on GitHub, making at least one commit per day.  I&rsquo;ve had a lot of things
I&rsquo;ve wanted to do and complete, and this commit regimen has kept me on
track to do just that.</p>
<img src="/images/github-activity-2017.png" class="center">
<p>However, nothing comes for free, and although I&rsquo;ve achieved my goals,
I&rsquo;ve also had to make a lot of sacrifices.  Ask my kids, or my ex-wife
&hellip; So as a New Year&rsquo;s resolution to myself I&rsquo;ve begun a new journey
which likely will significantly reduce the amount of Open Source work I
do.</p>
<p>I still have a few software and hardware projects that I want to finish:
v1.0 of TroglOS, the embedded devboard I&rsquo;ve developed to showcase all my
projects, the Macchiatobin board bring-up (using TroglOS and Alpine
Linux), and some other bits and pieces.  After that things will start to
trickle down to a bare minimum to handle bug reports and do patch
releases.</p>
<p>Over the next couple of weeks/months I will talk a bit more here on my
blog about all the projects and what they can be used for.</p>
<p>Stay tuned! :-)</p>
]]></content>
        </item>
        
        <item>
            <title>Multicast routing with PIM-SM over GRE</title>
            <link>/2016/07/05/multicast-routing-with-pim-sm-over-gre/</link>
            <pubDate>Tue, 23 Jan 2018 20:39:36 +0000</pubDate>
            
            <guid>/2016/07/05/multicast-routing-with-pim-sm-over-gre/</guid>
            <description>&lt;p&gt;GRE tunnels are useful in many ways.  This blog post shows how to set up
multicast routing with &lt;a href=&#34;https://github.com/troglobit/pimd/&#34;&gt;pimd&lt;/a&gt; over a
GRE tunnel.  To achieve this we will also set up OSPF over GRE with
&lt;a href=&#34;http://www.quagga.net&#34;&gt;Quagga&lt;/a&gt;, because PIM, unlike DVMRP (&lt;code&gt;mrouted&lt;/code&gt;),
require unicast routing rules to be established.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;       .----{ Intranet }----.
      /    192.168.1.0/24    \
     /                        \
.10 /                          \.20
.--&amp;#39;---. .1  GRE Tunnel  .2 .---`--.
|      |====================|      |
|  R1  |   172.16.16.0/30   |  R2  |
|      |                    |      |
&amp;#39;--.---&amp;#39;                    &amp;#39;------&amp;#39;
   | .1                        | .1 
   |    10.0.1.0/24            |    10.0.2.0/24
   | .2                        | .2 
.--&amp;#39;---.                    .--&amp;#39;---.
|      |                    |      |
|  C1  |                    |  C2  |
|      |                    |      |
&amp;#39;------&amp;#39;                    &amp;#39;------&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this post we are using the home WiFi network, 192.168.1.0/24, to hook
up the GRE tunnel.  It is just as easy to extend this to a big corporate
Intranet with more routers between &lt;code&gt;R1&lt;/code&gt; and &lt;code&gt;R2&lt;/code&gt;.  As long as that IT
department takes care of the unicast routing between &lt;code&gt;R1&lt;/code&gt; and &lt;code&gt;R2&lt;/code&gt; so
that the GRE tunnel can be established.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>GRE tunnels are useful in many ways.  This blog post shows how to set up
multicast routing with <a href="https://github.com/troglobit/pimd/">pimd</a> over a
GRE tunnel.  To achieve this we will also set up OSPF over GRE with
<a href="http://www.quagga.net">Quagga</a>, because PIM, unlike DVMRP (<code>mrouted</code>),
require unicast routing rules to be established.</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">       .----{ Intranet }----.
      /    192.168.1.0/24    \
     /                        \
.10 /                          \.20
.--&#39;---. .1  GRE Tunnel  .2 .---`--.
|      |====================|      |
|  R1  |   172.16.16.0/30   |  R2  |
|      |                    |      |
&#39;--.---&#39;                    &#39;------&#39;
   | .1                        | .1 
   |    10.0.1.0/24            |    10.0.2.0/24
   | .2                        | .2 
.--&#39;---.                    .--&#39;---.
|      |                    |      |
|  C1  |                    |  C2  |
|      |                    |      |
&#39;------&#39;                    &#39;------&#39;
</code></pre></div><p>In this post we are using the home WiFi network, 192.168.1.0/24, to hook
up the GRE tunnel.  It is just as easy to extend this to a big corporate
Intranet with more routers between <code>R1</code> and <code>R2</code>.  As long as that IT
department takes care of the unicast routing between <code>R1</code> and <code>R2</code> so
that the GRE tunnel can be established.</p>
<p>Now, on router R1 we set up the first GRE tunnel endpoint:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">ip tunnel add gre0 mode gre remote 192.168.1.20 <span class="nb">local</span> 192.168.1.10 ttl <span class="m">64</span>
ip link <span class="nb">set</span> gre0 multicast on
ip link <span class="nb">set</span> gre0 up
ip addr add 172.16.16.1/30 dev gre0
</code></pre></div><p>We do not add any static route for <code>R1</code> to reach the LAN on <code>R2</code> that
<code>C2</code> is connected to, that is for OSPF to add dynamically for us later.
Notice, hower, that we must explicitly enable the multicast flag on the
GRE interface, it is not enabled by default in Linux.</p>
<p>On router <code>R2</code> we can now set up the other side of the GRE tunnel:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">ip tunnel add gre0 mode gre remote 192.168.1.10 <span class="nb">local</span> 192.168.1.20 ttl <span class="m">64</span>
ip link <span class="nb">set</span> gre0 multicast on
ip link <span class="nb">set</span> gre0 up
ip addr add 172.16.16.2/30 dev gre0
</code></pre></div><p>Setup of OSPF in Debian or Ubuntu distributions is only an <code>apt-get</code>
away followed by enabling the zebra and ospf daemons:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">sudo apt-get install quagga
sudo editor /etc/quagga/daemons
</code></pre></div><p>The idea is to set up an OSPF backbone, area 0, for our routers without
wrecking havoc in the big corporate intranet, which may already run OSPF
&hellip; so OSPF should only talk on the <code>gre0</code> interface, and maybe even the
LAN interfaces towards <code>C1</code> and <code>C2</code> (in case we want to expand on this
example later).  In our setup the routers use <code>wlan0</code> to connect to the
intranet.  We can use the sample configuration files to start from:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">sudo cp /usr/share/doc/quagga/examples/zebra.conf.sample /etc/quagga/zebra.conf
sudo cp /usr/share/doc/quagga/examples/ospfd.conf.sample /etc/quagga/ospfd.conf
</code></pre></div><p>The <code>zebra.conf</code> can be left as-is, just edit the <code>ospfd.conf</code> to look
like this:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">hostname ospfd
password zebra
router ospf
    passive-interface wlan0
    redistribute connected
    network 172.16.16.0/30 area 0
</code></pre></div><p>When the routers have peered, the two clients <code>C1</code> and <code>C2</code> should be
able to (unicast) ping each other.  Telnet into the OSPF daemon using
<code>telnet localhost ospfd</code> and type <code>show ip ospf neigh</code> to see all OSPF
neighbors and their status, should be <code>Full/...</code> when done exchanging
routes.  Use <code>show ip ospf route</code> to see the exchanged routes, also
inspect the kernel routing table with <code>route -n</code>.  Use <code>traceroute</code> to
confirm the traffic between clients do traverse the GRE tunnel and not
over the Intranet.</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">root@C1:~$ traceroute 10.0.2.2
traceroute to 10.0.2.2 <span class="o">(</span>10.0.2.2<span class="o">)</span>, <span class="m">30</span> hops max, <span class="m">60</span> byte packets
 <span class="m">1</span>  10.0.1.1 <span class="o">(</span>10.0.1.1<span class="o">)</span>  0.427 ms  0.384 ms  0.309 ms
 <span class="m">2</span>  172.16.16.2 <span class="o">(</span>172.16.16.2<span class="o">)</span>  3.135 ms  4.724 ms  5.786 ms
 <span class="m">3</span>  10.0.2.2 <span class="o">(</span>10.0.2.2<span class="o">)</span>  9.979 ms  10.777 ms  10.676 ms
</code></pre></div><p>Time for <code>pimd</code> to be started.  Just like OSPF we want <code>pimd</code> to avoid
talking on <code>wlan0</code>, so add the following to the default <code>pimd.conf</code>,
which can otherwise be left as-is:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">phyint wlan0 disable
</code></pre></div><p>In our case the routers have many interfaces, so we disable <em>all</em>
interfaces using the <code>-N</code> switch to <code>pimd</code> and instead only enable the
interfaces we are intrested in, the GRE tunnel and the client LAN
interface, <code>eth0</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">phyint eth0 enable
phyint gre0 enable
</code></pre></div><p>Make sure to add the <code>phyint</code> setting to the correct place in the file.
Now start pimd on each router, use the debug mode and run in foreground
first to see what happens:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">root@R1:~$ pimd -N -f -d
debug level 0xffffffff <span class="o">(</span>dvmrp_detail,dvmrp_prunes,dvmrp_routes,dvmrp_neighbors,dvmrp_timers,igmp_proto,igmp_timers,igmp_members,trace,timeout,packets,interfaces,kernel,cache,rsrr,pim_detail,pim_hello,pim_register,pim_join_prune,pim_bootstrap,pim_asserts,pim_cand_rp,pim_routes,pim_timers,pim_rpf<span class="o">)</span>
02:01:49.616 pimd version 2.3.2 starting ...
02:01:49.617 Got <span class="m">262144</span> byte send buffer size in <span class="m">0</span> iterations
02:01:49.617 Got <span class="m">262144</span> byte recv buffer size in <span class="m">0</span> iterations
02:01:49.617 Got <span class="m">262144</span> byte send buffer size in <span class="m">0</span> iterations
02:01:49.617 Got <span class="m">262144</span> byte recv buffer size in <span class="m">0</span> iterations
02:01:49.617 Getting vifs from kernel
02:01:49.618 /etc/pimd.conf:0 - Skipping interface lo, either loopback or does not support multicast.
</code></pre></div><p>&hellip; and on <code>R2</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">root@R2:~$ pimd -N -f -d
debug level 0xffffffff <span class="o">(</span>dvmrp_detail,dvmrp_prunes,dvmrp_routes,dvmrp_neighbors,dvmrp_timers,igmp_proto,igmp_timers,igmp_members,trace,timeout,packets,interfaces,kernel,cache,rsrr,pim_detail,pim_hello,pim_register,pim_join_prune,pim_bootstrap,pim_asserts,pim_cand_rp,pim_routes,pim_timers,pim_rpf<span class="o">)</span>
02:01:49.616 pimd version 2.3.2 starting ...
02:01:49.617 Got <span class="m">262144</span> byte send buffer size in <span class="m">0</span> iterations
02:01:49.617 Got <span class="m">262144</span> byte recv buffer size in <span class="m">0</span> iterations
02:01:49.617 Got <span class="m">262144</span> byte send buffer size in <span class="m">0</span> iterations
02:01:49.617 Got <span class="m">262144</span> byte recv buffer size in <span class="m">0</span> iterations
02:01:49.617 Getting vifs from kernel
02:01:49.618 /etc/pimd.conf:0 - Skipping interface lo, either loopback or does not support multicast.
</code></pre></div><p>To verify multicast routing works we start a multicast sender on <code>C1</code>
and a receiver (sink) on <code>C2</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">root@C1:~$ mcjoin -s -t <span class="m">10</span>
root@C2:~$ mcjoin
.................o
</code></pre></div><p>Notice the TTL adjustment (<code>-t 10</code>) on the sender side, this is needed
because the default TTL for multicast, due to safety concerns, is 1.</p>
<p>The log on the routers should look something like this (snippet):</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">01:44:16.750 accept_group_report(): igmp_src 10.0.2.2 ssm_src 0.0.0.0 group 225.1.2.3 report_type 34
01:44:16.750 Set delete timer for group: 225.1.2.3
01:44:16.750 Adding vif 4 for group 225.1.2.3
01:44:16.877 Received IGMP v3 Membership Report from 172.16.16.1 to 224.0.0.22
01:44:16.877 accept_membership_report(): IGMP v3 report, 40 bytes, from 172.16.16.1 to 224.0.0.22 with 4 group records.

Virtual Interface Table ======================================================
Vif  Local Address    Subnet              Thresh  Flags      Neighbors
---  ---------------  ------------------  ------  ---------  -----------------
  0  192.168.1.123    192.168.1                1  DISABLED
  1  172.17.0.1       172.17                   1  DISABLED
  2  192.168.122.1    192.168.122              1  DISABLED
  3  172.16.16.2      172.16.16/30             1  DR PIM     172.16.16.1
  4  10.0.2.1         10.0.2                   1  DR NO-NBR
  5  172.16.16.2      register_vif0            1 

 Vif  SSM Group        Sources             


Multicast Routing Table ======================================================
----------------------------------- (*,G) ------------------------------------
Source           Group            RP Address       Flags
---------------  ---------------  ---------------  ---------------------------
INADDR_ANY       225.1.2.3        10.0.2.1         WC RP
Joined   oifs: ......              
Pruned   oifs: ......              
Leaves   oifs: ....l.              
Asserted oifs: ......              
Outgoing oifs: ....o.              
Incoming     : .....I              

TIMERS:  Entry    JP    RS  Assert VIFS:  0  1  2  3  4  5
             0    45     0       0        0  0  0  0  0  0
----------------------------------- (S,G) ------------------------------------
Source           Group            RP Address       Flags
---------------  ---------------  ---------------  ---------------------------
192.168.64.2     225.1.2.3        10.0.2.1         SPT CACHE SG
Joined   oifs: ......              
Pruned   oifs: ......              
Leaves   oifs: ....l.              
Asserted oifs: ......              
Outgoing oifs: ....o.              
Incoming     : ...I..              

TIMERS:  Entry    JP    RS  Assert VIFS:  0  1  2  3  4  5
           200    55     0       0        0  0  0  0  0  0
--------------------------------- (*,*,G) ------------------------------------
Number of Groups: 1
Number of Cache MIRRORs: 1
------------------------------------------------------------------------------

Candidate Rendezvous-Point Set ===============================================
RP address       Incoming  Group Prefix        Priority  Holdtime
---------------  --------  ------------------  --------  ---------------------
10.0.2.1         5         224/4               20        70      
10.0.1.1         3         224/4               20        55      
169.254.0.1      1         232/8               1         65535   
------------------------------------------------------------------------------
Current BSR address: 10.0.2.1
</code></pre></div><p>In normal operation, i.e. without the debug flag <code>-d</code>, the routing table
and other useful PIM information can be queried from the running <code>pimd</code>
by calling it in client mode.  The following is a wrapper for sending a
<code>SIGUSR1</code> signal to the daemon and reading <code>/var/run/pimd/pimd.dump</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">root@R2:~$ pimd -r
Virtual Interface Table ======================================================
Vif  Local Address    Subnet              Thresh  Flags      Neighbors
---  ---------------  ------------------  ------  ---------  -----------------
  0  192.168.1.123    192.168.1                1  DISABLED
  1  172.17.0.1       172.17                   1  DISABLED
  2  192.168.122.1    192.168.122              1  DISABLED
  3  172.16.16.2      172.16.16/30             1  DR PIM     172.16.16.1    
  4  10.0.2.1         10.0.2                   1  DR NO-NBR
  5  172.16.16.2      register_vif0            1 

 Vif  SSM Group        Sources             

Multicast Routing Table ======================================================
----------------------------------- (*,G) ------------------------------------
Source           Group            RP Address       Flags
---------------  ---------------  ---------------  ---------------------------
INADDR_ANY       225.1.2.3        10.0.2.1         WC RP
Joined   oifs: ......              
Pruned   oifs: ......              
Leaves   oifs: ....l.              
Asserted oifs: ......              
Outgoing oifs: ....o.              
Incoming     : .....I              

TIMERS:  Entry    JP    RS  Assert VIFS:  0  1  2  3  4  5
             0    20     0       0        0  0  0  0  0  0
----------------------------------- (S,G) ------------------------------------
Source           Group            RP Address       Flags
---------------  ---------------  ---------------  ---------------------------
10.0.1.2         225.1.2.3        10.0.2.1         SPT CACHE SG
Joined   oifs: ......              
Pruned   oifs: ......              
Leaves   oifs: ....l.              
Asserted oifs: ......              
Outgoing oifs: ....o.              
Incoming     : ...I..              

TIMERS:  Entry    JP    RS  Assert VIFS:  0  1  2  3  4  5
           185    10     0       0        0  0  0  0  0  0
--------------------------------- (*,*,G) ------------------------------------
Number of Groups: 1
Number of Cache MIRRORs: 1
------------------------------------------------------------------------------
</code></pre></div><p>You can also verify that <code>pimd</code> actually sets routes in the kernel
multicast routing table with:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">root@R2:~$ ip mroute
<span class="o">(</span>10.0.1.2, 225.1.2.3<span class="o">)</span>        Iif: gre0       Oifs: eth0
</code></pre></div><h2 id="caveats">Caveats</h2>
<p>There are quite a few caveats to watch out for with multicast routing.
Here are a few:</p>
<ol>
<li>Check the TTL of the multicast stream, must be &gt;1 to be routed.
<strong>Rule of thumb:</strong> increase with each router in topology.</li>
<li>Check the MTU of the interfaces in the path.</li>
<li>Check the reverse path, make sure you have unicast connectivity
between end nodes &ndash; PIM requires this to work!</li>
<li>Check the multicast sender&rsquo;s source IP, verify that it&rsquo;s not a
unroutable link-local (169.254) address.</li>
<li>Have the PIM routers peered?  Should list &lsquo;PIM&rsquo; and a neighbor IP
in the output of <code>pimd -r</code>.  If NO-NBR or DISABLED is shown you
have a network or <code>pimd.conf</code> problem.</li>
<li>As of this writing <code>pimd</code> is a bit sensitive to topology changes.
See <a href="https://github.com/troglobit/pimd/issues/79">issue #79</a> for
details and possible future resolution.</li>
</ol>
<p>For other questions, ideas on setting up multicast routing, see the
general <a href="/multicast-howto.html">Multicast HowTo</a>, or file a bug report
at <a href="https://github.com/troglobit">GitHub</a></p>
<p>That&rsquo;s it, good luck!</p>]]></content>
        </item>
        
        <item>
            <title>Threads vs Event Loop, Again ...</title>
            <link>/2017/09/19/threads-vs-event-loop-again/</link>
            <pubDate>Tue, 19 Sep 2017 08:51:38 +0000</pubDate>
            
            <guid>/2017/09/19/threads-vs-event-loop-again/</guid>
            <description>&lt;p&gt;I still get asked this, from time to time.  Maybe it&amp;rsquo;s because I only
use event loops, maybe it&amp;rsquo;s because I&amp;rsquo;ve written &lt;a href=&#34;https://github.com/troglobit/libuev&#34;&gt;libuEv&lt;/a&gt;, or maybe
people still don&amp;rsquo;t understand:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why an event loop, why not use threads?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So here&amp;rsquo;s my response, once more.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>I still get asked this, from time to time.  Maybe it&rsquo;s because I only
use event loops, maybe it&rsquo;s because I&rsquo;ve written <a href="https://github.com/troglobit/libuev">libuEv</a>, or maybe
people still don&rsquo;t understand:</p>
<blockquote>
<p>Why an event loop, why not use threads?</p>
</blockquote>
<p>So here&rsquo;s my response, once more.</p>
<p>With the advent of light-weight processes (threads) programmers these
days have a <a href="http://c2.com/cgi/wiki?GoldenHammer">golden hammer</a> they
often swing without consideration.  Event loops and non-blocking I/O is
often a far easier approach, as well as less error prone.</p>
<p>The purpose of many applications is, with a little logic sprinkled on
top, to act on network packets entering an interface, timeouts expiring,
mouse clicks, or other types of events.  Such applications are often
very well suited to use an event loop.</p>
<p>Applications that need to churn massively parallel algorithms are more
suitable for running multiple (independent) threads on several CPU
cores.  However, threaded applications must deal with the side effects
of concurrency, like race conditions, deadlocks, live locks, etc.
Writing error free threaded applications is hard, debugging them can be
even harder.</p>
<p>Sometimes the combination of multiple threads <em>and</em> an event loop per
thread can be the best approach, but each application of course needs to
be broken down individually to find the most optimal approach.  Do keep
in mind, however, that not all systems your application will run on have
multiple CPU cores &ndash; some small embedded systems still use a single CPU
core, even though they run Linux, with multiple threads a program may
actually run slower!  Always profile your program, and if possible, test
it on different architectures.</p>]]></content>
        </item>
        
        <item>
            <title>Packaging Software with Docker</title>
            <link>/2017/09/17/packaging-software-with-docker/</link>
            <pubDate>Sun, 17 Sep 2017 10:45:37 +0000</pubDate>
            
            <guid>/2017/09/17/packaging-software-with-docker/</guid>
            <description>&lt;p&gt;This post details how to package and deploy software with Docker.  The
example uses &lt;a href=&#34;https://github.com/troglobit/merecat&#34;&gt;Merecat httpd&lt;/a&gt; on Alpine Linux.  Try it out with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker pull troglobit/merecat
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See &lt;a href=&#34;https://hub.docker.com/r/troglobit/merecat/&#34;&gt;https://hub.docker.com/r/troglobit/merecat/&lt;/a&gt; for details on how to
run Merecat httpd in production.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This post details how to package and deploy software with Docker.  The
example uses <a href="https://github.com/troglobit/merecat">Merecat httpd</a> on Alpine Linux.  Try it out with:</p>
<pre><code>docker pull troglobit/merecat
</code></pre>
<p>See <a href="https://hub.docker.com/r/troglobit/merecat/">https://hub.docker.com/r/troglobit/merecat/</a> for details on how to
run Merecat httpd in production.</p>
<p>The software I&rsquo;ve chosen for this exercise is <a href="https://github.com/troglobit/merecat">Merecat httpd</a>,
and the reason is simple: we needed a <em>really</em> small web front-end to
the FTP server at work and Debian has removed <a href="http://www.boa.org">Boa</a> from its repo,
which also means it&rsquo;s missing from Ubuntu these days.</p>
<p>If you&rsquo;ve not yet installed Docker, do so now.</p>
<pre><code>sudo apt install docker.io
sudo adduser $LOGNAME docker
</code></pre>
<p><strong>NOTE:</strong> Remember to log out and in again to activate the new group
settings before continuing below.</p>
<p>Merecat comes with a <a href="https://github.com/troglobit/merecat/blob/master/Dockerfile">Dockerfile</a>, so all we need to do to is build
the image and flatten it before we deploy.  Start by cloning the repo:</p>
<pre><code>git clone https://github.com/troglobit/merecat.git
cd merecat/
docker build .
[..]
Successfully built c87dd09084a3
</code></pre>
<p>Take note of the resulting image hash, here <code>c87dd09084a3</code>.  You can
also find this with the <code>docker images</code> command.</p>
<p>Now, take it for a spin.  Allow your host&rsquo;s port 80 (HTTP) to be
forwarded to the container&rsquo;s port 80:</p>
<pre><code>docker run -dit -p 80:80 c87dd09084a3
d98583cb31c9417c6e4117768245f1256e3003d44668e21e75589b63e0e03074
www-browser localhost
</code></pre>
<p>Another hash is printed, this time for the running container, which can
also be seen using the <code>docker ps</code> command.</p>
<p>Finally, it&rsquo;s time to flatten the container:</p>
<pre><code>docker export d98583cb31c9 | docker import - troglobit/merecat:latest
</code></pre>
<p>Notice this size difference of between d98583cb31c9 and the flattnened
image, run <code>docker images</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
troglobit/merecat   latest              1764df1eb990        5 seconds ago       4.271 MB
&lt;none&gt;              &lt;none&gt;              c87dd09084a3        29 minutes ago      192.4 MB
alpine              3.5                 37c7be7a096b        3 days ago          3.991 MB
</code></pre></div><p>We now have our production image.  Kill the currently running &ldquo;template&rdquo;
container and remove its image before continuing:</p>
<pre><code>docker kill d98583cb31c9
docker rmi -f c87dd09084a3
</code></pre>
<p>Let&rsquo;s check the production image, here I export my FTP directory to the
container&rsquo;s WWW dir.  Notice how the entry point is lost after flattening,
so we have to provide the full command, or write a new Dockerfile:</p>
<pre><code>docker run -dit -v /srv/ftp:/var/www -p 80:80 troglobit/merecat merecat -n /var/www
www-browser localhost
</code></pre>
<p>You should now see the FTP server contents, provided of course your host
has an <code>/srv/ftp</code> directory.</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>Install X-Window in Alpine Linux</title>
            <link>/2017/09/10/install-x-window-in-alpine-linux/</link>
            <pubDate>Sun, 10 Sep 2017 11:13:39 +0000</pubDate>
            
            <guid>/2017/09/10/install-x-window-in-alpine-linux/</guid>
            <description>&lt;p&gt;How to install LXDM + XFCE4 in Alpine Linux 3.6 when testing with
&lt;a href=&#34;https://github.com/troglobit/finit/tree/master/contrib/alpine&#34;&gt;Finit&lt;/a&gt;.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>How to install LXDM + XFCE4 in Alpine Linux 3.6 when testing with
<a href="https://github.com/troglobit/finit/tree/master/contrib/alpine">Finit</a>.</p>
<p>The following sets up everything needed to run in KVM or virt-manager.
The QXL driver is probably not needed for other environments, and there
are other icon themes than Tango.</p>
<p>The evdev driver requires the evdev kernel module, and you may also need
to load the mousedev kernel module.</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">setup-alpine
setup-xorg-base
apk add xfce4 lxdm
apk add xf86-video-qxl
apk add xf86-input-keyboard xf86-input-mouse xf86-input-evdev
apk add tango-icon-theme
</code></pre></div><p>Now, configure X, it may be necessary when running in KVM or virt-manager:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">X -configure
</code></pre></div><p>Edit the file <code>xorg.conf.new</code> as needed, possibly you need to disable X
automatic features for adding and enabling devices.</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">Section &#34;ServerLayout&#34;
	Identifier     &#34;X.org Configured&#34;
	Screen      0  &#34;Screen0&#34; 0 0
	InputDevice    &#34;Mouse0&#34; &#34;CorePointer&#34;
	InputDevice    &#34;Keyboard0&#34; &#34;CoreKeyboard&#34;
	Option &#34;AutoAddDevices&#34;    &#34;false&#34;          # &lt;-- 
	Option &#34;AutoEnableDevices&#34; &#34;false&#34;          # &lt;--
EndSection
</code></pre></div><p>There seems to be a bug in the Qemu QXL driver, so make sure to also set
the following:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">Section &#34;Device&#34;
	Option      &#34;ENABLE_SURFACES&#34;	&#34;false&#34;     # &lt;--
	Identifier  &#34;Card0&#34;
	Driver      &#34;qxl&#34;
	BusID       &#34;PCI:0:2:0&#34;
EndSection
</code></pre></div><p>Then copy it to its place:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">cp xorg.conf.new /etc/X11/xorg.conf
</code></pre></div><p>Now you should be able to use <code>startx</code> to test your installation.  If
you want LXDM to work properly you need to modify <code>/etc/lxdm/lxdm.conf</code>.
Find a commented row that says <code>sessions</code>, add a new one that is:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">session /usr/bin/startxfce4
</code></pre></div><p>For more help with LXDM, see <a href="https://wiki.archlinux.org/index.php/LXDM">https://wiki.archlinux.org/index.php/LXDM</a></p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>Boot Alpine Linux with GRUB</title>
            <link>/2017/09/09/boot-alpine-linux-with-grub/</link>
            <pubDate>Sat, 09 Sep 2017 21:37:10 +0000</pubDate>
            
            <guid>/2017/09/09/boot-alpine-linux-with-grub/</guid>
            <description>&lt;p&gt;It&amp;rsquo;s fairly easy to replace the slightly unfriendly syslinux with grub
(grub2) in Alpine Linux.  I use v3.6 but YMMV.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>It&rsquo;s fairly easy to replace the slightly unfriendly syslinux with grub
(grub2) in Alpine Linux.  I use v3.6 but YMMV.</p>
<p>Notice how I use the tool <code>blkid</code> to find the Linux root device.  The
<em>grub</em> root device, however, needs to be the first partition, which is
a bit confusing.</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">alpine:~# apk del syslinux
alpine:~# apk add grub grub-bios
alpine:~# grub-install /dev/sda
alpine:~# blkid 
/dev/sda3: <span class="nv">UUID</span><span class="o">=</span><span class="s2">&#34;caff7641-b9d3-435a-8282-fc3b15ae8b3a&#34;</span> <span class="nv">TYPE</span><span class="o">=</span><span class="s2">&#34;ext4&#34;</span>
/dev/sda2: <span class="nv">UUID</span><span class="o">=</span><span class="s2">&#34;fe051023-0986-425e-af4c-5e34a24d4756&#34;</span> <span class="nv">TYPE</span><span class="o">=</span><span class="s2">&#34;swap&#34;</span>
/dev/sda1: <span class="nv">UUID</span><span class="o">=</span><span class="s2">&#34;1c6b6010-4dff-4d10-881f-16899bd4c227&#34;</span> <span class="nv">TYPE</span><span class="o">=</span><span class="s2">&#34;ext4&#34;</span>
alpine:~# cat <span class="s">&lt;&lt;EOF &gt;&gt; /etc/grub.d/40_custom
</span><span class="s">
</span><span class="s">menuentry &#34;Alpine Linux&#34; {
</span><span class="s">	set root=(hd0,1)
</span><span class="s">	linux /boot/vmlinuz root=UUID=caff7641-b9d3-435a-8282-fc3b15ae8b3a modules=sd-mod,usb-storage4,ext3 quiet
</span><span class="s">	initrd /boot/initramfs-vanilla
</span><span class="s">}
</span><span class="s">EOF</span>
</code></pre></div><p>Or edit the file with <code>mg /etc/grub.d/40_custom</code> to add the above
<code>menuentry</code>.</p>
<p>Now create the <code>grub.cfg</code> file from the templates in <code>/etc/grub.d/*</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">alpine:~# grub-mkconfig -o /boot/grub/grub.cfg
</code></pre></div><!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>GIT, Autoconf and Automake in OpenBSD</title>
            <link>/2017/06/06/install-git-in-openbsd/</link>
            <pubDate>Tue, 06 Jun 2017 10:44:55 +0000</pubDate>
            
            <guid>/2017/06/06/install-git-in-openbsd/</guid>
            <description>Reminder to self:
echo &amp;#34;https://ftp.eu.openbsd.org/pub/OpenBSD/&amp;#34; &amp;gt;/etc/installurl pkg_add git autoconf automake libtool Select the latest versions, then add the following to ~/.profile:
AUTOCONF_VERSION=2.69 AUTOMAKE_VERSION=1.15 export AUTOCONF_VERSION AUTOMAKE_VERSION With your selected versions, of course.</description>
            <content type="html"><![CDATA[<p>Reminder to self:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh"><span class="nb">echo</span> <span class="s2">&#34;https://ftp.eu.openbsd.org/pub/OpenBSD/&#34;</span> &gt;/etc/installurl
pkg_add git autoconf automake libtool
</code></pre></div><p>Select the latest versions, then add the following to <code>~/.profile</code>:</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh"><span class="nv">AUTOCONF_VERSION</span><span class="o">=</span>2.69
<span class="nv">AUTOMAKE_VERSION</span><span class="o">=</span>1.15
<span class="nb">export</span> AUTOCONF_VERSION AUTOMAKE_VERSION
</code></pre></div><p>With your selected versions, of course.</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->
]]></content>
        </item>
        
        <item>
            <title>HTTPS proxy for Merecat httpd</title>
            <link>/2017/02/12/https-proxy-for-merecat-httpd/</link>
            <pubDate>Sun, 12 Feb 2017 00:07:44 +0000</pubDate>
            
            <guid>/2017/02/12/https-proxy-for-merecat-httpd/</guid>
            <description>This is a HTTPS proxy HowTo for Merecat httpd using pound and OpenSSL.
Pound is a reverse proxy, load balancer, and HTTPS front-end for Web servers. It is available in Debian/Ubuntu and is very simple to set up:
First install the package, including OpenSSL, or LibreSSL:
sudo apt install pound openssl  Use OpenSSL to create a self-signed certificate:
mkdir ~/certs cd ~/certs openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.</description>
            <content type="html"><![CDATA[<p>This is a HTTPS proxy HowTo for <a href="http://merecat.troglobit.com">Merecat httpd</a> using <a href="http://www.apsis.ch/pound/">pound</a>
and OpenSSL.</p>
<p>Pound is a reverse proxy, load balancer, and HTTPS front-end for Web
servers.  It is available in Debian/Ubuntu and is very simple to set up:</p>
<p>First install the package, including OpenSSL, or LibreSSL:</p>
<pre><code>sudo apt install pound openssl
</code></pre>
<p>Use OpenSSL to create a self-signed certificate:</p>
<pre><code>mkdir ~/certs
cd  ~/certs
openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes
cat cert.pem key.pem &gt; bundle.pem
</code></pre>
<p>Now, we move to the Merecat directory from the previous blog post and
start it on port 8080:</p>
<pre><code>cd ~/merecat
./src/merecat -p 8080 www/
</code></pre>
<p>Now, edit the default <code>/etc/pound/pound.cfg</code> to include the following:</p>
<pre><code>ListenHTTPS
    Address 0.0.0.0
    Port 443
    AddHeader &quot;X-Forwarded-Proto: https&quot;
    AddHeader &quot;X-Forwarded-Port: 80&quot;
    HeadRemove &quot;X-Forwarded-Proto&quot;
    HeadRemove &quot;X-Forwarded-For&quot;
    Cert &quot;/home/jocke/certs/bundle.pem&quot;

    # This is the address and TCP port where Merecat httpd runs
    Service
            BackEnd
                    Address 127.0.0.1
                    Port 8080
            End
    End
End
</code></pre>
<p>We make sure to remove any existing <code>X-Forwarded-For</code> header to prevent
any malicious client from injecting them beforehand.  Then enable pound
by editing <code>/etc/default/pound</code></p>
<pre><code>startup=1
</code></pre>
<p>And start the service</p>
<pre><code>sudo /etc/init.d/pound restart
</code></pre>
<p>Your service is now available over HTTPS.  Try it with curl, which needs
to be called with <code>-k</code> to skip certificate validation:</p>
<pre><code>curl -ki https://localhost/~jocke/
HTTP/1.0 200 OK
testing stderr
Content-Type: text/html;charset=utf-8

&lt;html&gt;
&lt;head&gt;&lt;title&gt;Hej&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;Hello, HTTP SPOKEN HERE&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
</code></pre>
<p>All done. Good Luck!</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->
]]></content>
        </item>
        
        <item>
            <title>Emulate an actual MTD device in Qemu</title>
            <link>/2017/02/02/emulate-an-actual-mtd-device-in-qemu/</link>
            <pubDate>Thu, 02 Feb 2017 18:52:18 +0000</pubDate>
            
            <guid>/2017/02/02/emulate-an-actual-mtd-device-in-qemu/</guid>
            <description>&lt;p&gt;Having worked with Linux for the last 20 years, and embedded for more
than ten of them, I&amp;rsquo;ve become quite a fan of virtualization in general
and &lt;a href=&#34;http://qemu.org&#34;&gt;Qemu&lt;/a&gt; in particular.&lt;/p&gt;
&lt;p&gt;Qemu is a fantastic little tool, created by the Open Source superhero
&lt;a href=&#34;http://blog.smartbear.com/careers/fabrice-bellard-portrait-of-a-super-productive-programmer/&#34;&gt;Fabrice Bellard&lt;/a&gt;.
It can be used to verify an embedded system without having to deal with
the problems of actual HW until you really have to.  Don&amp;rsquo;t get me wrong,
HW excites me like any other nerd, but if the HW is new and shaky it can
be quite a pain to develop higher level functions.&lt;/p&gt;
&lt;p&gt;My holy grail is to have a 100% complete and accurate virtualization
target per architecture to test my various software projects on.  That&amp;rsquo;s
why I created &lt;a href=&#34;https://github.com/troglobit/troglos&#34;&gt;TroglOS&lt;/a&gt;.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Having worked with Linux for the last 20 years, and embedded for more
than ten of them, I&rsquo;ve become quite a fan of virtualization in general
and <a href="http://qemu.org">Qemu</a> in particular.</p>
<p>Qemu is a fantastic little tool, created by the Open Source superhero
<a href="http://blog.smartbear.com/careers/fabrice-bellard-portrait-of-a-super-productive-programmer/">Fabrice Bellard</a>.
It can be used to verify an embedded system without having to deal with
the problems of actual HW until you really have to.  Don&rsquo;t get me wrong,
HW excites me like any other nerd, but if the HW is new and shaky it can
be quite a pain to develop higher level functions.</p>
<p>My holy grail is to have a 100% complete and accurate virtualization
target per architecture to test my various software projects on.  That&rsquo;s
why I created <a href="https://github.com/troglobit/troglos">TroglOS</a>.</p>
<p>Since most of the systems I&rsquo;ve engaged with have had built-in (NOR)
flash, I wanted a similar enough emulated system.  However, many things
like RTC or MTD did not really exist or work the way I wanted.  I can
live without an emulated RTC, but mapping <em>named</em> MTD partitions to
different mount points was a showstopper for me.  So one of the small
fixes to Linux I&rsquo;ve made is an extension to the mtd2block driver.</p>
<p>The mtd2block driver can take a device, provided by Qemu emulating a
block device from a raw file on the host, and present as an MTD.  The
following patch adds naming of that MTD so the below <code>/etc/fstab</code> can
find and mount it just like it would an actual named MTD partition.</p>
<p>Here&rsquo;s the <code>/etc/fstab</code> entry:</p>
<pre><code>mtd:Config	/mnt	jffs2	sync,noatime,nodiratime		0	0
</code></pre>
<p>And here&rsquo;s <a href="https://github.com/troglobit/troglos/blob/master/kernel/patches/4.2/mtd2block-custom-label.patch">the patch</a>:</p>
<div class="highlight"><pre class="chroma"><code class="language-patch" data-lang="patch">commit 69f0cbdcfa6a80fbebe206e2bc3e516342da3be8
Author: Joachim Nilsson &lt;troglobit@gmail.com&gt;
Date:   Wed Nov 18 16:38:13 2015 +0100

    mtd2block: Add support for an optional custom MTD label
    
    This patch adds support for an optional MTD label for mtd2block emulated
    MTD devices.  Useful when, e.g. testing device images using Qemu.  The
    following /etc/fstab line in can then be used to mount a file system
    regardless of the actual MTD partition number:
    
        mtd:Config	/mnt	jffs2	noatime,nodiratime	0    0
    
    Kernel command line syntax:
    
        block2mtd.block2mtd=/dev/sda,,Config
    
    The &#39;,,&#39; is the optional erase_size, which like before this patch,
    defaults to PAGE_SIZE if left out.
    
    Signed-off-by: Joachim Nilsson &lt;troglobit@gmail.com&gt;

<span class="gh">diff --git a/drivers/mtd/devices/block2mtd.c b/drivers/mtd/devices/block2mtd.c
</span><span class="gh">index b16f3cd..309276c 100644
</span><span class="gh"></span><span class="gd">--- a/drivers/mtd/devices/block2mtd.c
</span><span class="gd"></span><span class="gi">+++ b/drivers/mtd/devices/block2mtd.c
</span><span class="gi"></span><span class="gu">@@ -218,7 +218,7 @@ static void block2mtd_free_device(struct block2mtd_dev *dev)
</span><span class="gu"></span> 
 
 static struct block2mtd_dev *add_device(char *devname, int erase_size,
<span class="gd">-		int timeout)
</span><span class="gd"></span><span class="gi">+		char *label, int timeout)
</span><span class="gi"></span> {
 #ifndef MODULE
 	int i;
<span class="gu">@@ -282,7 +282,10 @@ static struct block2mtd_dev *add_device(char *devname, int erase_size,
</span><span class="gu"></span> 
 	/* Setup the MTD structure */
 	/* make the name contain the block device in */
<span class="gd">-	name = kasprintf(GFP_KERNEL, &#34;block2mtd: %s&#34;, devname);
</span><span class="gd"></span><span class="gi">+	if (!label)
</span><span class="gi">+		name = kasprintf(GFP_KERNEL, &#34;block2mtd: %s&#34;, devname);
</span><span class="gi">+	else
</span><span class="gi">+		name = kstrdup(label, GFP_KERNEL);
</span><span class="gi"></span> 	if (!name)
 		goto err_destroy_mutex;
 
<span class="gu">@@ -383,8 +386,8 @@ static int block2mtd_setup2(const char *val)
</span><span class="gu"></span> 	/* 80 for device, 12 for erase size, 80 for name, 8 for timeout */
 	char buf[80 + 12 + 80 + 8];
 	char *str = buf;
<span class="gd">-	char *token[2];
</span><span class="gd">-	char *name;
</span><span class="gd"></span><span class="gi">+	char *token[3];
</span><span class="gi">+	char *name, *label = NULL;
</span><span class="gi"></span> 	size_t erase_size = PAGE_SIZE;
 	unsigned long timeout = MTD_DEFAULT_TIMEOUT;
 	int i, ret;
<span class="gu">@@ -397,7 +400,7 @@ static int block2mtd_setup2(const char *val)
</span><span class="gu"></span> 	strcpy(str, val);
 	kill_final_newline(str);
 
<span class="gd">-	for (i = 0; i &lt; 2; i++)
</span><span class="gd"></span><span class="gi">+	for (i = 0; i &lt; 3; i++)
</span><span class="gi"></span> 		token[i] = strsep(&amp;str, &#34;,&#34;);
 
 	if (str) {
<span class="gu">@@ -416,7 +419,7 @@ static int block2mtd_setup2(const char *val)
</span><span class="gu"></span> 		return 0;
 	}
 
<span class="gd">-	if (token[1]) {
</span><span class="gd"></span><span class="gi">+	if (token[1] &amp;&amp; strlen(token[1])) {
</span><span class="gi"></span> 		ret = parse_num(&amp;erase_size, token[1]);
 		if (ret) {
 			pr_err(&#34;illegal erase size\n&#34;);
<span class="gu">@@ -424,7 +427,12 @@ static int block2mtd_setup2(const char *val)
</span><span class="gu"></span> 		}
 	}
 
<span class="gd">-	add_device(name, erase_size, timeout);
</span><span class="gd"></span><span class="gi">+	if (token[2]) {
</span><span class="gi">+		label = token[2];
</span><span class="gi">+		pr_info(&#34;Using custom MTD label &#39;%s&#39; for dev %s\n&#34;, label, name);
</span><span class="gi">+	}
</span><span class="gi">+
</span><span class="gi">+	add_device(name, erase_size, label, timeout);
</span><span class="gi"></span> 
 	return 0;
 }
<span class="gu">@@ -458,7 +466,7 @@ static int block2mtd_setup(const char *val, struct kernel_param *kp)
</span><span class="gu"></span> 
 
 module_param_call(block2mtd, block2mtd_setup, NULL, NULL, 0200);
<span class="gd">-MODULE_PARM_DESC(block2mtd, &#34;Device to use. \&#34;block2mtd=&lt;dev&gt;[,&lt;erasesize&gt;]\&#34;&#34;);
</span><span class="gd"></span><span class="gi">+MODULE_PARM_DESC(block2mtd, &#34;Device to use. \&#34;block2mtd=&lt;dev&gt;[,[&lt;erasesize&gt;][,&lt;name&gt;]]\&#34;&#34;);
</span><span class="gi"></span> 
 static int __init block2mtd_init(void)
 {
</code></pre></div><!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>Wolfenstein-3D on RetroPie</title>
            <link>/2017/01/15/wolfenstein-3d-on-retropie/</link>
            <pubDate>Sun, 15 Jan 2017 13:13:15 +0000</pubDate>
            
            <guid>/2017/01/15/wolfenstein-3d-on-retropie/</guid>
            <description>&lt;p&gt;The last game I ever played was &lt;a href=&#34;https://en.wikipedia.org/wiki/Wolfenstein_3D&#34;&gt;Castle Wolfenstein 3D&lt;/a&gt;, released in
1992 for MS-DOS, made by the now legendary id Software.  OK, admittedly
I&amp;rsquo;ve played other games since then, but I&amp;rsquo;ve never again been so manic
about a game since Wolfenstein.&lt;/p&gt;
&lt;img style=&#34;width:50%;height:auto;&#34; class=&#34;center&#34; src=&#34;/images/wolf3d.png&#34;&gt;
&lt;p&gt;This post is about how to build, install and set up Wolfenstein 3D on a
Raspberry Pi running &lt;a href=&#34;https://retropie.org.uk/&#34;&gt;RetroPie&lt;/a&gt; &amp;hellip; on a &lt;a href=&#34;https://shop.pimoroni.com/products/picade&#34;&gt;Picade&lt;/a&gt; :-)&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>The last game I ever played was <a href="https://en.wikipedia.org/wiki/Wolfenstein_3D">Castle Wolfenstein 3D</a>, released in
1992 for MS-DOS, made by the now legendary id Software.  OK, admittedly
I&rsquo;ve played other games since then, but I&rsquo;ve never again been so manic
about a game since Wolfenstein.</p>
<img style="width:50%;height:auto;" class="center" src="/images/wolf3d.png">
<p>This post is about how to build, install and set up Wolfenstein 3D on a
Raspberry Pi running <a href="https://retropie.org.uk/">RetroPie</a> &hellip; on a <a href="https://shop.pimoroni.com/products/picade">Picade</a> :-)</p>
<p>You need the original WAD files to play the game.  It&rsquo;s really worth
investing the money if you don&rsquo;t already have a copy.  Mount the CD, or
the CD image to <code>/mnt</code> on your Linux PC, the files are located in:</p>
<pre><code>mkdir ~/wolf3d
cd /mnt/Install/data/WOLF3D/
cp *.WL6 ~/wolf3d/
</code></pre>
<p>The <code>.wl6</code> files must be installed in <code>/usr/local/share/games/wolf3d/</code>
on the Raspberry Pi, with names in <em>lower-case</em>.  Use the following
command to rename them from upper-case:</p>
<pre><code>cd
rename 'y/A-Z/a-z/' wolf3d/*
</code></pre>
<p>Transfer the files to the Pi using scp, or similar:</p>
<pre><code>scp -r wolf3d pi@raspberrypi.local:.
</code></pre>
<p>On the Rasberry Pi:</p>
<pre><code>sudo mv ~/wolf3d /usr/local/share/games/
</code></pre>
<p>Now, download the game source from GitHub:</p>
<pre><code>git clone https://github.com/mozzwald/wolf4sdl.git
cd wolf4sdl/
</code></pre>
<p>To build the game you need to install the SDL libraries, in particular
the <code>-dev</code> packages for both SDL and the SDL mixer:</p>
<pre><code>sudo apt install libsdl*-dev 
</code></pre>
<p>You may need to edit the file <code>version.h</code>, depending on what version of
the original game you have.  When done, build the game:</p>
<pre><code>make
</code></pre>
<p>To start Wolfenstein in RetroPie (Emulation Station), create the
following script and it will appear in the Ports section, like
Minecraft:</p>
<pre><code>cd ~/RetroPie/roms/ports
vim Wolfenstein-3D.sh
</code></pre>
<p>Copy and paste the following lines:</p>
<pre><code>#!/bin/bash
cd /home/pi/wolf4sdl
/opt/retropie/supplementary/runcommand/runcommand.sh 0 &quot;./wolf3d --res 640 480&quot;
</code></pre>
<p>Remember to set the executable flag on the script before restarting the
Emulation Station GUI:</p>
<pre><code>chmod +x Wolfenstein-3D.sh
</code></pre>
<p>Done.</p>
<p>Restart and enjoy the game on your Picade like I do :-)</p>
<blockquote class="twitter-tweet" data-lang="en">
<p lang="en" dir="ltr">
<p>Wolfenstein 3D on the <a href="https://twitter.com/hashtag/Picade?src=hash">#Picade</a> 😍
<a href="https://t.co/8RUY4gidSv">pic.twitter.com/8RUY4gidSv</a></p>
</p>&mdash; Troglobit (@troglobit) <a href="https://twitter.com/troglobit/status/820614016498331648">January 15, 2017</a>
</blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>Trust Bluetooth 4.0 Adapter in Linux</title>
            <link>/2017/01/03/trust-bluetooth-4.0-adapter-in-linux/</link>
            <pubDate>Tue, 03 Jan 2017 17:03:05 +0000</pubDate>
            
            <guid>/2017/01/03/trust-bluetooth-4.0-adapter-in-linux/</guid>
            <description>&lt;p&gt;This is a quick writeup of how to get the Trust Bluetooth 4.0 adapter
(dongle) working in Linux, Ubuntu 16.04.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This is a quick writeup of how to get the Trust Bluetooth 4.0 adapter
(dongle) working in Linux, Ubuntu 16.04.</p>
<p>The Bluetooth adapter in my ThinkPad X1 Carbon has never worked, it was
a heavily used laptop when I purchased it, so it may have been broken
for some time.  I spent some time early on trying to get it to work, but
to no avail unfortunately.</p>
<p>Today I stumbled upon a quite cheap Bluetooth adapter from Trust at
Net-on-Net here in Västerås.  The adapter use a chipset common to many
such small Bluetooth dongles:</p>
<pre><code>$ lsusb
...
Bus 003 Device 005: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HID mode)
...
</code></pre>
<p>The dongle is a bit stubborn since it starts up in HID mode, instead of
HCI mode, by default.  However, thanks to the power open source there
is a way to switch it around without having to resort to using Windows.</p>
<p>Create the file <code>/etc/udev/rules.d/97-hid2hci.rules</code> as root and add
the following line:</p>
<pre><code>$ sudo vim /etc/udev/rules.d/97-hid2hci.rules
ATTR{idVendor}==&quot;0a12&quot;, ATTR{idProduct}==&quot;0001&quot;, RUN+=&quot;/lib/udev/hid2hci --mode=hci --method=csr2 --devpath=%p&quot;
</code></pre>
<p>Simply unplugging and plugging it back in again didn&rsquo;t work for me, so
reboot your laptop/system/raspberry to get it to work.  Having started
up you can check the output of <code>lsusb</code> again:</p>
<pre><code>$ lsusb
...
Bus 003 Device 005: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)
...
</code></pre>
<p>Then check <code>hciool</code> to verify Linux has found the Bluetooth dongle:</p>
<pre><code>$ hcitool dev
Devices:
       hci0	00:1A:7D:DA:71:13
</code></pre>
<p>Good Luck! :)</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>A life without sudo</title>
            <link>/2016/12/11/a-life-without-sudo/</link>
            <pubDate>Sun, 11 Dec 2016 20:26:12 +0000</pubDate>
            
            <guid>/2016/12/11/a-life-without-sudo/</guid>
            <description>Ever since my first stumbling steps with Linux back in &amp;lsquo;96, I&amp;rsquo;ve been learning about UNIX. The first obvious lesson was to not use the root account. Since then I&amp;rsquo;ve been using a combination of sudo command and suid root binaries to get the job done.

For the last ten years, however, I&amp;rsquo;ve been meaning to learn about Linux capabilities(7) and thanks to a colleague of mine I now have :)</description>
            <content type="html"><![CDATA[<p>Ever since my first stumbling steps with Linux back in &lsquo;96, I&rsquo;ve been
learning about UNIX.  The first obvious lesson was to not use the root
account.  Since then I&rsquo;ve been using a combination of <code>sudo command</code> and
suid root binaries to get the job done.</p>
<p><a href="https://xkcd.com/149/"><img src="/images/sandwich.png" alt="sudo make me a sandwich"></a></p>
<p>For the last ten years, however, I&rsquo;ve been meaning to learn about Linux
<a href="http://man7.org/linux/man-pages/man7/capabilities.7.html">capabilities(7)</a>
and thanks to a colleague of mine I now have :)</p>
<p>What you want is to grant capabilities per user <em>and</em> application.  Most
tutorials only tell you how to do one or the other.</p>
<p>First of all you need to figure out what capabilities an application
requires to perform an action.  Let&rsquo;s use <code>tcpdump</code> as an example, it
needs raw link access to sniff packets so your user (you), need to be
listed in the system <code>/etc/security/capability.conf</code> file:</p>
<pre><code>cap_net_raw     joachim
</code></pre>
<p>Second, you need to set this on the application, so that when <code>joachim</code>
wants to run <code>tcpdump</code> he is granted the capability:</p>
<pre><code>$ sudo /sbin/setcap cap_net_raw+ep /usr/sbin/tcpdump
</code></pre>
<p>Some applications require multiple capabilities, like Qemu when you use
tap networking.  Update <code>/etc/security/capability.conf</code></p>
<pre><code>cap_net_raw,cap_net_admin     joachim
</code></pre>
<p>Place all capabilities on one line, separated with comma.  Then add both
capabilities to qemu, like this:</p>
<pre><code>$ sudo /sbin/setcap cap_net_raw,cap_net_admin+ep /usr/bin/qemu-system-arm
</code></pre>
]]></content>
        </item>
        
        <item>
            <title>One ping only</title>
            <link>/2016/11/19/one-ping-only/</link>
            <pubDate>Sat, 19 Nov 2016 23:37:20 +0000</pubDate>
            
            <guid>/2016/11/19/one-ping-only/</guid>
            <description>For some odd reason, today was the day when I woke up and continued working on libICMP. It&amp;rsquo;s now almost seven years since I first adopted Tim Lawless&amp;rsquo; public domain version, and today I picked up where I left off and started refactoring and cleaning up.
Example:
#include &amp;#34;icmp/icmp.h&amp;#34; int main(int argc, char *argv[]) { char *host = &amp;#34;localhost&amp;#34;; struct libicmp *obj; if (argc &amp;gt;= 2) host = argv[1]; if (!</description>
            <content type="html"><![CDATA[<p>For some odd reason, today was the day when I woke up and continued
working on <a href="https://github.com/troglobit/libicmp/">libICMP</a>.  It&rsquo;s now almost seven years since I first
adopted Tim Lawless&rsquo; public domain <a href="https://packetstormsecurity.com/files/10728/libicmp.tar.gz.html">version</a>, and today I picked
up where I left off and started refactoring and cleaning up.</p>
<img src="/images/one-ping-only.jpg" style="width:50%;height:auto;" title="Sean Connery vs USS ICMP" class="center">
<p><strong>Example:</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-c" data-lang="c"><span class="cp">#include</span> <span class="cpf">&#34;icmp/icmp.h&#34;</span><span class="cp">
</span><span class="cp"></span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">host</span> <span class="o">=</span> <span class="s">&#34;localhost&#34;</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">libicmp</span> <span class="o">*</span><span class="n">obj</span><span class="p">;</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="p">)</span>
            <span class="n">host</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">obj</span> <span class="o">=</span> <span class="n">icmp_open</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="mh">0x1337</span><span class="p">,</span> <span class="mi">0</span><span class="p">)))</span>
            <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    
    <span class="k">return</span> <span class="n">icmp_ping</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p>libICMP is nowhere near as fancy as <a href="http://noping.cc/">liboping</a> and is only slightly
smaller with a more liberal license (<a href="https://en.wikipedia.org/wiki/ISC_license">ISC</a>).  The <a href="https://github.com/troglobit/libicmp/releases/v1.0">first release</a>
is however available from GitHub.  Pull requests are as usual most
welcome! 😃</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->
]]></content>
        </item>
        
        <item>
            <title>Merecat - another stray kitten?</title>
            <link>/2016/11/06/merecat-another-stray-kitten-/</link>
            <pubDate>Sun, 06 Nov 2016 01:34:18 +0000</pubDate>
            
            <guid>/2016/11/06/merecat-another-stray-kitten-/</guid>
            <description>&lt;p&gt;This post is about my adoption, refactor, and rebranding of thttpd as
&lt;a href=&#34;http://merecat.troglobit.com&#34;&gt;Merecat&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I code for recreation as well as work.  Most of the time I tinker around
with my various &lt;a href=&#34;https://github.com/troglobit&#34;&gt;projects&lt;/a&gt; simply to learn
and sometimes these little projects turn into something useful for other
people as well, which is great!&lt;/p&gt;
&lt;p data-pullquote=&#34;not all things can be simplified, and not all simple
things are correct&#34;&gt; Recently I discovered my method to get started:
refactoring, or just simple code cleanup.  You see I&#39;ve got this crazy
idea that &lt;em&gt;all simple things are correct&lt;/em&gt;.  Although things
usually tend to require a certain balance &amp;mdash; not all things can be
simplified, and not all simple things are correct.&lt;/p&gt;
&lt;p&gt;When I recently had to migrate my personal blog, FTP, and GIT server, I
set out to run everything from an old RasPi2.  This put my private life
in just about the same niche as my work life, embedded.  On a resource
constrained platform like that running Apache is not the best idea.  So
I set out to (re-)discover the web servers of my past, the late 90&amp;rsquo;s, I
had almost forgotten:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://acme.com/software/mini_httpd/&#34;&gt;mini_httpd&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boa.org/&#34;&gt;Boa&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;BusyBox httpd,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.acme.com/software/thttpd/&#34;&gt;thttpd&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;and more &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Come to think of it, they are probably one of the many reasons that I
started my career in embedded in the first place!&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This post is about my adoption, refactor, and rebranding of thttpd as
<a href="http://merecat.troglobit.com">Merecat</a>.</p>
<p>I code for recreation as well as work.  Most of the time I tinker around
with my various <a href="https://github.com/troglobit">projects</a> simply to learn
and sometimes these little projects turn into something useful for other
people as well, which is great!</p>
<p data-pullquote="not all things can be simplified, and not all simple
things are correct"> Recently I discovered my method to get started:
refactoring, or just simple code cleanup.  You see I've got this crazy
idea that <em>all simple things are correct</em>.  Although things
usually tend to require a certain balance &mdash; not all things can be
simplified, and not all simple things are correct.</p>
<p>When I recently had to migrate my personal blog, FTP, and GIT server, I
set out to run everything from an old RasPi2.  This put my private life
in just about the same niche as my work life, embedded.  On a resource
constrained platform like that running Apache is not the best idea.  So
I set out to (re-)discover the web servers of my past, the late 90&rsquo;s, I
had almost forgotten:</p>
<ul>
<li><a href="http://acme.com/software/mini_httpd/">mini_httpd</a>,</li>
<li><a href="http://www.boa.org/">Boa</a>,</li>
<li>BusyBox httpd,</li>
<li><a href="http://www.acme.com/software/thttpd/">thttpd</a>,</li>
<li>and more &hellip;</li>
</ul>
<p>Come to think of it, they are probably one of the many reasons that I
started my career in embedded in the first place!</p>
<p>With all the warm feels and fuzzy memories I had of thttpd I decided to
give it a whirl.  And with my usual lack of insight (of how much time
this would consume) I started fixing bugs and issues that nagged me.</p>
<p>Ten patches in I hesitated and set out on another archaeological
expedition, surely I couldn&rsquo;t have seen all these problems myself?  I
visited the usual burial grounds for ancient software: *BSD, Debian,
Gentoo, SourceForge, Internet Archive &hellip; and that&rsquo;s when I found
<a href="https://github.com/blueness/sthttpd/">sthttpd</a> by Anthony G. Basile.</p>
<p>Anthony had left sthttpd in great shape!  Not only had he merged all
Gentoo fixes, he had also converted the build system to GNU configure
and automake.  So I started rebasing my patches on sthttpd and then I
simply couldn&rsquo;t stop.  The refactoring machine in my head was on fire, I
simpy had to let it all out!</p>
<p>The goal I had was a simple to use, good looking by default, bare bones
web server.  My use-case was simple: serve gitweb, HTTP gateway for my
FTP, serve my resumé, and possibly even my Jekyll blog.  So I basically
just needed to get virtual hosts and dir listings working.</p>
<p>In the process, however, I had done a lot more. Lots of half baked ideas
and barely working code.  But it worked for me, so I tagged the first
release of Merecat, v2.30, and went on my merry way.</p>
<p>Until the RasPi server crashed.  I thought it might be heat and maybe
overclocking issues, so I moved it to my server room and downclocked it.
A few weeks passed and everything seemed to work just fine, then bam!
Another crash, and now it only stayed up a few hours at a time between
crashes.</p>
<p>Heartbroken (well not really) I decided it was time to move to the cloud
like everyone else.  So a droplet was created (clear of US influence I
hope) and data was being moved to the new location.  This time I wanted
the setup to be as clean as possible, so only Debian packages and proper
systemd integration.  Fortunately I had a well timed week off from work
to do all this.</p>
<p>I had just barely started digging in, when I got a bug report by email
from Gaetan Bisson who had found lots of issues with Merecat.  The bugs
he reported overlapped nicely with the work I planned to do anyway \o/</p>
<p>The resulting v2.31 release of Merecat has a lot of fixes and new
features, these are the ones I can remember (and are in the GitHub
changelog):</p>
<h3 id="changes">Changes</h3>
<ul>
<li>Sort directories first in dir listings</li>
<li>Include systemd unit file</li>
<li>Add <code>debian/</code> packaging, easy to rebuild and replace for others</li>
<li>Add <code>--enable-public-html</code> to enable <code>~user/public_html</code> dirs</li>
<li>Support for shared <code>WEBROOT/cgi-bin</code> as fallback for vhosts</li>
<li>Update default landing page</li>
</ul>
<h3 id="fixes">Fixes</h3>
<ul>
<li>Add missing CSS and jpeg files to install</li>
<li>Fix dependency tracking when reconfiguring</li>
<li>Fix .conf file parser bugs reported by Gaetan Bisson</li>
<li>Fix missing <code>HAVE_LIBCONFUSE</code> #define causing .conf file support to
not be built, reported by Gaetan Bisson</li>
<li>Fix malplaced call to <code>cfg_free()</code> in .conf file parser, reported by
Gaetan Bisson</li>
<li>Update man page and other documentation with missing quotes around CGI
pattern, issue reported by Gaetan Bisson</li>
<li>Fix syslog warning: bind 0.0.0.0: Address already in use</li>
</ul>
<p>Download the release from my <a href="http://ftp.troglobit.com">FTP</a>, or the
<a href="https://github.com/troglobit/merecat/releases/tag/v2.31">GitHub release page</a>,
which also has a pre-built .deb for Ubuntu 16.04.  For those who want to
build the .deb themselves:</p>
<pre><code>cd merecat/
dpkg-buildpackage -uc -us -B -d
</code></pre>
<p>Then simply:</p>
<pre><code>sudo dpkg -i ../merecat_2.31-3_amd64.deb
</code></pre>
<p><strong>Note:</strong> For use with GitWeb, remember to install <code>libcgi-pm-perl</code></p>
<p>I&rsquo;d like to take this opportunity to thank a couple of friends who
helped out with the auditing and layout testing of the new default
landing page.  Thank you Anders Bornäs and Martin Olsson :-)</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>New Toolchains</title>
            <link>/2016/10/27/new-toolchains/</link>
            <pubDate>Thu, 27 Oct 2016 22:22:44 +0000</pubDate>
            
            <guid>/2016/10/27/new-toolchains/</guid>
            <description>Finally, fresh from the oven, here are the remaining two toolchains I&amp;rsquo;ve promised, based on GCC 6.1 and GLIBC 2.23. Download from the FTP:
 arm-unknown-linux-gnueabi-6.1.0-2.tar.xz powerpc-unknown-linux-gnu-6.1.0-2.tar.xz x86_64-unknown-linux-gnu-6.1.0-2.tar.xz  Unpack into /usr/local, and add to your $PATH, e.g.
export PATH=/usr/local/arm-unknown-linux-gnueabi-6.1.0-2/bin:$PATH  The toolchains are built using crosstool-NG on Ubuntu 16.04 64-bit, and are primarily intended for myself and users of TroglOS, but are generic enough to be useful for other purposes as well.</description>
            <content type="html"><![CDATA[<p>Finally, fresh from the oven, here are the remaining two toolchains I&rsquo;ve
promised, based on GCC 6.1 and GLIBC 2.23.  Download from the <a href="http://ftp.troglobit.com/pub/Toolchains">FTP</a>:</p>
<ul>
<li><a href="http://ftp.troglobit.com/pub/Toolchains">arm-unknown-linux-gnueabi-6.1.0-2.tar.xz</a></li>
<li><a href="http://ftp.troglobit.com/pub/Toolchains">powerpc-unknown-linux-gnu-6.1.0-2.tar.xz</a></li>
<li><a href="http://ftp.troglobit.com/pub/Toolchains">x86_64-unknown-linux-gnu-6.1.0-2.tar.xz</a></li>
</ul>
<p>Unpack into <code>/usr/local</code>, and add to your <code>$PATH</code>, e.g.</p>
<pre><code>export PATH=/usr/local/arm-unknown-linux-gnueabi-6.1.0-2/bin:$PATH
</code></pre>
<p>The toolchains are built using <a href="https://github.com/crosstool-ng/crosstool-ng">crosstool-NG</a> on Ubuntu 16.04 64-bit,
and are primarily intended for myself and users of <a href="https://github.com/troglobit/troglos">TroglOS</a>, but are
generic enough to be useful for other purposes as well.</p>
<p>The <code>.config</code> for <a href="https://github.com/crosstool-ng/crosstool-ng">crosstool-NG</a> can be retrieved using the <code>$CROSS</code>
prefix followed by <code>-ct-ng.config</code>, e.g.:</p>
<pre><code>arm-unknown-linux-gnueabi-cg-ng.config
</code></pre>
<p>This revision only contains C and C++ cross-toolchains, but the next
revision will likely also include Go.  Enjoy! 😃</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->
]]></content>
        </item>
        
        <item>
            <title>ARM Toolchain r1</title>
            <link>/2016/09/26/arm-toolchain-r1/</link>
            <pubDate>Mon, 26 Sep 2016 22:43:53 +0000</pubDate>
            
            <guid>/2016/09/26/arm-toolchain-r1/</guid>
            <description>First GCC 6.1 based ARM (32-bit) toolchain released on my FTP. Built using crosstool-NG for Ubuntu 16.04 (x86_64) with GLIBC 2.23.
 arm-unknown-linux-gnueabi-6.1.0-1.tar.xz  Download, unpack into /usr/local, and add to your $PATH
export PATH=/usr/local/arm-unknown-linux-gnueabi-6.1.0-1/bin:$PATH  There&amp;rsquo;s lots of neat stuff included, both a sysroot and a debug-root with GDB and gdbserver for target. For details on using it, see the excellent docs.
The main purpose for my building this is TroglOS, but it is useful for other purposes as well of course.</description>
            <content type="html"><![CDATA[<p>First GCC 6.1 based ARM (32-bit) toolchain released on my FTP.  Built
using <a href="https://github.com/crosstool-ng/crosstool-ng">crosstool-NG</a> for Ubuntu 16.04 (x86_64) with GLIBC 2.23.</p>
<ul>
<li><a href="http://ftp.troglobit.com/pub/Toolchains/arm-unknown-linux-gnueabi-6.1.0-1.tar.xz">arm-unknown-linux-gnueabi-6.1.0-1.tar.xz</a></li>
</ul>
<p>Download, unpack into <code>/usr/local</code>, and add to your <code>$PATH</code></p>
<pre><code>export PATH=/usr/local/arm-unknown-linux-gnueabi-6.1.0-1/bin:$PATH
</code></pre>
<p>There&rsquo;s lots of neat stuff included, both a <code>sysroot</code> and a <code>debug-root</code>
with GDB and <code>gdbserver</code> for target.  For details on using it, see the
<a href="https://github.com/crosstool-ng/crosstool-ng/blob/master/docs/5%20-%20Using%20the%20toolchain.txt">excellent docs</a>.</p>
<p>The main purpose for my building this is <a href="https://github.com/troglobit/troglos">TroglOS</a>, but it is useful
for other purposes as well of course.  To rebuild it on your system, see
the included crosstool.config file and the encoded GIT hash.</p>
<p>Next up is a PowerPC (32-bit) and x86 (64-bit) toolchain, also with GLIBC
2.23.  Then I may venture into the realm of musl libc based toolchains,
possibly the guise of <a href="https://github.com/cobble-os/">CobbleOS</a> &hellip;</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->
]]></content>
        </item>
        
        <item>
            <title>Finit3: Almost there ...</title>
            <link>/2016/09/21/finit3-almost-there/</link>
            <pubDate>Wed, 21 Sep 2016 19:08:37 +0000</pubDate>
            
            <guid>/2016/09/21/finit3-almost-there/</guid>
            <description>Today the new logo for Finit3 was added to the GitHub repo and the homepage
Gorgeous, isn&amp;rsquo;t it?! 🕶
This fancy artwork means we&amp;rsquo;re nearing the end of a long and agonizing release cycle where a lot of the internals of Finit have been rewritten and new exciting features have been added! More on this in an upcoming post 😃</description>
            <content type="html"><![CDATA[<p>Today the new logo for Finit3 was added to the GitHub repo and the
<a href="/finit.html">homepage</a></p>
<p><img src="/images/finit3.png" alt="Finit3 logo"></p>
<p>Gorgeous, isn&rsquo;t it?! 🕶</p>
<p>This fancy artwork means we&rsquo;re nearing the end of a long and agonizing
release cycle where a lot of the internals of Finit have been rewritten
and new exciting features have been added!  More on this in an upcoming
post 😃</p>
]]></content>
        </item>
        
        <item>
            <title>The General Idea</title>
            <link>/2016/09/02/the-general-idea/</link>
            <pubDate>Fri, 02 Sep 2016 23:30:00 +0000</pubDate>
            
            <guid>/2016/09/02/the-general-idea/</guid>
            <description>OK, so here&amp;rsquo;s the general idea: take one teaspoon of a well equipped SBC with Marvell chips you know well, add an awesome WiFi hotspot with USB connection, stir feverishly for several weekends in a row, then sprinkle some AlpineLinux and a custom kernel on top. Enjoy!
I have no clue if this will actually work, may even try porting my own little thing called TroglOS to the ClearFog first, I don&amp;rsquo;t know, but it will definitely be awesome!</description>
            <content type="html"><![CDATA[<p>OK, so here&rsquo;s the general idea: take one teaspoon of a well equipped SBC
with Marvell chips you know well, add an awesome WiFi hotspot with USB
connection, stir feverishly for several weekends in a row, then sprinkle
some AlpineLinux and a custom kernel on top.  Enjoy!</p>
<img src="/images/recipe.png" class="center">
<p>I have no clue if this will actually work, may even try porting my own
little thing called <a href="https://github.com/troglobit/troglos">TroglOS</a> to
the ClearFog first, I don&rsquo;t know, but it will definitely be awesome!
😃</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->
]]></content>
        </item>
        
        <item>
            <title>Live KVM migration with virt-manager</title>
            <link>/2016/08/18/live-kvm-migration-with-virt-manager/</link>
            <pubDate>Thu, 18 Aug 2016 20:07:17 +0000</pubDate>
            
            <guid>/2016/08/18/live-kvm-migration-with-virt-manager/</guid>
            <description>&lt;p&gt;With the new servers and my server room shaping up, I&amp;rsquo;ve been working on
setting up ALL THE THINGS!  I just managed to set up live migration of
the KVM virtual machines I use for testing my &lt;a href=&#34;https://en.wikipedia.org/wiki/Free_and_open-source_software&#34;&gt;FLOSS&lt;/a&gt; projects.  Here
is a short writeup of that, just as a reminder for myself.&lt;/p&gt;
&lt;h2 id=&#34;checklist&#34;&gt;Checklist&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Make sure the libvirt versions are the same.  I tried setting up
migration between CentOS 7.2 and and Ubuntu LTS 16.04 which turned
out to be a mess of insurmountable incompatibilities.  I&amp;rsquo;ve now gone
back to run Ubuntu on everything and it all works fine.&lt;/li&gt;
&lt;li&gt;Set up NFS for the backend store of &lt;code&gt;/var/lib/libvirt/images&lt;/code&gt;.  Make
sure to export the share properly, I tried first with my ReadyNAS, but
couldn&amp;rsquo;t set up root access (defaulted to nobody).&lt;/li&gt;
&lt;li&gt;Set up VM disk caching=none&lt;/li&gt;
&lt;li&gt;Set up VM processor model=default&lt;/li&gt;
&lt;li&gt;Profit&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Good Luck! :)&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>With the new servers and my server room shaping up, I&rsquo;ve been working on
setting up ALL THE THINGS!  I just managed to set up live migration of
the KVM virtual machines I use for testing my <a href="https://en.wikipedia.org/wiki/Free_and_open-source_software">FLOSS</a> projects.  Here
is a short writeup of that, just as a reminder for myself.</p>
<h2 id="checklist">Checklist</h2>
<ol>
<li>Make sure the libvirt versions are the same.  I tried setting up
migration between CentOS 7.2 and and Ubuntu LTS 16.04 which turned
out to be a mess of insurmountable incompatibilities.  I&rsquo;ve now gone
back to run Ubuntu on everything and it all works fine.</li>
<li>Set up NFS for the backend store of <code>/var/lib/libvirt/images</code>.  Make
sure to export the share properly, I tried first with my ReadyNAS, but
couldn&rsquo;t set up root access (defaulted to nobody).</li>
<li>Set up VM disk caching=none</li>
<li>Set up VM processor model=default</li>
<li>Profit</li>
</ol>
<p>Good Luck! :)</p>
<h2 id="setting-up-nfs">Setting up NFS</h2>
<p>This is probably the easiest file sharing protocol to set up in UNIX.
On Ubuntu and Debian GNU/Linux you need to install the NFS packages
first:</p>
<pre><code>apt install nfs-common
</code></pre>
<p>Then simply list the directory and permissions in <code>/etc/exports</code> on the
server and run <code>exportfs -a</code>:</p>
<pre><code>/var/lib/libvirt/images		*(rw,sync,no_root_squash)
</code></pre>
<p>Yhen mount it on the client with:</p>
<pre><code>mount -t nfs server:/var/lib/libvirt/images/ /var/lib/libvirt/images/
</code></pre>
<p>For a more permanant setup, add the mount point to <code>/etc/fstab</code> and run
<code>mount -a</code>:</p>
<pre><code>server:/var/lib/libvirt/images/  /var/lib/libvirt/images/  nfs  defaults  0  0
</code></pre>
<p>To speed things up a bit you can install the <code>nfs-kernel-server</code> package
on the server.</p>
<p>To see what shares a server has, use <code>showmount -e server</code> &ndash; useful for
debugging.  Usually I forget running <code>exportfs</code> on the server.</p>
<h2 id="setting-up-virt-manager">Setting up virt-manager</h2>
<p>In principle not much needs to be changed on the system you want to
migrate <em>from</em>, only a few things need tweaking and libvirt will give
you warnings along the way.</p>
<p>First, make sure to change caching settings of the VM&rsquo;s backing store.
It is located in the Details view:</p>
<pre><code>IDE Disk 1 --&gt; Advanced --&gt; Performance --&gt; Cache mode: none
</code></pre>
<img class="center" src="/images/migrate-disk-nocache.png">
<p>Second, set CPU model to Hypervisor default:</p>
<pre><code>CPUs --&gt; Configuration --&gt; Model: Hypervisor Default
</code></pre>
<img class="center" src="/images/migrate-cpu-default.png">
<h2 id="profit">Profit!</h2>
<p>That&rsquo;s it, now live migration from your laptop to the server should work.</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>Fake RAID Adventures</title>
            <link>/2016/08/13/fake-raid-adventures/</link>
            <pubDate>Sat, 13 Aug 2016 15:59:36 +0000</pubDate>
            
            <guid>/2016/08/13/fake-raid-adventures/</guid>
            <description>&lt;p&gt;The other day I got my geeky hands on two old SuperMicro X8STI-F 1U
servers.  I plan to use them as build and embedded target emulation
servers for my &lt;a href=&#34;https://github.com/troglobit&#34;&gt;open source projects&lt;/a&gt;
as well as Minecraft server for my kids :)&lt;/p&gt;
&lt;img src=&#34;http://eitc.in/yahoo_site_admin/assets/docs/Supermicro_SuperServer_SC512L_small.324203750.JPG&#34;&gt;</description>
            <content type="html"><![CDATA[<p>The other day I got my geeky hands on two old SuperMicro X8STI-F 1U
servers.  I plan to use them as build and embedded target emulation
servers for my <a href="https://github.com/troglobit">open source projects</a>
as well as Minecraft server for my kids :)</p>
<img src="http://eitc.in/yahoo_site_admin/assets/docs/Supermicro_SuperServer_SC512L_small.324203750.JPG">
<p>During the install of Ubuntu Server 16.04 I realized I wanted try to use
the Intel PCH &ldquo;Fake Raid&rdquo; on the two 1 TB disks, RAID-1.  The support
Intel has in Linux and <code>mdadm</code> for their southbridge RAID controller is
really excellent!</p>
<p>I&rsquo;m not so sure though about the level of support that Debian/Ubuntu and
systemd have for RAID controllers though.  I&rsquo;ve run into problems with
how to shutdown, reboot, and power-off the servers with the RAID.</p>
<p>So far I&rsquo;ve made out that it is possible to power-off the servers with
the power button, but only straight after boot!  To make matters worse
it doesn&rsquo;t seem that Ubuntu sets the IMSM controller in &ldquo;idle&rdquo; state
when rebooting, so unmount (remount ro) fails.  I <em>think</em> this is the
recommended way:</p>
<pre><code>echo idle &gt; /sys/block/md127/md/sync_action
</code></pre>
<p>&hellip; for all the <code>md</code> devices found by globbing <code>/sys/block/md*</code> &hellip;</p>
<p>And then wait for state to become idle before unmounting and remounting
<code>/</code> read-only, as you have to do, but that doesn&rsquo;t seem to be done, so
when the system is booted again it always comes up in a degraded state
:-/</p>
<p>Anyhow, this little adventure taught me a few tricks worth remembering.</p>
<h3 id="show-status-of-intel-container">Show status of Intel Container</h3>
<p>This command lists member arrays and disks used in the container:</p>
<pre><code>user@example:~$ sudo mdadm -D /dev/md/imsm0
</code></pre>
<p>This command details RAID (firmware) capabilities:</p>
<pre><code>user@example:~$ sudo mdadm --detail-platform
       Platform : Intel(R) Matrix Storage Manager
        Version : 8.9.1.1002
    RAID Levels : raid0 raid1 raid10 raid5
    Chunk Sizes : 4k 8k 16k 32k 64k 128k
    2TB volumes : supported
      2TB disks : not supported
      Max Disks : 6
    Max Volumes : 2 per array, 4 per controller
 I/O Controller : /sys/devices/pci0000:00/0000:00:1f.2 (SATA)
</code></pre>
<h3 id="remove-a-disk-from-a-container">Remove a disk from a container</h3>
<p>Say disk <code>/dev/sda</code> is unhealthy in any of the member volumes, fail it
in all volumes, remove it, and zero out the superblock to re-add:</p>
<pre><code>user@example:~$ sudo mdadm /dev/md/Boot -f /dev/sda
user@example:~$ sudo mdadm /dev/md/Root -f /dev/sda
user@example:~$ sudo mdadm /dev/md/imsm0 -r /dev/sda
user@example:~$ sudo mdadm --zero-superblock --force /dev/sda
user@example:~$ sudo mdadm /dev/md/imsm0 -a /dev/sda
</code></pre>
<p>Here <code>Root</code> and <code>Boot</code> are my member volumes in the Intel PCH <code>imsm0</code>
container.  I use a small <code>Boot</code> partition for <code>/boot</code>, first partition
on the array, to be able to boot using GRUB from it.</p>
<p>If the above doesn&rsquo;t work for you (it didn&rsquo;t for me), try zeroing out
the complete device, which naturally will take a while, try smaller
blocksize (bs) if the following does not work:</p>
<pre><code>user@example:~$ sudo dd if=/dev/zero of=/dev/sda bs=100M
</code></pre>
<p>Then reboot and tell the Intel firmware (Ctrl-I maybe) at POST to add
the &ldquo;new&rdquo; disk to the array, or rather to the <em>container</em> to be correct.
When booting up the system again, Linux starts a background rebuild.</p>
<h3 id="check-satus-of-raid">Check satus of RAID</h3>
<p>Check progress of the rebuild with:</p>
<pre><code>user@example:~$ cat /proc/mdstat
Personalities : [raid1] [linear] [multipath] [raid0] [raid6] [raid5] [raid4] [raid10] 
md125 : active raid1 sda[1] sdb[0]
      2097152 blocks super external:/md127/0 [2/1] [_U]
        resync=DELAYED
      
md126 : active raid1 sda[1] sdb[0]
      974660608 blocks super external:/md127/1 [2/1] [_U]
  [===&gt;.................]  recovery = 17.5% (171137152/974660740) finish=103.4min speed=129396K/sec
          
md127 : inactive sda[1](S) sdb[0](S)
      5024 blocks super external:imsm
           
unused devices: &lt;none&gt;
</code></pre>
<p>Which is very useful with the <code>watch</code> command!</p>
<p>Good Luck!</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>Upgrade X1 Carbon BIOS from Linux</title>
            <link>/2016/07/03/upgrade-x1-carbon-bios-from-linux/</link>
            <pubDate>Sun, 03 Jul 2016 09:57:44 +0000</pubDate>
            
            <guid>/2016/07/03/upgrade-x1-carbon-bios-from-linux/</guid>
            <description>&lt;p&gt;This is a very brief writeup of how to upgrade the BIOS on a X1 Carbon
(G1) from Linux.  For more information on this topic there is always the
excellent &lt;a href=&#34;http://www.thinkwiki.org/wiki/BIOS_Upgrade&#34;&gt;ThinkWiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;OK, this post is more about creating the bootable USB stick needed, was
too much of a chicken to try &lt;a href=&#34;https://www.flashrom.org/Flashrom&#34;&gt;Flashrom&lt;/a&gt; &amp;hellip;&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This is a very brief writeup of how to upgrade the BIOS on a X1 Carbon
(G1) from Linux.  For more information on this topic there is always the
excellent <a href="http://www.thinkwiki.org/wiki/BIOS_Upgrade">ThinkWiki</a>.</p>
<p>OK, this post is more about creating the bootable USB stick needed, was
too much of a chicken to try <a href="https://www.flashrom.org/Flashrom">Flashrom</a> &hellip;</p>
<p>First, find your serial number, for querying Lenovo support (BIOS
upgrade) pages.</p>
<pre><code>sudo dmidecode -t system
</code></pre>
<p>The serial number is actually the combination of the Product Name and
the Serial Number.  E.g.</p>
<pre><code>Handle 0x000D, DMI type 1, 27 bytes
System Information
    Manufacturer: LENOVO
    Product Name: 3460CLG
    Version: ThinkPad X1 Carbon
    Serial Number: DEXFXX
    UUID: MMMMMMMM-NNNN-OOOO-PPPP-QQQQQQQQQQQQ
    Wake-up Type: Power Switch
    SKU Number: LENOVO_MT_3460
    Family: ThinkPad X1 Carbon
</code></pre>
<p>Which in my case means <code>3460CLG-DEXFXX</code> &hellip; actual serial have been
obfuscated, obviously.  Find the <a href="http://support.lenovo.com/se/en/products/Laptops-and-netbooks/ThinkPad-X-Series-laptops/ThinkPad-X1-Carbon-Type-34xx/3460/CLG-DEXFXX">Drivers &amp; Software</a> URL at
Lenovo (again, real serial number obfuscated in URL).</p>
<p>Navigate to the &ldquo;BIOS Update Bootable CD&rdquo;, which in my case turned out
to be called <code>g6uj21us.iso</code>.  Now we need to convert the ISO to an IMG
file to be able to <code>dd</code> it to a USB stick:</p>
<pre><code>./geteltorito.pl -o g6uj21us.img g6uj21us.iso
Booting catalog starts at sector: 20 
Manufacturer of CD: NERO BURNING ROM
Image architecture: x86
Boot media type is: harddisk
El Torito image starts at sector 27 and has 65536 sector(s) of 512 Bytes

Image has been written to file &quot;g6uj21us.img&quot;.
</code></pre>
<p>The link to the Perl script is available on the ThinkWiki page, or from
<a href="https://github.com/ksergey/thinkpad/blob/master/geteltorito.pl">GitHub</a>.
Now, insert a USB stick and unmount it manually, not using Ubuntu/Gnome
file manager&rsquo;s eject thingy!</p>
<p>Write to USB, mine was at <code>/dev/sdb</code> BUT YOURS MIGHT NOT BE, WATCH OUT!</p>
<pre><code>sudo dd if=g6uj21us.img of=/dev/sdb
65536+0 records in
65536+0 records out
33554432 bytes (34 MB, 32 MiB) copied, 16,5346 s, 2,0 MB/s
</code></pre>
<p>Reboot your laptop and select UEFI First in BIOS startup order, then F12
and select boot from Generic USB mass storage device.  Done.</p>
<p>Follow the instructions in the tool to upgrade your BIOS.</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>Redirecting Ports For Fun and Profit</title>
            <link>/2016/07/02/redirecting-tcp-udp-ports-for-fun-and-profit/</link>
            <pubDate>Sat, 02 Jul 2016 12:54:37 +0000</pubDate>
            
            <guid>/2016/07/02/redirecting-tcp-udp-ports-for-fun-and-profit/</guid>
            <description>&lt;p&gt;Recently I needed a simple TCP/UDP port redirector and stumbled upon
&lt;a href=&#34;https://serverfault.com/questions/252150/port-forwarding-on-linux-without-iptables/&#34;&gt;this Stackoverflow post&lt;/a&gt;.  As usual I wasn&amp;rsquo;t first wanting to this
without using &lt;code&gt;iptables&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There were several alternatives, but since my target was embedded with
limited amount of RAM and flash I wanted something really small.  So the
best fit turned out to be &lt;a href=&#34;https://github.com/troglobit/redir&#34;&gt;redir&lt;/a&gt;, which unfortunately only could
handle TCP connections.  This is what led me to write &lt;a href=&#34;https://github.com/troglobit/uredir&#34;&gt;uredir&lt;/a&gt; to
complement &lt;code&gt;redir&lt;/code&gt;.  Eventually I ended up adoptiing &lt;code&gt;redir&lt;/code&gt; as well,
which meant giving it a bit of a facelift and to give them both the same
look and feel.&lt;/p&gt;
&lt;p&gt;Currently they are two separate applications, which in some use-cases
can be beneficial (small size), but I may in the future transplant the
UDP functionality of &lt;code&gt;uredir&lt;/code&gt; into &lt;code&gt;redir&lt;/code&gt;.  We&amp;rsquo;ll see, right now though
I have several other &lt;a href=&#34;/projects/&#34;&gt;projects&lt;/a&gt; to attend to :-)&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Recently I needed a simple TCP/UDP port redirector and stumbled upon
<a href="https://serverfault.com/questions/252150/port-forwarding-on-linux-without-iptables/">this Stackoverflow post</a>.  As usual I wasn&rsquo;t first wanting to this
without using <code>iptables</code>.</p>
<p>There were several alternatives, but since my target was embedded with
limited amount of RAM and flash I wanted something really small.  So the
best fit turned out to be <a href="https://github.com/troglobit/redir">redir</a>, which unfortunately only could
handle TCP connections.  This is what led me to write <a href="https://github.com/troglobit/uredir">uredir</a> to
complement <code>redir</code>.  Eventually I ended up adoptiing <code>redir</code> as well,
which meant giving it a bit of a facelift and to give them both the same
look and feel.</p>
<p>Currently they are two separate applications, which in some use-cases
can be beneficial (small size), but I may in the future transplant the
UDP functionality of <code>uredir</code> into <code>redir</code>.  We&rsquo;ll see, right now though
I have several other <a href="/projects/">projects</a> to attend to :-)</p>
<h2 id="examples">Examples</h2>
<p>To redirect port 80 to a webserver listening on loopback port 8080,
remember to use sudo when using priviliged ports:</p>
<pre><code>sudo redir :80 127.0.0.1:8080
</code></pre>
<p>To run redir from a process monitor like <a href="https://github.com/troglobit/finit">Finit</a> or systemd, tell it
to not background itself and to only use the syslog for log messages:</p>
<pre><code>redir -n -s :80 127.0.0.1:8080
</code></pre>
<p>An <code>/etc/inetd.conf</code> line of the same looks very similar:</p>
<pre><code>http  stream  tcp  nowait  root  /usr/sbin/tcpd /usr/bin/redir -n -s -i 127.0.0.1:8080
</code></pre>
<p>When running multiple instances it can be useful to change how they
identify themselves.  The following starts an NNTP and a POP3 port
redirector, named accordingly.</p>
<pre><code>redir -I nntp www:119 netgate:119
redir -I pop3 ftp:110 netgate:110
</code></pre>
<p><code>uredir</code> works much in the same way, but also has a few UDP specific
features from the early days of the Internet:</p>
<pre><code>uredir 0.0.0.0:53 192.168.0.1:53
uredir 0.0.0.0:7                   # Echo mode
</code></pre>
<p>An <code>/etc/inetd.conf</code> example:</p>
<pre><code>snmp    dgram   udp wait    root    /usr/sbin/tcpd /usr/bin/uredir -i 127.0.0.1:16161
</code></pre>
<p>See the <code>README</code> and man pages for each of the two commands for more
information.  Enjoy!</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>Using netcat to test your Internet daemon</title>
            <link>/2016/04/21/using-netcat-to-test-your-internet-daemon/</link>
            <pubDate>Thu, 21 Apr 2016 14:21:49 +0000</pubDate>
            
            <guid>/2016/04/21/using-netcat-to-test-your-internet-daemon/</guid>
            <description>So you&amp;rsquo;re having a problem with the Internet daemon you wrote. You&amp;rsquo;re convinced the firewall, or some other magic, in your modern Linux distribution is eating your packets.
No.
First, make sure your daemon is actually running and has successfully bound to the address and port in question:
sudo netstat -atnup  If your application is not listed there you have a problem with it binding its server socket. Check the return values from bind().</description>
            <content type="html"><![CDATA[<p>So you&rsquo;re having a problem with the Internet daemon you wrote.  You&rsquo;re
convinced the firewall, or some other magic, in your modern Linux
distribution is eating your packets.</p>
<p>No.</p>
<p>First, make sure your daemon is actually running and has successfully
bound to the address and port in question:</p>
<pre><code>sudo netstat -atnup
</code></pre>
<p>If your application is not listed there you have a problem with it
binding its server socket.  Check the return values from <code>bind()</code>.</p>
<p>If you&rsquo;re still suspecting the firewall, or some other magic, test your
theory with netcat.  First start a server, with your relevant address
and port, remember you need to be root, or have <code>CAP_NET_ADMIN</code>, to use
ports &lt;= 4096:</p>
<pre><code>nc -l -u -p 9999
</code></pre>
<p>Here we bind to 0.0.0.0:9999. Now, start a client to test if the
server can receive any data:</p>
<pre><code>nc -u 127.0.0.1 9999
</code></pre>
<p>Type something on the console and press enter to send it to the server.
If you receive the data then there&rsquo;s no magic, execpt from bugs in you
application, preventing your appplication from working.</p>
]]></content>
        </item>
        
        <item>
            <title>The key to successful boot</title>
            <link>/2016/04/11/the-key-to-successful-boot/</link>
            <pubDate>Mon, 11 Apr 2016 01:28:27 +0000</pubDate>
            
            <guid>/2016/04/11/the-key-to-successful-boot/</guid>
            <description>&lt;p&gt;How do you know when your UNIX service (daemon) is ready?  Simple, it
has created a PID file, signalling to you how to reach it.  Usually this
file is created as &lt;code&gt;/var/run/daemon.pid&lt;/code&gt;, or &lt;code&gt;/run/daemon.pid&lt;/code&gt;, and has
the PID of &lt;code&gt;daemon&lt;/code&gt; as the first and only data in the file.  This data
may or may not have a UNIX line ending.&lt;/p&gt;
&lt;p&gt;Only trouble is: most UNIX daemons do not re-assert that PID file
properly on &lt;code&gt;SIGHUP&lt;/code&gt; (if they support &lt;code&gt;SIGHUP&lt;/code&gt; that is).  When I send
&lt;code&gt;SIGHUP&lt;/code&gt; to a daemon I expect it to re-read its &lt;code&gt;/etc/daemon.conf&lt;/code&gt; and
resume operation, basically a quicker way than stop/start.&lt;/p&gt;
&lt;p&gt;Annoyingly however, most daemons do not signal us back to tell us when
they&amp;rsquo;re done with the &lt;code&gt;SIGHUP&lt;/code&gt;.  Naturally a new movement has risen that
says we should all instrument our daemons with D-bus &amp;hellip; I say no.
Simply touch the PID file instead.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>How do you know when your UNIX service (daemon) is ready?  Simple, it
has created a PID file, signalling to you how to reach it.  Usually this
file is created as <code>/var/run/daemon.pid</code>, or <code>/run/daemon.pid</code>, and has
the PID of <code>daemon</code> as the first and only data in the file.  This data
may or may not have a UNIX line ending.</p>
<p>Only trouble is: most UNIX daemons do not re-assert that PID file
properly on <code>SIGHUP</code> (if they support <code>SIGHUP</code> that is).  When I send
<code>SIGHUP</code> to a daemon I expect it to re-read its <code>/etc/daemon.conf</code> and
resume operation, basically a quicker way than stop/start.</p>
<p>Annoyingly however, most daemons do not signal us back to tell us when
they&rsquo;re done with the <code>SIGHUP</code>.  Naturally a new movement has risen that
says we should all instrument our daemons with D-bus &hellip; I say no.
Simply touch the PID file instead.</p>
<p>Yeah, one could argue the natural (and pure) thing would be to add a
UNIX domain socket and use a <code>daemonctl</code> client instead of <code>SIGHUP</code> +
PID file &hellip; but for this little mechanism of signalling back to the
user that a daemon is ready for business, it&rsquo;s too much overhead.</p>
<p>My own Init replacement, <a href="/finit.html">Finit</a>, is being fitted with a
system to synchronize services with events.  Eg. wait for one service to
start, an interface to be created, or come up, or have an address set,
or a gateway to be set &hellip; and so on.</p>
<p>In the case where process B depends on process A you do not want to
start process B before process A is actually up and running.  Simply
starting process A is rarely sufficient &ndash; starting B too soon can
lead to B terminating prematurely because it cannot yet connect to A.</p>
<p>One may argue that B should try and reconnect, or that A and B should
have some other means of synchronizing.  Sure, when dependencies are
clear and developers create cooperating services this works great.  But
this is rarely the case in real life.  Services are usually developed by
multiple teams, scattered across both time and distance.  So what we&rsquo;re
left with is finding the least common denominator and use that for our
synchronization needs.</p>
<p>Waiting for daemon A to create its PID file before we start process B is
enough.  When the system is reconfigured &ndash; many services may need to be
restarted &ndash; we can shake the dependency tree and send <code>SIGHUP</code> to all
daemons in the correct order.  The only patching required is to ensure
that all daemons re-assert their PID files after having reloaded their
respective config files.</p>
<p>More on the changes in Finit3 and the upcoming new dependency systems
in a later article.  Hopefully this will have made you interested!</p>]]></content>
        </item>
        
        <item>
            <title>Lecture from the UNIX beards</title>
            <link>/2016/04/04/lecture-from-the-unix-beards/</link>
            <pubDate>Mon, 04 Apr 2016 00:14:28 +0000</pubDate>
            
            <guid>/2016/04/04/lecture-from-the-unix-beards/</guid>
            <description>After the rm -rf /* disaster that hit me a couple of weeks ago I&amp;rsquo;ve been rebuilding my setup, restoring the few files I&amp;rsquo;ve had backed up, and collecting advice from the elders.
Turns out there are a few tricks that can save your home directory from accidents like mine. The first one is rather obvious, but I&amp;rsquo;m writing it down anyway:
 Keep separate accounts. If possible, use separate accounts (with different permissions obviously) for different projects.</description>
            <content type="html"><![CDATA[<p>After the <code>rm -rf /*</code> disaster that hit me a couple of weeks ago I&rsquo;ve
been rebuilding my setup, restoring the few files I&rsquo;ve had backed up,
and collecting advice from the elders.</p>
<p>Turns out there are a few tricks that can save your home directory from
accidents like mine.  The first one is rather obvious, but I&rsquo;m writing
it down anyway:</p>
<ol>
<li>Keep separate accounts.  If possible, use separate accounts (with
different permissions obviously) for different projects.  I had my
private life and work life mixed up, so that&rsquo;s a big no-no to begin
with.</li>
<li>Create a file called <code>-t</code> in your <code>$HOME</code></li>
</ol>
<p>The last bit of advice I&rsquo;d heard about earlier, about ten years earlier,
but completely forgotten about.  The trick is to create a file that will
be interpreted by <code>rm</code> as an unknown option.  For GNU <code>rm</code> the <code>-t</code> is a
good choice.</p>
<p>Here are two ways of creating such a file:</p>
<pre><code>cd
touch ./-t
</code></pre>
<p>or, the perhaps easier to remember:</p>
<pre><code>touch -- -t
</code></pre>
<p>Cheers!</p>
]]></content>
        </item>
        
        <item>
            <title>Disaster Recovery</title>
            <link>/2016/03/24/disaster-recovery/</link>
            <pubDate>Thu, 24 Mar 2016 22:39:00 +0000</pubDate>
            
            <guid>/2016/03/24/disaster-recovery/</guid>
            <description>&lt;p&gt;Days like these inconspicuously start out just like any other day,
except on days like these you accidentally manage to erase &lt;code&gt;$HOME&lt;/code&gt; and
have no real backup to rely on &amp;hellip; Maundy Thursday will forever be Black
Thursday for me, from now on.&lt;/p&gt;
&lt;p&gt;Best thing your can do, after cursing at yourself constantly for a
couple of hours, is to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Come up with a useful backup and &lt;em&gt;restore&lt;/em&gt; strategy&lt;/li&gt;
&lt;li&gt;Read up on undeletion tools for Ext4&lt;/li&gt;
&lt;li&gt;Blog about it, naturally&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;BUT FIRST &amp;ndash; QUICK &amp;ndash; UNMOUNT OR POWER-OFF YOUR COMPUTER &amp;ndash; PULL OUT THE
BATTERY &amp;ndash; AND STEP AWAY FROM THE COMPUTER!  Must protect the partition
from being accidentally written to &amp;ndash; I completely fumbled this step, so
take heed young people!&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Days like these inconspicuously start out just like any other day,
except on days like these you accidentally manage to erase <code>$HOME</code> and
have no real backup to rely on &hellip; Maundy Thursday will forever be Black
Thursday for me, from now on.</p>
<p>Best thing your can do, after cursing at yourself constantly for a
couple of hours, is to:</p>
<ol>
<li>Come up with a useful backup and <em>restore</em> strategy</li>
<li>Read up on undeletion tools for Ext4</li>
<li>Blog about it, naturally</li>
</ol>
<p>BUT FIRST &ndash; QUICK &ndash; UNMOUNT OR POWER-OFF YOUR COMPUTER &ndash; PULL OUT THE
BATTERY &ndash; AND STEP AWAY FROM THE COMPUTER!  Must protect the partition
from being accidentally written to &ndash; I completely fumbled this step, so
take heed young people!</p>
<p>Now calm down and act like an engineer again.</p>
<p>There exist two neat tools, three if you count the more hard core
<code>debugfs</code>:</p>
<ul>
<li><a href="http://extundelete.sourceforge.net/">extundelete</a></li>
<li><a href="http://ext4magic.sourceforge.net/ext4magic_en.html">ext4magic</a></li>
</ul>
<p>Both have been around a while, and both are capable of restoring all
files.  See their respective home pages for details.</p>
<p>My system used LVM, of course, to make things a bit harder.  That&rsquo;s why
I&rsquo;m documenting my steps here:</p>
<ol>
<li>Remove disk from lappy</li>
<li>Prepare to connect using USB cradle to workstation, <em>prepare</em> don&rsquo;t
do it yet!  I did the next few steps as root on my workstation,
that&rsquo;s right, I didn&rsquo;t care anymore at this point.  The world may as
well burn!</li>
<li>You haven&rsquo;t connected the disk yet, right stupid?  Most systems today
have cool features like automount that would cause the journal to be
replayed &ndash; WE DO NOT WANT THAT OK? OK!</li>
</ol>
<p>You need the lvm tools:</p>
<pre><code>apt-get install lvm2
vgscan
vgchange -ay ubuntu-vg
lvs
</code></pre>
<p>The last command should list your logical volume group(s), in my case
labled <code>ubuntu-vg</code>.  To be able to run <code>extundelete</code> or <code>ext4magic</code> on
the partition you have to mount the partition, <em>read-only</em> needless to
say:</p>
<pre><code>mkdir /rescue
mount -o ro /dev/ubuntu-vg/root /rescue
</code></pre>
<p>Now we try some fairy dust:</p>
<pre><code>ext4magic /dev/ubuntu-vg/root -r
</code></pre>
<p>OK, so let&rsquo;s see:</p>
<pre><code>ls -l RECOVERDIR/
</code></pre>
<p>The results between <code>ext4magic</code> and <code>extundelete</code> may vary, so try them
both out, test different options, and maybe even look at <code>debugfs</code>,
we&rsquo;re desperate after all.</p>
<pre><code>extundelete /dev/ubuntu-vg/root --restore-all
ls -l RECOVERED_FILES
</code></pre>
<p>If there&rsquo;s a LOT of files you may have some luck narrowing down the
result using the <code>--after DATE</code> option &hellip; where <code>DATE</code> is the number
of seconds since the UNX epoch:</p>
<pre><code>extundelete /dev/ubuntu-vg/root --restore-all --after 1458802800
ls -l RECOVERED_FILES
</code></pre>
<p>I found my magic number using</p>
<pre><code>date -d &quot;Mar 24 8:00 2016&quot; +%s
</code></pre>
<p>Well, as I said, I didn&rsquo;t turn off my computer in time. Instead I took
the braindead option of starting to google for solutions.  So all my
files (with proper filenames) turned out to contain only cached files
from the browser &ndash; reclaiming the blocks goes quick, so watch out kids.</p>]]></content>
        </item>
        
        <item>
            <title>Testing multicast with Docker</title>
            <link>/2016/03/07/testing-multicast-with-docker/</link>
            <pubDate>Mon, 07 Mar 2016 01:37:04 +0000</pubDate>
            
            <guid>/2016/03/07/testing-multicast-with-docker/</guid>
            <description>&lt;p&gt;Recently &lt;a href=&#34;https://github.com/troglobit/pimd/issues/70&#34;&gt;issue #70&lt;/a&gt; was
reported to &lt;a href=&#34;https://github.com/troglobit/pimd/&#34;&gt;pimd&lt;/a&gt;.  That number of
issues reported is cool in itself, but this was a question about
&lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; and &lt;code&gt;pimd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Up until that point I had only read about this new fad, and played
around with it a bit &lt;a href=&#34;http://www.westermo.com&#34;&gt;at work&lt;/a&gt; for use as a
stable build environment for cross-compiling.  I had no idea people
would want to use a Docker container as a multicast sink.  Basically I
was baffled.&lt;/p&gt;
&lt;p&gt;The reporter used a Java based tool but simply couldn&amp;rsquo;t get things to
work properly with &lt;code&gt;pimd&lt;/code&gt; running on the host:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                eth0
 MC sender ---&amp;gt; [ Server host ]    &amp;lt;--- router running pimd
                       |
               ________|________
              /     docker0     \   &amp;lt;--- bridge    ______
             /         |         \                |      |   &amp;lt;--- MC receiver
  __________/          |          \_______________|______|_____
 \                     |                            /         /
  \                     `------------------&amp;gt;-------&#39;         /
   \________________________________________________________/
      Container ship
&lt;/code&gt;&lt;/pre&gt;</description>
            <content type="html"><![CDATA[<p>Recently <a href="https://github.com/troglobit/pimd/issues/70">issue #70</a> was
reported to <a href="https://github.com/troglobit/pimd/">pimd</a>.  That number of
issues reported is cool in itself, but this was a question about
<a href="https://www.docker.com">Docker</a> and <code>pimd</code>.</p>
<p>Up until that point I had only read about this new fad, and played
around with it a bit <a href="http://www.westermo.com">at work</a> for use as a
stable build environment for cross-compiling.  I had no idea people
would want to use a Docker container as a multicast sink.  Basically I
was baffled.</p>
<p>The reporter used a Java based tool but simply couldn&rsquo;t get things to
work properly with <code>pimd</code> running on the host:</p>
<pre><code>                eth0
 MC sender ---&gt; [ Server host ]    &lt;--- router running pimd
                       |
               ________|________
              /     docker0     \   &lt;--- bridge    ______
             /         |         \                |      |   &lt;--- MC receiver
  __________/          |          \_______________|______|_____
 \                     |                            /         /
  \                     `------------------&gt;-------'         /
   \________________________________________________________/
      Container ship
</code></pre>
<p>We tried several approaches, but nothing seemed to help.  This became a
bit of blocker for the <code>pimd</code> v2.3.2 release and I admittedly lost a bit
of sleep over this.  So finally this weekend, I sat down and whipped my
old <a href="https://github.com/troglobit/mcjoin/">mcjoin</a> tool up into shape.
I&rsquo;ve relied on it for years, but it couldn&rsquo;t send or receive packets,
until now.</p>
<p>Running docker v1.5 in Ubuntu 15.10 I ran this, with <code>pimd</code> on the host
and <code>mcjoin</code> as a multicast sink for 250 groups in a container:</p>
<pre><code>cd ~/Troglobit/mcjoin
docker run -t -i -u `id -u`:`id -g` -v $HOME:$HOME -w $PWD troglobit/toolchain:latest ./mcjoin 225.1.2.3+250
^C
Received total: 2500 packets
</code></pre>
<p>The <code>pimd</code> and the multicast sender runs on my host, which should not
matter since Linux still has to route the traffic to the <code>docker0</code>
interface.  Also, without setting the TTL to 2 (or greater) the
container receives no traffic at all.  Here&rsquo;s what I run in another
terminal on my host:</p>
<pre><code>./mcjoin -s -t 2 -c 10 225.1.2.3+250
</code></pre>
<p>Although <code>pimd</code> is a little slow to register and install the forwarding
rules in the kernel, it sure enough worked on the first attempt! \o/</p>
<p>This is my first real application level experience with Docker, but it
is sure not the last.  Docker is a truly revolutionary new tool!</p>]]></content>
        </item>
        
        <item>
            <title>Multicast testing, made easy!</title>
            <link>/2016/03/07/multicast-testing/</link>
            <pubDate>Mon, 07 Mar 2016 01:06:02 +0000</pubDate>
            
            <guid>/2016/03/07/multicast-testing/</guid>
            <description>&lt;p&gt;For the better part of the last ten years I have been working with
multicast in one way or another.  I&amp;rsquo;ve used many different tools for
testing, but on most systems I usually resort to &lt;code&gt;ping(1)&lt;/code&gt; and
&lt;code&gt;tcpdump(1)&lt;/code&gt;, which are quite sufficient.  However, you often need to
tell bridges (switches) to open up multicast in your general direction
for your pings to get through, so you need to send an IGMP &amp;ldquo;join&amp;rdquo; first.&lt;/p&gt;
&lt;p&gt;Way back in 2006 I stumbled upon a neat tool called &lt;code&gt;mcjoin&lt;/code&gt;, written by
David Stevens and announced in
&lt;a href=&#34;https://lkml.org/lkml/2004/8/5/143&#34;&gt;this posting to LKML&lt;/a&gt;.  I started
improving and adding features to it over the years.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>For the better part of the last ten years I have been working with
multicast in one way or another.  I&rsquo;ve used many different tools for
testing, but on most systems I usually resort to <code>ping(1)</code> and
<code>tcpdump(1)</code>, which are quite sufficient.  However, you often need to
tell bridges (switches) to open up multicast in your general direction
for your pings to get through, so you need to send an IGMP &ldquo;join&rdquo; first.</p>
<p>Way back in 2006 I stumbled upon a neat tool called <code>mcjoin</code>, written by
David Stevens and announced in
<a href="https://lkml.org/lkml/2004/8/5/143">this posting to LKML</a>.  I started
improving and adding features to it over the years.</p>
<p>Now, my interest and fascination with multicast only grew with time,
and despite elegant tools like <code>mgen(1)</code> and <code>omping(1)</code> I was never
quite happy.</p>
<p>When releasing SMCRoute v2.1.0 recently, and currently working on the
pimd v2.3.2 release, I was so tired of having to do so many manual steps
just to verify correct operation of a routing daemon.  Therefore I spent
the better part of the past weekend fixing up my old mcjoin tool.</p>
<p>I wanted a reliable, simple, and UNIX-y tool to just test things for me.
So I cleaned up the old mcjoin project, first by migrating it from the
toolbox repo, removing confusing command line options, improving and
simplifying the syntax, and then I added send/receive capabilities.</p>
<p>I&rsquo;ve been meaning to get around to this for ages, and now it seems I had
finally had enough.  So here it is, v2.0:</p>
<p><strong>Project</strong>: <a href="https://github.com/troglobit/mcjoin/">https://github.com/troglobit/mcjoin/</a><br>
<strong>ChangeLog</strong>: <a href="https://github.com/troglobit/mcjoin/releases/tag/v2.0">https://github.com/troglobit/mcjoin/releases/tag/v2.0</a></p>
<p>Most of the time I simply want to see a resulting IGMP join message in
Wireshark, watch a group entry pop up in a switch&rsquo;s FDB or a routing
daemon&rsquo;s forwarding table.  So, join is the default operation, and also
continues to be the name of the tool.  My favourite testing group is set
as the default, 225.1.2.3, so you only need to start the tool and you&rsquo;re
off.  To send to the same default group (225.1.2.3), simply add <code>-s</code> to
the sender side.</p>
<pre><code>sender$ mcjoin -s
^C
sender$

receiver$ mcjoin
joined group 225.1.2.3 on eth0 ...
..................................................................^C
Received total: 66 packets
receiver$
</code></pre>
<p>If you ever need anything else, e.g. routing multicast, there&rsquo;s even a
man page.  It mentions setting the TTL and other such nastiness :)</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>En vanlig dag på jobbet (SWEDISH)</title>
            <link>/2015/11/13/en-vanlig-dag-pa-jobbet-swedish/</link>
            <pubDate>Fri, 13 Nov 2015 20:57:29 +0000</pubDate>
            
            <guid>/2015/11/13/en-vanlig-dag-pa-jobbet-swedish/</guid>
            <description>I vanlig ordning bashar vi DNS på jobbet, pga ofungerar hårt över VPN för de flesta. (Ja vi kör alla Linux, utom cheferna som envisas med att använda något ur gamla testamentet.) Här följer ett utdrag från vår IRC:
14:32 &amp;lt;n00b&amp;gt; Success! Äntligen fick jag ordning på DNS via guest wifi -&amp;gt; vpn -&amp;gt; office network. Firar med att skapa lite irc noise. :D 14:32 &amp;lt; rooth&amp;gt;n00b: Du har väl fått den distribuerade /etc/hosts filen?</description>
            <content type="html"><![CDATA[<p>I vanlig ordning bashar vi DNS på jobbet, pga ofungerar <em>hårt</em> över VPN
för de flesta. (Ja vi kör alla Linux, utom cheferna som envisas med att
använda något ur gamla testamentet.) Här följer ett utdrag från vår IRC:</p>
<pre><code>14:32 &lt;n00b&gt; Success! Äntligen fick jag ordning på DNS via guest
      wifi -&gt; vpn -&gt; office network. Firar med att skapa lite irc noise. :D
14:32 &lt; rooth&gt;n00b: Du har väl fått den distribuerade /etc/hosts filen?
14:33 &lt; rooth&gt; !dns paperboy
14:33 &lt; |master|&gt; rooth: server028.intranet.example.com. 192.168.130.72 lazyboy lazyboy.intranet.example.com
14:33 &lt; rbot&gt; rooth: lazyboy: 192.168.130.72
14:33 &lt; rooth&gt; bottarna hjälper dig annars =)
14:34 &lt;n00b&gt; hosts file is so... &quot;unclean&quot; ;)
14:35 &lt;n00b&gt; Men bra att veta att bottar kan hjälpa. :)
14:37 &lt; rooth&gt; n00b: Förstår inte alls vad du menar... =)
14:37 &lt; rooth&gt; n00b: Det finns två skolor på bygget, dns vs hosts.
14:38 &lt;n00b&gt; Oh! Så jag har tydligen valt sida nu då. :D
14:40 &lt; rooth&gt; n00b: dns = dark-side.
14:50 &lt; lazzer&gt; n00b: ;-)
14:52 &lt; rooth&gt; n00b: s#local dns cache#/etc/hosts# =)
14:52 &lt; moggen&gt; hehe HOSTS.TXT revival
14:52 &lt; moggen&gt; var så det började en gång i tiden
14:52 &lt; moggen&gt; innan man uppfann DNS
14:53 &lt; lazzer&gt; Vi måste komma på ett bra system för att dela våra hosts-filer.
14:53 &lt;n00b&gt; A long time ago, in a network far far away...
14:53 &lt;n00b&gt; git repo for shared hosts fil, annan conf?
14:57 &lt;n00b&gt; Finns det någon slags share-mekanism vad gäller grundläggande test
             setup btw? Eller är det för svårt att få till generell grund conf
             för lokal test setup?
15:38 &lt; troglobit&gt; Åh, har ni öppnat DNS-lådan! LOL =)
15:38  * troglobit kör med hosts-fil, såklart ;)
15:40 &lt; lazzer&gt; troglobit: bra val ;-=
15:44 &lt; rooth&gt; troglobit: Jag tyckte det var dags =)
16:00 &lt; moggen&gt; troglobit: upptäckte när jag jobbade hemma att man får &quot;fel&quot; IP på
                web.example.com om man inte sitter på kontors-IP... hosts ftw.
16:22 &lt; troglobit&gt; moggen: Härligt att se att du sällat dig till den enda sanna läran ;)
16:59 &lt; rooth&gt; =)
17:06 &lt; wkz&gt; moggen,troglobit : another one bites the dust... :)
18:12 &lt; n00b2&gt; Helgen är räddad vpn-dosan återfunnen
20:19 &lt; troglobit&gt; wkz: DNS är en kvarleva av ett döende system. Kom, anslut dig
                   till oss istället, vi kämpar för rättvisa, säkerhet, och fria
                   statiska /etc/hosts-uppdateringar i galaxen!
20:19 &lt; wkz&gt; troglobit: NEVER!
20:20 &lt; troglobit&gt; wkz: *Feel* the power of the dark side!
20:20 &lt; wkz&gt; troglobit: LOL
20:20 &lt; troglobit&gt; wkz: :-D
</code></pre>
<p>Some names have been changed to protect the innocent, the rest are Sith
Lords or Jedi Knights.</p>
]]></content>
        </item>
        
        <item>
            <title>Awesome: Changing Next/Prev Tune in Spotify</title>
            <link>/2015/11/10/awesome-changing-next-slash-prev-tune-in-spotify/</link>
            <pubDate>Tue, 10 Nov 2015 12:14:09 +0000</pubDate>
            
            <guid>/2015/11/10/awesome-changing-next-slash-prev-tune-in-spotify/</guid>
            <description>Back to using the Awesome WM in Ubuntu. This time I&amp;rsquo;m setting up everything from scratch and first up is fixing keybindings to control my main music player: Spotify!
Edit your ~/.config/awesome/rc.lua with Emacs (obviously). If you do not have an rc file, simply copy the system /etc/xdb/awesome/rc.lua:
globalkeys = awful.util.table.join(globalkeys, awful.key({}, &amp;quot;XF86AudioRaiseVolume&amp;quot;, function () awful.util.spawn(&amp;quot;amixer -D pulse sset Master 5%+&amp;quot;, false) end), awful.key({}, &amp;quot;XF86AudioLowerVolume&amp;quot;, function () awful.util.spawn(&amp;quot;amixer -D pulse sset Master 5%-&amp;quot;, false) end), awful.</description>
            <content type="html"><![CDATA[<p>Back to using the <a href="http://awesome.naquadah.org/">Awesome WM</a> in Ubuntu.
This time I&rsquo;m setting up everything from scratch and first up is fixing
keybindings to control my main music player: Spotify!</p>
<p>Edit your <code>~/.config/awesome/rc.lua</code> with Emacs (obviously).  If you do
not have an rc file, simply copy the system <code>/etc/xdb/awesome/rc.lua</code>:</p>
<pre><code>globalkeys = awful.util.table.join(globalkeys,
           awful.key({}, &quot;XF86AudioRaiseVolume&quot;, function () awful.util.spawn(&quot;amixer -D pulse sset Master 5%+&quot;, false) end),
       awful.key({}, &quot;XF86AudioLowerVolume&quot;, function () awful.util.spawn(&quot;amixer -D pulse sset Master 5%-&quot;, false) end),
       awful.key({}, &quot;XF86AudioMute&quot;, function() awful.util.spawn('amixer -D pulse sset Master 1+ toggle') end),
       awful.key({ }, &quot;XF86AudioNext&quot;, function () awful.util.spawn(&quot;dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next&quot;)end),
       awful.key({ }, &quot;XF86AudioPrev&quot;, function () awful.util.spawn(&quot;dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous&quot;)end),
       awful.key({ }, &quot;XF86AudioPlay&quot;, function () awful.util.spawn(&quot;dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause&quot;)end),
       awful.key({ }, &quot;XF86AudioStop&quot;, function () awful.util.spawn(&quot;dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop&quot;)end))
root.keys(globalkeys)
</code></pre>
<p>That&rsquo;s it.</p>
]]></content>
        </item>
        
        <item>
            <title>Stray Puppies</title>
            <link>/2015/11/07/stray-puppies/</link>
            <pubDate>Sat, 07 Nov 2015 02:32:12 +0000</pubDate>
            
            <guid>/2015/11/07/stray-puppies/</guid>
            <description>Sometimes I just cannot help myself. It&amp;rsquo;s like finding a stray puppy, or abandonded kitten &amp;hellip;
&amp;hellip; I recently decided to adopt mini-snmpd since the original upstream site had passed into the great beyond. At this point in my life almost everyone I know can tell you I have no warm fuzzy feels for SNMP, at all. So why did I even consider this to begin with?!
Well, I have to confess that there are certain things that SNMP can be really useful for.</description>
            <content type="html"><![CDATA[<p>Sometimes I just cannot help myself.  It&rsquo;s like finding a stray puppy,
or abandonded kitten &hellip;</p>
<p>&hellip; I recently decided to adopt <a href="/mini-snmpd.html">mini-snmpd</a> since the
<a href="http://members.aon.at/linuxfreak/linux/mini_snmpd.html">original upstream</a> site had passed into the great beyond.  At this
point in my life almost everyone I know can tell you I have no warm
fuzzy feels for SNMP, at all.  So why did I even consider this to begin
with?!</p>
<p>Well, I have to confess that there are certain things that SNMP can be
really useful for.  Most of it is remote monitoring, and since I work
with embedded systems a lot, SNMP can be quite a handy tool.</p>
<p>I first ran into mini-snmpd when I created <a href="https://github.com/troglobit/troglos">TroglOS</a>, by forking
<a href="https://github.com/hno/miniroot">miniroot</a>, and what struck me immediately was how small and simple
it was.  The code was also in reasonably good shape, so it had passed my
initial quality control.  Suddenly one day I could no longer download it
when building TroglOS, so I had to do something!</p>
<p>My plans for mini-snmpd are quite humble.  I&rsquo;m currently cleaning it up
a bit, adding configure script for all optional features, testing
portability to FreeBSD and <a href="https://github.com/javiplx/mini-snmpd">integrating (good) patches</a> from various
sources scattered around the web.</p>
<p>I will not add lots of new features, but as always I&rsquo;m your humble patch
monkey, so if you <a href="https://github.com/troglobit/mini-snmpd">submit a pull reqeust</a> at GitHub it&rsquo;ll probably be
merged and put into a release.</p>
<p>Cheers</p>
]]></content>
        </item>
        
        <item>
            <title>Summer of Code 2015</title>
            <link>/2015/09/09/summer-of-code-2015/</link>
            <pubDate>Wed, 09 Sep 2015 21:49:13 +0000</pubDate>
            
            <guid>/2015/09/09/summer-of-code-2015/</guid>
            <description>Summer is now slowly fading away, and what a summer it has been here in Sweden! For someone who isn&amp;rsquo;t a fan of the summer heat it has been an awesome time for brain work, and in my case work on my open source projects! :-)
Due to my not really taking much vacation previous years I had saved up for ten weeks (10) this year! It was really worth it, and for the first time in many years I actually feel rested.</description>
            <content type="html"><![CDATA[<p>Summer is now slowly fading away, and what a summer it has been here in
Sweden!  For someone who isn&rsquo;t a fan of the summer heat it has been an
awesome time for brain work, and in my case work on my open source
projects! :-)</p>
<p>Due to my not really taking much vacation previous years I had saved up
for ten weeks (10) this year!  It was really worth it, and for the first
time in many years I actually feel rested.</p>
<p>So what&rsquo;s new?  Well, this summer I&rsquo;ve released a <strong>major</strong> upgrade to
<a href="/pimd.html">pimd</a>, which received <em>PIM-SSM</em> and full <em>IGMPv3</em> support!
<a href="/inadyn.html">Inadyn</a> has seen two releases, one feature release with
support for Windows and improved support for custom DDNS providers, and
one bugfix release (today).  My own FTP/TFTP server <a href="/uftpd.html">uftpd</a>
has also got a bit of an overhaul to improve both concurrency and
improved support for various popular clients (Firefox and wget) &ndash; I
released v1.9 of uftpd as a birthday present to myself! ;-)</p>
<p>I&rsquo;ve done some other minor work as well, on the &ldquo;new&rdquo; <a href="https://github.com/troglobit/netcalc">netcalc</a>, IPv6
and IPv4 subnet calculator, as well as <a href="https://github.com/troglobit/watchdogd">watchdogd</a> and <a href="/finit.html">finit</a>.  The
latter two have however not seen any releases yet, but both have <em>major</em>
v2.0 releases with lots of very interesting features that are going to
be revealed soon!</p>
<p>For watchdogd several big improvements to system monitoring (loadavg,
file descriptors, RAM) as well as a very advanced process monitoring
(instrumentation) API is being added.  Finit however is the crown in
making, it is being converted to support multiple instances of services
and to be fully event driven.  I&rsquo;m extremely excited about Finit!</p>
<p>Oh, and don&rsquo;t worry &hellip; I did manage to get some actual real downtime on
the beach as well! ;-)</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->
]]></content>
        </item>
        
        <item>
            <title>HowTo: Using -lite with a GIT-based application</title>
            <link>/2015/07/02/howto-using-lite-with-a-git-based-application/</link>
            <pubDate>Thu, 02 Jul 2015 17:11:55 +0000</pubDate>
            
            <guid>/2015/07/02/howto-using-lite-with-a-git-based-application/</guid>
            <description>&lt;p&gt;Years ago while looking for a fast &lt;a href=&#34;https://en.wikipedia.org/wiki/Init&#34;&gt;init&lt;/a&gt; replacement for &lt;a href=&#34;http://westermo.com/&#34;&gt;work&lt;/a&gt;,
I found &lt;a href=&#34;http://helllabs.org/finit/&#34;&gt;Finit&lt;/a&gt;.  Originally written by &lt;a href=&#34;https://github.com/cmatsuoka&#34;&gt;Claudio Matsuoka&lt;/a&gt; to act
as a drop-in replacement for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Asus_Eee_PC&#34;&gt;Asus EeePC&lt;/a&gt; &lt;a href=&#34;http://wiki.eeeuser.com/boot_process:the_boot_process&#34;&gt;fastinit&lt;/a&gt;, &lt;em&gt;&amp;ldquo;gaps
filled with frog DNA …&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Until I found Finit I had always been in awe of those venturing into the
realm of &lt;a href=&#34;http://0pointer.net/blog/&#34;&gt;PID 1&lt;/a&gt;.  However, learning from the simplicity of Claudio&amp;rsquo;s
code I realized that although PID 1 at times is indistinguishable from
magic, it is really not that hard to master.  &lt;a href=&#34;https://github.com/troglobit/finit&#34;&gt;My version of Finit&lt;/a&gt;
is available on GitHub.&lt;/p&gt;
&lt;p&gt;The code is open sourced under the very liberal &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT/X11 license&lt;/a&gt;,
and much of its frog DNA has proven very useful to me over the years.
This blog post is about how that frog DNA can help you fill gaps in your
projects …&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Years ago while looking for a fast <a href="https://en.wikipedia.org/wiki/Init">init</a> replacement for <a href="http://westermo.com/">work</a>,
I found <a href="http://helllabs.org/finit/">Finit</a>.  Originally written by <a href="https://github.com/cmatsuoka">Claudio Matsuoka</a> to act
as a drop-in replacement for the <a href="https://en.wikipedia.org/wiki/Asus_Eee_PC">Asus EeePC</a> <a href="http://wiki.eeeuser.com/boot_process:the_boot_process">fastinit</a>, <em>&ldquo;gaps
filled with frog DNA …&quot;</em></p>
<p>Until I found Finit I had always been in awe of those venturing into the
realm of <a href="http://0pointer.net/blog/">PID 1</a>.  However, learning from the simplicity of Claudio&rsquo;s
code I realized that although PID 1 at times is indistinguishable from
magic, it is really not that hard to master.  <a href="https://github.com/troglobit/finit">My version of Finit</a>
is available on GitHub.</p>
<p>The code is open sourced under the very liberal <a href="http://opensource.org/licenses/MIT">MIT/X11 license</a>,
and much of its frog DNA has proven very useful to me over the years.
This blog post is about how that frog DNA can help you fill gaps in your
projects …</p>
<p>Recently I broke out the most generic pieces from Finit into a separate
library, which I call <a href="https://github.com/troglobit/libite">libite</a> (because it looks awesome linking to
it: <code>-lite</code> :) I complemented it with a few pieces of my own and some
from the <a href="http://www.openbsd.org/">OpenBSD</a> project, most notably their famous string API:
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=strlcpy">strlcpy(3)</a> and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=strlcpy">strlcat(3)</a>.  Also included is the very useful
*BSD linked list API <a href="http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man3/LIST_EMPTY.3">sys/queue.h</a>, which is a much more up to date
version than GLIBC carries.  For example, the new <code>_SAFE</code> macros are
missing, which you want to use while traversing lists to delete/free
nodes.</p>
<p>To make use of <code>-lite</code> and its APIs you can either build it as a
separate library and install <code>lite.h</code> and <code>libite.so.1</code> to your system,
or add <code>libite</code> as a GIT submodule to your project and use only the
parts you need from the archive:</p>
<pre><code>git submodule add https://github.com/troglobit/libite.git
</code></pre>
<p>You then need to add <code>#include &quot;libite/lite.h&quot;</code> to the source and adapt
your Makefile slightly to call the <code>libite/Makefile</code> before linking your
application to the <code>libite.a</code> archive:</p>
<pre><code>all: $(EXEC) libite/libite.a

libite/libite.a: Makefile
        @$(MAKE) -C libite

$(EXEC): $(OBJS) libite/libite.a
        @gcc -o $@ $^
</code></pre>
<p>For an example of how this can look, see the <a href="https://github.com/troglobit/uftpd">uftpd</a> project, which
uses both <code>-lite</code> and <code>-luev</code>.  The latter is my small event library,
<a href="https://github.com/troglobit/libuev">libuEv</a>.  For help using <code>-lite</code> with the GNU configure and build
system, see <a href="https://github.com/troglobit/inadyn">inadyn</a>.</p>
<p>Libite builds in &ldquo;silent mode&rdquo; by default, use <code>make V=1</code> (like the
kernel) to get a more verbose output, usable for autobuilders etc.</p>]]></content>
        </item>
        
        <item>
            <title>HowTo: Push to multiple GIT repos with one command</title>
            <link>/2015/07/01/howto-push-to-multiple-git-repos-with-one-command/</link>
            <pubDate>Wed, 01 Jul 2015 00:42:17 +0000</pubDate>
            
            <guid>/2015/07/01/howto-push-to-multiple-git-repos-with-one-command/</guid>
            <description>&lt;p&gt;So, now that I have &lt;a href=&#34;http://git.troglobit.com&#34;&gt;http://git.troglobit.com&lt;/a&gt; setup as a backup GIT repo
to &lt;a href=&#34;https://github.com/troglobit,&#34;&gt;https://github.com/troglobit,&lt;/a&gt; I needed a &lt;em&gt;simple&lt;/em&gt; way to always push
to both repos &amp;ndash; best way for me is to always hook into my regular work
flow, otherwise I&amp;rsquo;d just forget.  The &lt;a href=&#34;1&#34;&gt;git-remote(1)&lt;/a&gt; man page to the
rescue, it describes the &lt;code&gt;set-url --add&lt;/code&gt; sub-command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git remote set-url --add origin ssh://git.troglobit.com:1234/srv/git/watchdogd.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, with a simple &lt;code&gt;git push&lt;/code&gt; followed by &lt;code&gt;git push --tags&lt;/code&gt; I had now
pushed to both the GitHub repo as well as my own server!&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>So, now that I have <a href="http://git.troglobit.com">http://git.troglobit.com</a> setup as a backup GIT repo
to <a href="https://github.com/troglobit,">https://github.com/troglobit,</a> I needed a <em>simple</em> way to always push
to both repos &ndash; best way for me is to always hook into my regular work
flow, otherwise I&rsquo;d just forget.  The <a href="1">git-remote(1)</a> man page to the
rescue, it describes the <code>set-url --add</code> sub-command:</p>
<pre><code>git remote set-url --add origin ssh://git.troglobit.com:1234/srv/git/watchdogd.git
</code></pre>
<p>Now, with a simple <code>git push</code> followed by <code>git push --tags</code> I had now
pushed to both the GitHub repo as well as my own server!</p>
<p>Obviously I don&rsquo;t use port 1234, but that&rsquo;s the syntax if you want to
push to a GIT server over SSH on a different port than the default (22).</p>
<p>You can of course just edit the <code>.git/config</code> file instead, which in
many cases might be faster:</p>
<pre><code>[remote &quot;origin&quot;]
    fetch = +refs/heads/*:refs/remotes/origin/*
    url = git@github.com:troglobit/finit.git
    url = ssh://git.troglobit.com:1234/srv/git/finit.git
</code></pre>
<p>Of course I first had to create the empty <code>watchdogd.git</code> on the server.
I do this quite often, so I&rsquo;ve wrapped it in a <code>makerepo.sh</code> script:</p>
<pre><code>cd /srv/git
git init --bare watchdogd.git
echo &quot;Refurbished watchdog daemon from uClinux-dist&quot; &gt;watchdogd.git/description
</code></pre>
<p>To inspect your current push/pull repos, issue <code>git remote -v</code>:</p>
<pre><code>origin	git@github.com:troglobit/watchdogd.git (fetch)
origin	git@github.com:troglobit/watchdogd.git (push)
origin	ssh://git.troglobit.com:1234/srv/git/watchdogd.git (push)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>HowTo: Apache with Gitweb on Debian 8.1</title>
            <link>/2015/06/30/howto-apache-with-gitweb-on-debian-8-dot-1/</link>
            <pubDate>Tue, 30 Jun 2015 23:13:48 +0000</pubDate>
            
            <guid>/2015/06/30/howto-apache-with-gitweb-on-debian-8-dot-1/</guid>
            <description>&lt;p&gt;I&amp;rsquo;m posting this in case anyone else gets stuck setting up &lt;a href=&#34;http://www.apache.org&#34;&gt;Apache&lt;/a&gt;
with &lt;a href=&#34;http://git-scm.com/docs/gitweb&#34;&gt;Gitweb&lt;/a&gt;.  Also as a reminder to myself in case I ever need to
set up this all over again.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You have all your eggs in one basket (GitHub), and&lt;/li&gt;
&lt;li&gt;You really like that shiny basket, but&lt;/li&gt;
&lt;li&gt;You know you&amp;rsquo;re clumsy and usually drop baskets yourself.&lt;/li&gt;
&lt;li&gt;You are wise (yes you are!) and realize you need another basket, so&lt;/li&gt;
&lt;li&gt;You set up a server and a domain yourself &amp;hellip;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OK.  Let&amp;rsquo;s start simple, since you are already running the latest Debian
you fire up the command line and install the basics:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install gitweb apache2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So it&amp;rsquo;ll complain, you&amp;rsquo;ll clarify your request and soon all required
packages are on your server.  Now what?&lt;/p&gt;
&lt;p&gt;Debian has already set up http://localhost/gitweb for you, and if you
have a domain already you should go ahead and edit the master file for
that:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;editor /etc/apache2/sites-available/000-default.conf
service apache2 reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to use that for your gitweb needs, then you&amp;rsquo;re done!&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>I&rsquo;m posting this in case anyone else gets stuck setting up <a href="http://www.apache.org">Apache</a>
with <a href="http://git-scm.com/docs/gitweb">Gitweb</a>.  Also as a reminder to myself in case I ever need to
set up this all over again.</p>
<ol>
<li>You have all your eggs in one basket (GitHub), and</li>
<li>You really like that shiny basket, but</li>
<li>You know you&rsquo;re clumsy and usually drop baskets yourself.</li>
<li>You are wise (yes you are!) and realize you need another basket, so</li>
<li>You set up a server and a domain yourself &hellip;</li>
</ol>
<p>OK.  Let&rsquo;s start simple, since you are already running the latest Debian
you fire up the command line and install the basics:</p>
<pre><code>sudo apt-get install gitweb apache2
</code></pre>
<p>So it&rsquo;ll complain, you&rsquo;ll clarify your request and soon all required
packages are on your server.  Now what?</p>
<p>Debian has already set up http://localhost/gitweb for you, and if you
have a domain already you should go ahead and edit the master file for
that:</p>
<pre><code>editor /etc/apache2/sites-available/000-default.conf
service apache2 reload
</code></pre>
<p>If you want to use that for your gitweb needs, then you&rsquo;re done!</p>
<p>For me, running <a href="http://troglobit.com/gitweb">http://troglobit.com/gitweb</a> out of the box was not
enough.  I wanted to setup <a href="http://git.troglobit.com">http://git.troglobit.com</a> and also to make
sure to keep really short and pretty URLs to projects I host.  So the
next part of this post is about how to set that up.</p>
<p>My <code>000-default.conf</code> is for <a href="http://troglobit.com">http://troglobit.com</a>, so I created a new
one for the sub-domain:</p>
<pre><code>editor /etc/apache2/sites-available/git.conf
</code></pre>
<p>&hellip; and added the following:</p>
<div class="highlight"><pre class="chroma"><code class="language-apache" data-lang="apache">    <span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>
        <span class="nb">ServerName</span> git.troglobit.com
        <span class="nb">DocumentRoot</span> <span class="sx">/usr/share/gitweb</span>

        <span class="nb">SetEnv</span> GITWEB_CONFIG    <span class="sx">/etc/gitweb.conf</span>
        <span class="nb">SetEnv</span> GIT_PROJECT_ROOT <span class="sx">/srv/git</span>

        <span class="nt">&lt;Directory</span> <span class="s">/usr/share/gitweb</span><span class="nt">&gt;</span>
	        <span class="nb">Options</span> FollowSymLinks ExecCGI
	        <span class="nb">AddHandler</span> cgi-script .cgi

            <span class="nb">DirectoryIndex</span> gitweb.cgi

            <span class="c"># Pretty gitweb URLs + pathinfo feature in gitweb.conf</span>
	        <span class="nb">RewriteEngine</span> <span class="k">On</span>
	        <span class="nb">RewriteCond</span> %{REQUEST_FILENAME} !-f
	        <span class="nb">RewriteCond</span> %{REQUEST_FILENAME} !-d
	        <span class="nb">RewriteRule</span> ^.* <span class="sx">/gitweb.cgi/</span>$0 [L,PT]
        <span class="nt">&lt;/Directory&gt;</span>

        <span class="c"># Enable git clone over HTTP</span>
        <span class="nb">ScriptAliasMatch</span> \
	        <span class="err">&#34;</span>(?x)^/(.*/(HEAD | \
	        <span class="k">info</span><span class="sx">/refs</span> | \
            objects/(info/[^/]+ | \
            [0-9a-f]{2}/[0-9a-f]{38} | \
            pack/pack-[0-9a-f]{40}\.(pack|idx)) | \
            git-(upload|receive)-pack))$<span class="err">&#34;</span> \
            <span class="sx">/usr/lib/git-core/git-http-backend/</span>$1
    <span class="nt">&lt;/VirtualHost&gt;</span>
</code></pre></div><p>Remember to enable the new sub-domain in Apache and restart the daemon:</p>
<pre><code>a2ensite git
service apache2 restart
</code></pre>
<p>I&rsquo;m not using the default Debian GIT repo location, <code>/var/lib/git</code>, so I
need to set the project root for both the Apache and the GitWeb config:</p>
<div class="highlight"><pre class="chroma"><code class="language-perl" data-lang="perl">    <span class="c1"># See https://github.com/kogakure/gitweb-theme for more help and pointers</span>

    <span class="c1"># path to git projects (&lt;project&gt;.git)</span>
    <span class="nv">$projectroot</span> <span class="o">=</span> <span class="s">&#34;/srv/git&#34;</span><span class="p">;</span>
    
    <span class="nv">@git_base_url_list</span> <span class="o">=</span> <span class="p">(</span><span class="s">&#34;git://git.troglobit.com&#34;</span><span class="p">,</span> <span class="s">&#34;http://git.troglobit.com&#34;</span><span class="p">);</span>
    
    <span class="c1"># directory to use for temp files</span>
    <span class="nv">$git_temp</span> <span class="o">=</span> <span class="s">&#34;/tmp&#34;</span><span class="p">;</span>
    
    <span class="nv">$site_name</span> <span class="o">=</span> <span class="s">&#34;git.troglobit.com&#34;</span><span class="p">;</span>
    
    <span class="c1"># target of the home link on top of all pages</span>
    <span class="nv">$home_link</span> <span class="o">=</span> <span class="nv">$my_uri</span> <span class="o">||</span> <span class="s">&#34;/&#34;</span><span class="p">;</span>
    
    <span class="c1"># html text to include at home page</span>
    <span class="c1">#$home_text = &#34;indextext.html&#34;;</span>
    
    <span class="c1"># file with project list; by default, simply scan the projectroot dir.</span>
    <span class="c1">#$projects_list = $projectroot;</span>
    
    <span class="c1"># stylesheet to use</span>
    <span class="nv">@stylesheets</span> <span class="o">=</span> <span class="p">(</span><span class="s">&#34;static/gitweb.css&#34;</span><span class="p">);</span>
    
    <span class="c1"># javascript code for gitweb</span>
    <span class="nv">$javascript</span> <span class="o">=</span> <span class="s">&#34;static/gitweb.js&#34;</span><span class="p">;</span>
    
    <span class="c1"># logo to use</span>
    <span class="nv">$logo</span> <span class="o">=</span> <span class="s">&#34;static/git-logo.png&#34;</span><span class="p">;</span>
    
    <span class="c1"># the &#39;favicon&#39;</span>
    <span class="nv">$favicon</span> <span class="o">=</span> <span class="s">&#34;static/git-favicon.png&#34;</span><span class="p">;</span>
    
    <span class="c1"># git-diff-tree(1) options to use for generated patches</span>
    <span class="c1">#@diff_opts = (&#34;-M&#34;);</span>
    <span class="nv">@diff_opts</span> <span class="o">=</span> <span class="p">();</span>
        
    <span class="c1"># Enable PATH_INFO so the server can produce URLs of the</span>
    <span class="c1"># form: http://git.hokietux.net/project.git/xxx/xxx</span>
    <span class="c1"># This allows for pretty URLs *within* the Git repository,</span>
    <span class="c1"># also needs the Apache rewrite rules for full effect.</span>
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;pathinfo&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    
    <span class="c1"># Neat way of prefixing the top URL listing</span>
    <span class="k">our</span> <span class="nv">@extra_breadcrumbs</span> <span class="o">=</span> <span class="p">(</span>
          <span class="p">[</span> <span class="s">&#39;Troglobit Software&#39;</span> <span class="o">=&gt;</span> <span class="s">&#39;http://troglobit.com/&#39;</span> <span class="p">],</span>
        <span class="p">);</span>
    
    <span class="c1"># List avatars next to committers</span>
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;avatar&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;gravatar&#39;</span><span class="p">];</span>
    
    <span class="c1"># The category name is read from .git/category, in the same manner as .git/description.</span>
    <span class="nv">$projects_list_group_categories</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="nv">$project_list_default_category</span> <span class="o">=</span> <span class="s">&#34;misc&#34;</span><span class="p">;</span>
    
    <span class="nv">$projects_list_description_width</span> <span class="o">=</span> <span class="mi">80</span><span class="p">;</span>
    
    <span class="c1"># Enable blame, pickaxe search, snapshop, search, and grep</span>
    <span class="c1"># support, but still allow individual projects to turn them off.</span>
    <span class="c1"># These are features that users can use to interact with your Git trees. They</span>
    <span class="c1"># consume some CPU whenever a user uses them, so you can turn them off if you</span>
    <span class="c1"># need to.  Note that the &#39;override&#39; option means that you can override the</span>
    <span class="c1"># setting on a per-repository basis.</span>
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;blame&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;blame&#39;</span><span class="p">}{</span><span class="s">&#39;override&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;pickaxe&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;pickaxe&#39;</span><span class="p">}{</span><span class="s">&#39;override&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;snapshot&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;snapshot&#39;</span><span class="p">}{</span><span class="s">&#39;override&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;search&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;grep&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;grep&#39;</span><span class="p">}{</span><span class="s">&#39;override&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    
    <span class="nv">$feature</span><span class="p">{</span><span class="s">&#39;highlight&#39;</span><span class="p">}{</span><span class="s">&#39;default&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</code></pre></div><p>The impossibly simple Apache config has been ripped from the intro by
<a href="http://dereenigne.org/debian/debian-gitweb-server">Jonathan McCrohan</a>,
the GitWeb config is a mixture of findings on the Internets.  Notice the
breadcrumbs and the grouping settings, very useful.</p>
<p>The magic with the pretty URLs is in both files, all <code>RewriteRule</code> lines
in the Apache <code>.conf</code> and the <code>$feature{'pathinfo'}{'default'} = [1];</code>
setting in <code>gitweb.conf</code>.</p>
<p>Also, try out the cool <a href="https://github.com/kogakure/gitweb-theme">theme</a>
I use, it looks a lot better than the default.</p>
<p>Happy coding!</p>]]></content>
        </item>
        
        <item>
            <title>Inetd Support in Finit v1.12</title>
            <link>/2015/03/06/inetd-support-in-finit-v1-dot-12/</link>
            <pubDate>Fri, 06 Mar 2015 22:34:45 +0000</pubDate>
            
            <guid>/2015/03/06/inetd-support-in-finit-v1-dot-12/</guid>
            <description>&lt;p&gt;A steady flow of features, and releases, is key to keeping any project
alive.  Recently I ticked off another item in the &lt;a href=&#34;/finit.html&#34;&gt;Finit&lt;/a&gt;
TODO list &amp;hellip;&lt;/p&gt;
&lt;p&gt;Finit v1.12 now comes with a built-in inetd!  You no longer need an
external inetd daemon to launch services on demand.&lt;/p&gt;
&lt;p&gt;The good news doesn&amp;rsquo;t stop there, this little inetd actually supports a
poor man&amp;rsquo;s tcpwrappers!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;inetd ssh/tcp          nowait [2345] /sbin/dropbear -i -R -F
inetd ssh@eth0:222/tcp nowait [2345] /sbin/dropbear -i -R -F
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With these two lines in your &lt;code&gt;/etc/finit.conf&lt;/code&gt; you tell finit to launch
the &lt;a href=&#34;https://matt.ucc.asn.au/dropbear/dropbear.html&#34;&gt;Dropbear SSH&lt;/a&gt;
server on demand on port 22 (default ssh/tcp port in &lt;code&gt;/etc/services&lt;/code&gt;) on
&lt;em&gt;all&lt;/em&gt; interfaces except on &lt;code&gt;eth0&lt;/code&gt;, which in your case is the Internet
(WAN) interface, here you want SSH to run on port 222.  Actually, you
don&amp;rsquo;t want port 22 open at all on &lt;code&gt;eth0&lt;/code&gt; &amp;hellip; so finit takes care of this
for you!  Seriously, it just works, no need for messing about with that
nasty old &lt;code&gt;iptables&lt;/code&gt; anymore!&lt;/p&gt;
&lt;p&gt;The original UNIX inetd super server supported many protocols
internally, some of which may seem a bit odd today, and some have been
superseded by more modern protocols.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Echo_Protocol&#34;&gt;echo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Character_Generator_Protocol&#34;&gt;chargen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Time_Protocol&#34;&gt;time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Daytime_Protocol&#34;&gt;daytime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Discard_Protocol&#34;&gt;discard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finit currently only supports one internal/built-in standard service,
&lt;code&gt;time&lt;/code&gt;.  It is built as a plugin to serve as an example of how you can
extend Finit yourself.  The time service can be called either as UDP or
TCP.  To prevent security issues, the &lt;code&gt;time&lt;/code&gt; protocol is disabled by
default.  To enable it you need two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;time.so&lt;/code&gt; plugin (built by default)&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;inetd time ...&lt;/code&gt; line in &lt;code&gt;/etc/finit.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Assuming you&amp;rsquo;ve installed the default set of plugins, the following two
lines can be added:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;inetd time/udp   wait [2345] internal
inetd time/tcp nowait [2345] internal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This can be very useful for testing the inetd capabilities, your network
connection, or simply to get the time to a client where NTP for some
reason does not work, or is blocked.  For instance, you could have a GPS
setup on your server and distribute time to clients with the &lt;code&gt;time&lt;/code&gt;
protocol.&lt;/p&gt;
&lt;p&gt;To use it you need an &lt;a href=&#34;http://www.aelius.com/njh/rdate/&#34;&gt;&lt;code&gt;rdate&lt;/code&gt;&lt;/a&gt;
client.  Users of &lt;code&gt;rdate&lt;/code&gt; in BusyBox may need to be reminded that it
only supports TCP.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rdate -pu 198.51.100.42
Sat Mar  7 08:48:58 CET 2015
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more info on Finit and its features, see the &lt;a href=&#34;https://github.com/troglobit/finit/blob/master/README.md&#34;&gt;README&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enjoy! ツ&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>A steady flow of features, and releases, is key to keeping any project
alive.  Recently I ticked off another item in the <a href="/finit.html">Finit</a>
TODO list &hellip;</p>
<p>Finit v1.12 now comes with a built-in inetd!  You no longer need an
external inetd daemon to launch services on demand.</p>
<p>The good news doesn&rsquo;t stop there, this little inetd actually supports a
poor man&rsquo;s tcpwrappers!</p>
<pre><code>inetd ssh/tcp          nowait [2345] /sbin/dropbear -i -R -F
inetd ssh@eth0:222/tcp nowait [2345] /sbin/dropbear -i -R -F
</code></pre>
<p>With these two lines in your <code>/etc/finit.conf</code> you tell finit to launch
the <a href="https://matt.ucc.asn.au/dropbear/dropbear.html">Dropbear SSH</a>
server on demand on port 22 (default ssh/tcp port in <code>/etc/services</code>) on
<em>all</em> interfaces except on <code>eth0</code>, which in your case is the Internet
(WAN) interface, here you want SSH to run on port 222.  Actually, you
don&rsquo;t want port 22 open at all on <code>eth0</code> &hellip; so finit takes care of this
for you!  Seriously, it just works, no need for messing about with that
nasty old <code>iptables</code> anymore!</p>
<p>The original UNIX inetd super server supported many protocols
internally, some of which may seem a bit odd today, and some have been
superseded by more modern protocols.</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Echo_Protocol">echo</a></li>
<li><a href="http://en.wikipedia.org/wiki/Character_Generator_Protocol">chargen</a></li>
<li><a href="http://en.wikipedia.org/wiki/Time_Protocol">time</a></li>
<li><a href="http://en.wikipedia.org/wiki/Daytime_Protocol">daytime</a></li>
<li><a href="http://en.wikipedia.org/wiki/Discard_Protocol">discard</a></li>
</ul>
<p>Finit currently only supports one internal/built-in standard service,
<code>time</code>.  It is built as a plugin to serve as an example of how you can
extend Finit yourself.  The time service can be called either as UDP or
TCP.  To prevent security issues, the <code>time</code> protocol is disabled by
default.  To enable it you need two things:</p>
<ol>
<li>The <code>time.so</code> plugin (built by default)</li>
<li>An <code>inetd time ...</code> line in <code>/etc/finit.conf</code></li>
</ol>
<p>Assuming you&rsquo;ve installed the default set of plugins, the following two
lines can be added:</p>
<pre><code>inetd time/udp   wait [2345] internal
inetd time/tcp nowait [2345] internal
</code></pre>
<p>This can be very useful for testing the inetd capabilities, your network
connection, or simply to get the time to a client where NTP for some
reason does not work, or is blocked.  For instance, you could have a GPS
setup on your server and distribute time to clients with the <code>time</code>
protocol.</p>
<p>To use it you need an <a href="http://www.aelius.com/njh/rdate/"><code>rdate</code></a>
client.  Users of <code>rdate</code> in BusyBox may need to be reminded that it
only supports TCP.</p>
<pre><code>$ rdate -pu 198.51.100.42
Sat Mar  7 08:48:58 CET 2015
</code></pre>
<p>For more info on Finit and its features, see the <a href="https://github.com/troglobit/finit/blob/master/README.md">README</a>.</p>
<p>Enjoy! ツ</p>
<h3 id="changes">Changes</h3>
<ul>
<li>Add support for built-in inetd super server &ndash; launch services on
demand.  Supports filtering per interface and custom Inet ports.</li>
<li>Upgrade to <a href="https://github.com/troglobit/libuev">libuEv</a> v1.1.0 to better handle error conditions.</li>
<li>Allow mixed case config directives in <code>finit.conf</code></li>
<li>Add support for RFC 868 (rdate) time plugin, start as inetd service.</li>
<li>Load plugins before parsing <code>finit.conf</code>, this makes it possible to
extend finit even with configuration commands.  E.g., the <code>time.so</code>
plugin must be loaded for the <code>inetd time/tcp internal</code> service to be
accepted when parsing <code>finit.conf</code>.</li>
<li>Slight change in TTY fallback behavior, if no TTY is listed in the
system <code>finit.conf</code> first inspect the <code>console</code> setting and only if
that too is unset fall back to <code>/bin/sh</code></li>
<li>When falling back to the <code>console</code> TTY or <code>/bin/sh</code>, finit now marks
this fallback as console.  Should improve usability in some use cases.</li>
</ul>
<h3 id="fixes">Fixes</h3>
<ul>
<li>Revert &ldquo;Use vfork() instead of fork() before exec()&rdquo; from v1.11.  It
turned out to not work so well after all.  For instance, launching
TTYs in a background process completely blocked inetd services from
even starting up listening sockets &hellip; proper fork seems to work fine
though.  This is the casue for <em>yanking</em> the <a href="https://github.com/troglobit/finit/compare/1.10...1.11">1.11</a> release.</li>
<li>Trap segfaults caused by external plugins/callbacks in a sub-process.
This prevents a single programming mistake in by a 3rd party developer
from taking down the entire system.</li>
<li>Fix Coverity CID 56281: <code>dlopen()</code> resource leak by storing the
pointer.  For the time being we do not support unloading plugins.</li>
<li>Set hostname early, so bootstrap processes like syslog can use it.</li>
<li>Only restart <em>lost daemons</em> when recovering from a <code>SIGSTOP</code>/norespawn.</li>
</ul>]]></content>
        </item>
        
        <item>
            <title>Finit v1.11 released!</title>
            <link>/2015/01/24/finit-v1-dot-11-released/</link>
            <pubDate>Sat, 24 Jan 2015 16:54:23 +0000</pubDate>
            
            <guid>/2015/01/24/finit-v1-dot-11-released/</guid>
            <description>&lt;p&gt;&lt;strong&gt;Update 2015-03-09&lt;/strong&gt;: This release has unfortunately been &lt;em&gt;yanked&lt;/em&gt; due
to serious regressions in launching background processes.  It has been
replaced by &lt;a href=&#34;/blog/2015/03/06/inetd-support-in-finit-v1-dot-12/&#34;&gt;v1.12&lt;/a&gt;&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p><strong>Update 2015-03-09</strong>: This release has unfortunately been <em>yanked</em> due
to serious regressions in launching background processes.  It has been
replaced by <a href="/blog/2015/03/06/inetd-support-in-finit-v1-dot-12/">v1.12</a></p>
<p>I&rsquo;m very pleased to announce <a href="/finit.html">Finit v1.11</a> — this is the
episode where two of my projects finally get married! ツ</p>
<h3 id="changes">Changes</h3>
<ul>
<li>Now using the asynchronous <a href="https://github.com/troglobit/libuev">libuEv</a> library for handling all events:
signals, timers and listening to sockets or file descriptors.</li>
<li>Rename NEWS.md &ndash;&gt; CHANGELOG.md, with symlinks for <code>make install</code></li>
<li>Attempt to align with <a href="http://keepachangelog.com">http://keepachangelog.com</a> for the ChangeLog</li>
<li><a href="https://travis-ci.org/troglobit/finit">Travis CI</a> now only invokes <a href="https://scan.coverity.com/projects/3545">Coverity Scan</a> from the &lsquo;dev&rsquo; branch.  This
means that all development, except documentation updates, must go into
that branch.</li>
</ul>
<h3 id="fixes">Fixes</h3>
<ul>
<li>Fix bug with finit dying when no <code>tty</code> is defined in <code>finit.conf</code>, now
even the fallback shell has control over its TTY, see fix in GIT
commit <a href="https://github.com/troglobit/finit/commit/dea3ae8">dea3ae8</a> for this.</li>
</ul>]]></content>
        </item>
        
        <item>
            <title>Rant: All the C Compiler Warnings ...</title>
            <link>/2015/01/12/rant-all-the-c-compiler-warnings-dot-dot-dot/</link>
            <pubDate>Mon, 12 Jan 2015 01:57:40 +0000</pubDate>
            
            <guid>/2015/01/12/rant-all-the-c-compiler-warnings-dot-dot-dot/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;Enable &lt;em&gt;all&lt;/em&gt; the warnings!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is one of the truths you learn when you start working with C.  Most
of the time adding &lt;code&gt;CPPFLAGS=&amp;quot;-W -Wall -Werror&amp;quot;&lt;/code&gt; is all you need to find
all the nasty bugs.  And if that&amp;rsquo;s not enough, there are tons of tools
for static code analysis, like &lt;code&gt;scan-build&lt;/code&gt; in
&lt;a href=&#34;http://clang-analyzer.llvm.org/scan-build.html&#34;&gt;Clang&lt;/a&gt;, and
&lt;a href=&#34;https://scan.coverity.com/&#34;&gt;Coverity Scan&lt;/a&gt;, to help you &lt;em&gt;find all the
bugs&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;However, these pesky warnings (some of which cannot even be disabled!)
are sometimes more of a nuisance than help.  Sometimes you &lt;em&gt;know&lt;/em&gt; that
some parameters to a function will remain unused &amp;ndash; it&amp;rsquo;s a callback, and
you don&amp;rsquo;t need all the data given to you.  So you start adding all kinds
of voodoo, like &lt;code&gt;__attribute__ ((unused))&lt;/code&gt; &amp;hellip; seriously?&lt;/p&gt;</description>
            <content type="html"><![CDATA[<blockquote>
<p>Enable <em>all</em> the warnings!</p>
</blockquote>
<p>This is one of the truths you learn when you start working with C.  Most
of the time adding <code>CPPFLAGS=&quot;-W -Wall -Werror&quot;</code> is all you need to find
all the nasty bugs.  And if that&rsquo;s not enough, there are tons of tools
for static code analysis, like <code>scan-build</code> in
<a href="http://clang-analyzer.llvm.org/scan-build.html">Clang</a>, and
<a href="https://scan.coverity.com/">Coverity Scan</a>, to help you <em>find all the
bugs</em>!</p>
<p>However, these pesky warnings (some of which cannot even be disabled!)
are sometimes more of a nuisance than help.  Sometimes you <em>know</em> that
some parameters to a function will remain unused &ndash; it&rsquo;s a callback, and
you don&rsquo;t need all the data given to you.  So you start adding all kinds
of voodoo, like <code>__attribute__ ((unused))</code> &hellip; seriously?</p>
<p>Imagine this now sprinkled all over the code base.</p>
<div class="highlight"><pre class="chroma"><code class="language-C" data-lang="C">    <span class="k">static</span> <span class="kt">void</span> <span class="nf">callback</span><span class="p">(</span><span class="n">uev_ctx_t</span> <span class="o">*</span><span class="n">ctx</span> <span class="n">__attribute__</span><span class="p">((</span><span class="n">unused</span><span class="p">)),</span>
                         <span class="n">uev_t</span> <span class="o">*</span><span class="n">w</span> <span class="n">__attribute__</span><span class="p">((</span><span class="n">unused</span><span class="p">)),</span>
                         <span class="kt">void</span> <span class="o">*</span><span class="n">arg</span> <span class="n">__attribute__</span><span class="p">((</span><span class="n">unused</span><span class="p">)),</span>
                         <span class="kt">int</span> <span class="n">events</span> <span class="n">__attribute__</span><span class="p">((</span><span class="n">unused</span><span class="p">)))</span>
    <span class="p">{</span>
            <span class="p">...</span>
    <span class="p">}</span>
</code></pre></div><p>So you make small macros to help out:</p>
<div class="highlight"><pre class="chroma"><code class="language-C" data-lang="C">    <span class="cp">#define UNUSED(arg) arg __attribute__ ((unused))
</span></code></pre></div><p>We now have this instead:</p>
<div class="highlight"><pre class="chroma"><code class="language-C" data-lang="C">    <span class="k">static</span> <span class="kt">void</span> <span class="nf">callback</span><span class="p">(</span><span class="n">uev_ctx_t</span> <span class="o">*</span><span class="n">UNUSED</span><span class="p">(</span><span class="n">ctx</span><span class="p">),</span> <span class="n">uev_t</span> <span class="o">*</span><span class="n">UNUSED</span><span class="p">(</span><span class="n">w</span><span class="p">),</span>
                         <span class="kt">void</span> <span class="o">*</span><span class="n">UNUSED</span><span class="p">(</span><span class="n">arg</span><span class="p">),</span> <span class="kt">int</span> <span class="n">UNUSED</span><span class="p">(</span><span class="n">events</span><span class="p">))</span>
    <span class="p">{</span>
            <span class="p">...</span>
    <span class="p">}</span>
</code></pre></div><p>Admittedly, using the macro is much cleaner, but still.  Why not just
allow this <em>much more readable</em> version?</p>
<div class="highlight"><pre class="chroma"><code class="language-C" data-lang="C">    <span class="k">static</span> <span class="kt">void</span> <span class="nf">callback</span><span class="p">(</span><span class="n">uev_ctx_t</span> <span class="o">*</span><span class="n">ctx</span><span class="p">,</span> <span class="n">uev_t</span> <span class="o">*</span><span class="n">w</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">arg</span><span class="p">,</span> <span class="kt">int</span> <span class="n">events</span><span class="p">)</span>
    <span class="p">{</span>
            <span class="p">...</span>
    <span class="p">}</span>
</code></pre></div><p>The human eye is marvellous at finding little things that stick out,
but when there&rsquo;s nothing but annoying things on the screen we can no
longer see the most obvious pointer casting bugs, and we get sloppy.</p>
<p>I&rsquo;m seriously considering adding some kind of <code>--developer-mode</code> to my
own projects which will warn like crazy, as usual, and as soon as I turn
it off (default) complete silence will arrive.  That&rsquo;s how sick and
tired I am of <em>all the warnings</em> and the resulting almost completely
unreadable code.</p>
<p><a href="http://blog.codinghorror.com/when-understanding-means-rewriting/">We spend a lot of time reading code</a>,
so it should be enjoyable and easy.</p>]]></content>
        </item>
        
        <item>
            <title>Recent Open Source Work</title>
            <link>/2015/01/08/recent-open-source-work/</link>
            <pubDate>Thu, 08 Jan 2015 01:57:14 +0000</pubDate>
            
            <guid>/2015/01/08/recent-open-source-work/</guid>
            <description>I&amp;rsquo;m a coder, not a writer. Here&amp;rsquo;s what I&amp;rsquo;ve been working on during the winter holidays:
  A new feature release of Finit is coming shortly, which will use libuEv and feature inetd support built-in!
  Another minor release of my own take on event loops, libuEv v1.0.3. This time with a heavy focus on documentation and Q&amp;amp;A, extensive validation testing have been done on this release.
  Released another minor release of mrouted, v3.</description>
            <content type="html"><![CDATA[<p>I&rsquo;m a coder, not a writer.  Here&rsquo;s what I&rsquo;ve been working on during the
winter holidays:</p>
<ul>
<li>
<p>A new feature release of <a href="/finit.html">Finit</a> is coming shortly, which
will use <a href="https://github.com/troglobit/libuev">libuEv</a> and feature
inetd support built-in!</p>
</li>
<li>
<p>Another minor release of my own take on event loops,
<a href="https://github.com/troglobit/libuev">libuEv</a>
<a href="https://github.com/troglobit/libuev/releases/tag/v1.0.3">v1.0.3</a>.
This time with a heavy focus on documentation and Q&amp;A, extensive
validation testing have been done on this release.</p>
</li>
<li>
<p>Released another minor release of <a href="/mrouted.html">mrouted</a>,
<a href="https://github.com/troglobit/mrouted/releases/tag/3.9.7">v3.9.7</a>,
which despite its age, and all other obvious limitations of
<a href="http://en.wikipedia.org/wiki/Distance_Vector_Multicast_Routing_Protocol">DVMRP</a>,
is still one of the best options for <em>dynamic</em> multicast routing
available today.</p>
</li>
<li>
<p>Major new release of <a href="/pimd.html">pimd</a>,
<a href="https://github.com/troglobit/pimd/releases/tag/2.2.0">v2.2.0</a>, which
is likely the last release ever of the old pimd, unless someone starts
paying me to work on it.</p>
<p>&hellip; or more people step up to help.  Both the Xorp PIM-SM and the
upcoming Quagga PIM-SSM implementations are in better shape.  The only
thing old pimd has got going for it is the license.  It&rsquo;s 3-clause
BSD, so very liberal.</p>
</li>
</ul>
<p>If you&rsquo;re interested in pitching in, on any of my projects, just send me
an email or connect with me on GitHub!</p>
]]></content>
        </item>
        
        <item>
            <title>Blog Restoration Project</title>
            <link>/2015/01/02/blog-restoration-project-now-also-on-github-pages/</link>
            <pubDate>Fri, 02 Jan 2015 14:12:59 +0000</pubDate>
            
            <guid>/2015/01/02/blog-restoration-project-now-also-on-github-pages/</guid>
            <description>&lt;p&gt;I&amp;rsquo;ve had this long-standing issue with backups.  It&amp;rsquo;s deadly boring to
set up and maintain, so I don&amp;rsquo;t do any.  Until today!&lt;/p&gt;
&lt;p&gt;Today I moved the sources for my &lt;a href=&#34;http://troglobit.com&#34;&gt;Octopress blag&lt;/a&gt;
to GitHub, which also prompted me to set up
&lt;a href=&#34;http://troglobit.github.io&#34;&gt;a mirror&lt;/a&gt; on
&lt;a href=&#34;http://pages.github.io&#34;&gt;GitHub Pages&lt;/a&gt;.  As usual, reading up on the
subject and muster enough motivation took me about three months, whereas
the actual work took about 4h.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>I&rsquo;ve had this long-standing issue with backups.  It&rsquo;s deadly boring to
set up and maintain, so I don&rsquo;t do any.  Until today!</p>
<p>Today I moved the sources for my <a href="http://troglobit.com">Octopress blag</a>
to GitHub, which also prompted me to set up
<a href="http://troglobit.github.io">a mirror</a> on
<a href="http://pages.github.io">GitHub Pages</a>.  As usual, reading up on the
subject and muster enough motivation took me about three months, whereas
the actual work took about 4h.</p>
<p>I now have a concoction of mixed remotes, multiple branches and some
Ruby magic to administer it all with!  Here are some links I used to
get where I am:</p>
<ul>
<li><a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></li>
<li><a href="https://help.github.com/articles/creating-project-pages-manually/">https://help.github.com/articles/creating-project-pages-manually/</a></li>
<li><a href="https://help.github.com/articles/user-organization-and-project-pages/">https://help.github.com/articles/user-organization-and-project-pages/</a></li>
<li><a href="http://www.tomordonez.com/blog/2012/06/04/creating-a-github-blog-using-octopress/">http://www.tomordonez.com/blog/2012/06/04/creating-a-github-blog-using-octopress/</a></li>
<li><a href="http://miguelcamba.com/blog/2013/04/22/tutorial-create-a-blog-with-octopress-and-host-it-in-github-pages/">http://miguelcamba.com/blog/2013/04/22/tutorial-create-a-blog-with-octopress-and-host-it-in-github-pages/</a></li>
<li><a href="http://octopress.org/docs/deploying/github/">http://octopress.org/docs/deploying/github/</a></li>
</ul>
<p>With some added <code>apt-get intall ruby ruby-bundler</code> magic in Ubuntu
everything started to look normal &ndash; now I could even do <code>rake preview</code>
before deploying!  Only a minor problem I had before getting everything
working was this:</p>
<blockquote>
<p>/usr/local/rvm/gems/ruby-2.1.2/gems/execjs-2.2.0/lib/execjs/runtimes.rb:51:in `autodetect&rsquo;:
Could not find a JavaScript runtime. See <a href="https://github.com/sstephenson/execjs">https://github.com/sstephenson/execjs</a>
for a list of available runtimes. (ExecJS::RuntimeUnavailable)</p>
</blockquote>
<p>Turns out I had to install nodejs as well, dunno why.</p>
<pre><code>sudo apt install nodejs
</code></pre>
<p>Since I wanted a mirrored setup I chose to have Octopress setup default
to deploy to GitHub Pages.  Then I simply rsync the whole shebang to my
own server.</p>
<p>All this means I can now finally begin restoring more content from
<a href="/blog/2013/02/17/resurrection/">my old blog</a> thanks to partial backups
I&rsquo;ve found at the <a href="https://archive.org/">Wayback Machine</a> :-)</p>]]></content>
        </item>
        
        <item>
            <title>mrouted v3.9.7</title>
            <link>/2014/12/28/mrouted-v3-dot-9-7/</link>
            <pubDate>Sun, 28 Dec 2014 19:38:06 +0000</pubDate>
            
            <guid>/2014/12/28/mrouted-v3-dot-9-7/</guid>
            <description>&lt;p&gt;Another release today is the venerable &lt;a href=&#34;/mrouted.html&#34;&gt;mrouted&lt;/a&gt;, now
available as
&lt;a href=&#34;https://github.com/troglobit/mrouted/releases/tag/3.9.7&#34;&gt;v3.9.7 on GitHub&lt;/a&gt;.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Another release today is the venerable <a href="/mrouted.html">mrouted</a>, now
available as
<a href="https://github.com/troglobit/mrouted/releases/tag/3.9.7">v3.9.7 on GitHub</a>.</p>
<h2 id="changes--new-features">Changes &amp; New Features</h2>
<ul>
<li>SNMP Support removed.  It never compiled and would have likely
needed a complete refactor to support modern AgentX.</li>
<li>Replaced static <code>config.mk</code> with configure script from pimd</li>
<li>RSRR Support now disabled by default, use <code>--enable-rsrr</code> to configure
script to re-enable</li>
<li>Possible to start with <code>mrouted</code> disabled on all interfaces by
default.  Use <code>enable</code> to .conf <code>phyint</code> directive and <code>-M/-N</code> command
line options to control behavior, default is same as before.  Thanks
to Joseph Gooch (<a href="https://github.com/goochjj">@goochjj</a>) for this feature!</li>
<li>Add David Waitzman and Craig Partridge to list of original authors
of <code>mrouted</code>, after being by Mr Waitzman :)</li>
<li>Change to use <code>stdint.h</code> types instead of unsafe homegrown types</li>
</ul>
<h2 id="bug-fixes">Bug Fixes</h2>
<ul>
<li>Fix issue with older BSD kernels, mainly for current FreeBSD 10 and
older, that don&rsquo;t really give RAW sockets but byte swap <code>ip_len</code>
field, Olivier Cochard-Labbé (<a href="https://github.com/ocochard">@ocochard</a>)</li>
<li>Build fixes for FreeBSD, should make maintaining ports easier :)</li>
<li>Change from <code>select()</code> to <code>poll()</code> due to descriptor limits, e.g.,
on BSD.</li>
<li>UNIX 2038 first audit, inspired by OpenBSD.  Cleanup type confusion
<code>int/u_long</code> where it should be <code>time_t</code>.  Also, clarify that <code>genid</code>
is OK, since it&rsquo;s used and stored as unsigned 32-bit integer.</li>
<li>Lots of minor fixes detected by Coverity Scan and Clang scan-build
<a href="https://scan.coverity.com/projects/3320">https://scan.coverity.com/projects/3320</a></li>
</ul>]]></content>
        </item>
        
        <item>
            <title>pimd v2.2.0 -- The last release of pimd?</title>
            <link>/2014/12/28/last-release-of-pimd/</link>
            <pubDate>Sun, 28 Dec 2014 13:42:18 +0000</pubDate>
            
            <guid>/2014/12/28/last-release-of-pimd/</guid>
            <description>&lt;p&gt;On one of the last days of 2014 I release &lt;a href=&#34;/pimd.html&#34;&gt;pimd&lt;/a&gt;
&lt;a href=&#34;https://github.com/troglobit/pimd/releases/tag/2.2.0&#34;&gt;v2.2.0&lt;/a&gt;, which
is an awesome release with a lot of new features and bug fixes!&lt;/p&gt;
&lt;p&gt;However, it could very well be the last release I do.  Even though its
one of my most popular projects on
&lt;a href=&#34;https://github.com/troglobit&#34;&gt;GitHub&lt;/a&gt; I have not had enough time to
dedicate to it over the years.  I will continue to do fixes and merge
pull requests until someone else steps up to take over.  There is also
the distinct possibility that the
&lt;a href=&#34;https://github.com/greearb/xorp.ct&#34;&gt;Xorp PIM-SM&lt;/a&gt; or the new
&lt;a href=&#34;https://github.com/udhos/qpimd&#34;&gt;Quagga PIM-SSM&lt;/a&gt; implementations will
(finally) make good old pimd completely redundant.&lt;/p&gt;
&lt;p&gt;At &lt;a href=&#34;http://www.westermo.com&#34;&gt;work&lt;/a&gt; we will likely start using the
Quagga PIM rather than pimd in WeOS.&lt;/p&gt;
&lt;p&gt;For now though, enjoy pimd v2.2.0.  It&amp;rsquo;s been tested in both my Qemu
based virtual testbed and a few setups using Linux&amp;rsquo; &lt;code&gt;netns&lt;/code&gt; feature in
&lt;a href=&#34;http://www.nrl.navy.mil/itd/ncs/products/core&#34;&gt;CORE&lt;/a&gt; &amp;ndash; awesome
little proggy! :-)&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>On one of the last days of 2014 I release <a href="/pimd.html">pimd</a>
<a href="https://github.com/troglobit/pimd/releases/tag/2.2.0">v2.2.0</a>, which
is an awesome release with a lot of new features and bug fixes!</p>
<p>However, it could very well be the last release I do.  Even though its
one of my most popular projects on
<a href="https://github.com/troglobit">GitHub</a> I have not had enough time to
dedicate to it over the years.  I will continue to do fixes and merge
pull requests until someone else steps up to take over.  There is also
the distinct possibility that the
<a href="https://github.com/greearb/xorp.ct">Xorp PIM-SM</a> or the new
<a href="https://github.com/udhos/qpimd">Quagga PIM-SSM</a> implementations will
(finally) make good old pimd completely redundant.</p>
<p>At <a href="http://www.westermo.com">work</a> we will likely start using the
Quagga PIM rather than pimd in WeOS.</p>
<p>For now though, enjoy pimd v2.2.0.  It&rsquo;s been tested in both my Qemu
based virtual testbed and a few setups using Linux&rsquo; <code>netns</code> feature in
<a href="http://www.nrl.navy.mil/itd/ncs/products/core">CORE</a> &ndash; awesome
little proggy! :-)</p>
<h3 id="changes--new-features">Changes &amp; New Features</h3>
<ul>
<li>Add IP fragmentation support for PIM register messages,
by Michael Fine of Cumulus Networks</li>
<li>Support <code>/LEN</code> syntax in <code>phyint</code> to complement <code>masklen LEN</code>, issue #12</li>
<li>Add support for /31 networks, point-to-point, thanks to Apollon Oikonomopoulos</li>
<li>Remove old broken SNMP support</li>
<li>OpenBSD inspired cleanup (deregister)
<a href="http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.sbin/mrouted/">http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.sbin/mrouted/</a></li>
<li>General code cleanup, shorten local variable names, func decl. etc.</li>
<li>Support for router alert IP option in IGMP queries</li>
<li>Support for reading IGMPv3 membership reports</li>
<li>Update IGMP code to support FreeBSD &gt;= 8.x</li>
<li>Retry read of routing tables on FreeBSD</li>
<li>Fix join/leve of ALL PIM Routers for FreeBSD and other UNIX kernels</li>
<li>Tested on FreeBSD, NetBSD and OpenBSD</li>
<li>Add very simple homegrown configure script</li>
<li>Update and document support for <code>rp_address</code>, <code>cand_rp</code>, and <code>cand_bootstrap_router</code></li>
<li>Add new <code>spt_threshold</code> to replace existing <code>switch_register_threshold</code>
and <code>switch_data_threshold</code> settings.  Cisco like and easier to understand</li>
</ul>
<h3 id="bug-fixes">Bug Fixes</h3>
<ul>
<li>Fix to avoid infinite loop during unicast send failure, by Alex Tessmer</li>
<li>Fix bug in bootstrap when configured as candidate RP, issue #15</li>
<li>Fix segfault in <code>accept_igmp()</code>, issue #29</li>
<li>Fix default source preference, should be 101 (not 1024!)</li>
<li>Fix <code>ip_len</code> handling on older BSD&rsquo;s, thanks to Olivier Cochard-Labbé, issue #23</li>
<li>Fix default prefix len in static RP example in <code>pimd.conf</code>, should be /4</li>
<li>Fix issue #31: Make IGMP query interval and querier timeout configurable</li>
<li>Fix issue #33: pimd does not work in background under FreeBSD</li>
<li>Fix issue #35: support for timing out other queriers from mrouted</li>
<li>Hopefully fix issue #22: Crash in (S,G) state when neighbor is lost</li>
<li>Misc. bug fixes thanks to Coverity Scan, static code analysis tool
<a href="https://scan.coverity.com/projects/3319">https://scan.coverity.com/projects/3319</a></li>
</ul>]]></content>
        </item>
        
        <item>
            <title>TFTP blocksize negotiation in uftpd v1.7</title>
            <link>/2014/12/21/tftp-blocksize-negotiation-in-uftpd-v1-dot-7/</link>
            <pubDate>Sun, 21 Dec 2014 19:42:17 +0000</pubDate>
            
            <guid>/2014/12/21/tftp-blocksize-negotiation-in-uftpd-v1-dot-7/</guid>
            <description>New release of uftpd, this time with TFTP blocksize negotiation, RFC 2348. Making it a lot faster to transfer files over TFTP.
Try it out!</description>
            <content type="html"><![CDATA[<p>New release of uftpd, this time with TFTP blocksize negotiation,
<a href="http://tools.ietf.org/html/rfc2348">RFC 2348</a>.  Making it a lot
faster to transfer files over TFTP.</p>
<p><a href="/uftpd.html">Try it out!</a></p>
]]></content>
        </item>
        
        <item>
            <title>HowTo: Add Multicast Routing to FreeBSD kernel</title>
            <link>/2014/09/23/howto-add-multicast-routing-support-to-the-freebsd-kernel/</link>
            <pubDate>Tue, 23 Sep 2014 01:55:19 +0000</pubDate>
            
            <guid>/2014/09/23/howto-add-multicast-routing-support-to-the-freebsd-kernel/</guid>
            <description>This is a very short blog post, mostly intended as a reminder to myself. Basically, there are two methods of adding multicast routing support to the FreeBSD kernel:
 Rebuild the kernel with options MROUTING Load the kernel module: kldload ip_mroute  The kernel rebuild assumes the src.txz set was installed previously.
cd /usr/src cd sys/amd64/conf cat GENERIC | sed &#39;s/GENERIC$/MULTICAST/&#39; &amp;gt; MULTICAST echo &#39;options MROUTING # Multicast routing&#39; &amp;gt;&amp;gt; MULTICAST echo &#39;options PIM # Enable for pimd&#39; &amp;gt;&amp;gt; MULTICAST cd - make kernel KERNCONF=MULTICAST reboot  That&amp;rsquo;s it.</description>
            <content type="html"><![CDATA[<p>This is a very short blog post, mostly intended as a reminder to myself.
Basically, there are two methods of adding multicast routing support to
the FreeBSD kernel:</p>
<ol>
<li>Rebuild the kernel with <code>options MROUTING</code></li>
<li>Load the kernel module: <code>kldload ip_mroute</code></li>
</ol>
<p>The kernel rebuild assumes the <code>src.txz</code> set was installed previously.</p>
<pre><code>cd /usr/src
cd sys/amd64/conf
cat GENERIC | sed 's/GENERIC$/MULTICAST/' &gt; MULTICAST
echo 'options   MROUTING         # Multicast routing' &gt;&gt; MULTICAST
echo 'options   PIM              # Enable for pimd'   &gt;&gt; MULTICAST
cd -
make kernel KERNCONF=MULTICAST
reboot
</code></pre>
<p>That&rsquo;s it.  Remember to make sure your Qemu VM has enough RAM or it
will probably page fault on you.  I use 1,0 GB RAM.</p>
<p>The other option, to load the ready made module, is likely better.  But
you want it to load at boot.  So add this to <code>/boot/loader.conf</code>:</p>
<pre><code>ip_mroute_load=&quot;yes&quot;
</code></pre>
]]></content>
        </item>
        
        <item>
            <title>GnuTLS support in Inadyn and fixes to uftpd</title>
            <link>/2014/09/13/gnutls-support-in-inadyn-and-fixes-to-uftpd/</link>
            <pubDate>Sat, 13 Sep 2014 19:18:56 +0000</pubDate>
            
            <guid>/2014/09/13/gnutls-support-in-inadyn-and-fixes-to-uftpd/</guid>
            <description>Quite a few changes lately. I finally got around to adding support for GnuTLS to Inadyn, hopefully this will get into Debian &amp;hellip; unless the Jessie freeze prevents that.
Also, thanks to a friend of mine trying out uftpd recently I discovered that libuev has been missing from the tarball since the release of the TFTP support. Fixed.
Another great piece of news is that Coverity accepted uftpd as an Open Source project, I&amp;rsquo;ve been hard at work fixing nasty bugs uncovered by the Coverity Scan.</description>
            <content type="html"><![CDATA[<p>Quite a few changes lately.  I finally got around to adding support
for <a href="http://www.gnutls.org">GnuTLS</a> to <a href="/inadyn.html">Inadyn</a>,
hopefully this will get into Debian &hellip; unless the Jessie freeze
prevents that.</p>
<p>Also, thanks to a friend of mine trying out <a href="/uftpd.html">uftpd</a>
recently I discovered that libuev has been missing from the tarball
since the release of the TFTP support.  Fixed.</p>
<p>Another great piece of news is that
<a href="http://www.coverity.com/">Coverity</a> accepted uftpd as an Open Source
project, I&rsquo;ve been hard at work fixing nasty bugs uncovered by the
<a href="https://scan.coverity.com/">Coverity Scan</a>.  Great stuff! :)</p>
]]></content>
        </item>
        
        <item>
            <title>Bugfix release of uftpd</title>
            <link>/2014/09/04/bugfix-release-of-uftpd/</link>
            <pubDate>Thu, 04 Sep 2014 22:22:09 +0000</pubDate>
            
            <guid>/2014/09/04/bugfix-release-of-uftpd/</guid>
            <description>So them pesky details of /etc/inetd.conf really are important?
 This is a small bugfix release of uftpd. Version 1.4 is basically just to change nowait to wait for the TFTP service in /etc/inetd.conf, but there&amp;rsquo;s also a minor man page update.
Enjoy! :)</description>
            <content type="html"><![CDATA[<blockquote>
<p>So them pesky details of <code>/etc/inetd.conf</code> really are important?</p>
</blockquote>
<p>This is a small bugfix release of <a href="/uftpd.html">uftpd</a>.  Version 1.4
is basically just to change <code>nowait</code> to <code>wait</code> for the TFTP service in
<code>/etc/inetd.conf</code>, but there&rsquo;s also a minor man page update.</p>
<p>Enjoy! :)</p>
]]></content>
        </item>
        
        <item>
            <title>The awesome uftpd, now w/ TFTP support! :)</title>
            <link>/2014/09/02/new-release-of-the-awesome-uftpd/</link>
            <pubDate>Tue, 02 Sep 2014 10:47:35 +0000</pubDate>
            
            <guid>/2014/09/02/new-release-of-the-awesome-uftpd/</guid>
            <description>Today sees the release of v1.3 of the awesome little uftpd. The main news is the new TFTP support! Just like before you don&amp;rsquo;t need any configuration file, just build and install &amp;ndash; or build a .deb file and install.
This release completes the main purpose of uftpd for me, I can now use it as my daily driver and fully replace vsftpd and tftpd-hpa, which to me are the next best.</description>
            <content type="html"><![CDATA[<p>Today sees the release of v1.3 of the awesome little uftpd. The main
news is the new TFTP support!  Just like before you don&rsquo;t need any
configuration file, just build and install &ndash; or build a .deb file and
install.</p>
<p>This release completes the main purpose of uftpd for me, I can now use
it as my daily driver and fully replace vsftpd and tftpd-hpa, which to
me are the next best.</p>
<p>What&rsquo;s left then, you ask?  Well, TFTP upload support, TFTP segment
size negotiation and possibly multiple user support in FTP.  As
always, patches are most welcome.  See the
<a href="/uftpd.html">uftpd homepage</a> and my
<a href="https://github.com/troglobit/uftpd/">GitHub project</a> for details.</p>
]]></content>
        </item>
        
        <item>
            <title>HowTo Rebase without an origin</title>
            <link>/2014/08/27/howto-rebase-without-an-origin/</link>
            <pubDate>Wed, 27 Aug 2014 10:00:13 +0000</pubDate>
            
            <guid>/2014/08/27/howto-rebase-without-an-origin/</guid>
            <description>OK, so you&amp;rsquo;ve just been handed the task to integrate a big piece of corporate software and it&amp;rsquo;s nowhere near as done and ready as project management thinks. Of course you&amp;rsquo;ve already started chugging away at it, fixing bugs, refactoring code and wrapping it in neat containers to keep the changeset against the base SW small &amp;ndash; you already know you&amp;rsquo;ll get another drop of the same stinking pieace of code in another six months, so you keep the changes small and track them in GIT with neatly formatted commit messages.</description>
            <content type="html"><![CDATA[<p>OK, so you&rsquo;ve just been handed the task to integrate a big piece of
corporate software and it&rsquo;s nowhere near as done and ready as project
management thinks.  Of course you&rsquo;ve already started chugging away at
it, fixing bugs, refactoring code and wrapping it in neat containers
to keep the changeset against the base SW small &ndash; you already know
you&rsquo;ll get another drop of the same stinking pieace of code in another
six months, so you keep the changes small and track them in GIT with
neatly formatted commit messages.</p>
<p>About ten commits in it dawns on you that you have several commits
that would need to be squashed and some commit messages that needs to
be edited &hellip; you start typing in <code>git rebase -i origin/...</code> wait, you
haven&rsquo;t pushed anything yet.  So how do you rebase something that&rsquo;s
not been pushed yet?</p>
<p>Well:</p>
<pre><code>git rebase --interactive --root master
</code></pre>
<p>Tip courtesy of my friend and collegue <a href="https://github.com/wkz">wkz</a></p>
]]></content>
        </item>
        
        <item>
            <title>On the demise of free(code) ...</title>
            <link>/2014/06/29/on-the-demise-of-free-code-dot-dot-dot/</link>
            <pubDate>Sun, 29 Jun 2014 14:52:39 +0000</pubDate>
            
            <guid>/2014/06/29/on-the-demise-of-free-code-dot-dot-dot/</guid>
            <description>&lt;p&gt;I feel I have to write something about the demise of
&lt;a href=&#34;http://freecode.com&#34;&gt;free(code)&lt;/a&gt;.
&lt;a href=&#34;http://esr.ibiblio.org/?p=5936&#34;&gt;Others&lt;/a&gt; have written about it too,
and its been covered on &lt;a href=&#34;http://lwn.net/Articles/603403/&#34;&gt;lwn.net&lt;/a&gt; as
well.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s actually a rather depressing development.  They claim it&amp;rsquo;s due to
the low traffic and decline in updates, but it&amp;rsquo;s evident that&amp;rsquo;s not
the whole truth.  The owners recommend their other site, SourceForge,
but anyone having been in the loop for the last decade or two knows
that SourceForge has been in a slow decline for a long time, more so
than free(code) in my opinion.  Also, SourceForge only lists its own
projects, and only the most active or &amp;ldquo;top&amp;rdquo; projects.&lt;/p&gt;
&lt;p&gt;I never used free(code) to find the &amp;ldquo;top&amp;rdquo; projects or the most active
ones.  That&amp;rsquo;s completely useless to me.  I went there to dig for small
unknown projects, small gems that are usually unlisted on GitHub or
SourceForge.  I went there to publicize my own small creations, learn
about other similar projects and get a quick feedback on recent
changes of new releases to projects I was interested in.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>I feel I have to write something about the demise of
<a href="http://freecode.com">free(code)</a>.
<a href="http://esr.ibiblio.org/?p=5936">Others</a> have written about it too,
and its been covered on <a href="http://lwn.net/Articles/603403/">lwn.net</a> as
well.</p>
<p>It&rsquo;s actually a rather depressing development.  They claim it&rsquo;s due to
the low traffic and decline in updates, but it&rsquo;s evident that&rsquo;s not
the whole truth.  The owners recommend their other site, SourceForge,
but anyone having been in the loop for the last decade or two knows
that SourceForge has been in a slow decline for a long time, more so
than free(code) in my opinion.  Also, SourceForge only lists its own
projects, and only the most active or &ldquo;top&rdquo; projects.</p>
<p>I never used free(code) to find the &ldquo;top&rdquo; projects or the most active
ones.  That&rsquo;s completely useless to me.  I went there to dig for small
unknown projects, small gems that are usually unlisted on GitHub or
SourceForge.  I went there to publicize my own small creations, learn
about other similar projects and get a quick feedback on recent
changes of new releases to projects I was interested in.</p>
<p>There exist no real replacement to free(code), except perhaps for
<a href="https://www.openhub.net/">Open Hub</a>, previously known as
<a href="http://www.ohloh.net">Ohloh</a>.  The
<a href="http://directory.fsf.org">Free Software Directory</a> could perhaps have
become something over time, but unfortunately feels like yet another
<a href="http://www.catb.org/esr/writings/cathedral-bazaar/">Cathedral Style</a>
project from the FSF.  Don&rsquo;t get me wrong, I love the FSF and almost
everything they do, but they often get lost in their old tradition of
big closed off idealistic projects.  Eric S. Raymond has
<a href="http://esr.ibiblio.org/?p=5948">a proposal</a> for replacing free(code)
and he is that sort of pragmatic person that could get something off
the ground.  In any case it&rsquo;ll be interesting, I&rsquo;m sure.</p>
<p>Some people say all the action is on GitHub these days, but that&rsquo;s
just like an echo of the glory days of CVS, Subversion and the start
of the new millenia when we should all use SourceForge.  Been there,
done that, and yes I do use GitHub, but again it doesn&rsquo;t list anything
but GitHub projects &hellip;</p>
<p>Other people say that to promote your small projects you need to
become active in a Linux distro, or write about them in magazines or
on <a href="http://hackerne.ws">Hacker News</a> &hellip; well, I&rsquo;d like very much to
become a Debian developer one day, but the process to become one seems
so increadibly daunting!  Also, I&rsquo;m not a writer, nor am I a native
English speaker, I&rsquo;m
<a href="http://c2.com/cgi/wiki?JustaProgrammer">just a programmer</a> and I
really miss free(code)!</p>
<p>I don&rsquo;t expect this blog to have any readers at all, so using it as
the sole platform for announcing new releases is rather pointless.  So
I&rsquo;ve started playing around with
<a href="https://www.openhub.net/accounts/troglobit">Open Hub</a> for my own most
relevant projects.  It has some nice stats and other useful features
that I can use.  Hopefully it can serve as a replacement for my most
basic needs.</p>]]></content>
        </item>
        
        <item>
            <title>New releases of uftpd and inadyn ...</title>
            <link>/2014/05/20/new-release-of-uftpd-and-inadyn-dot-dot-dot/</link>
            <pubDate>Tue, 20 May 2014 21:08:25 +0000</pubDate>
            
            <guid>/2014/05/20/new-release-of-uftpd-and-inadyn-dot-dot-dot/</guid>
            <description>The last couple of weeks have both seen the birth of the fabulous uftpd and a reignited inadyn project! Yesterday v1.2 of uftpd was released and today Inadyn saw the first working HTTPS support being released as v1.99.8! This is likely the last release of Inadyn before the big 2.0, which will introduce the new .conf file format based on libConfuse. A .conf file feasibility study was presented earlier &amp;hellip;</description>
            <content type="html"><![CDATA[<p>The last couple of weeks have both seen the birth of the fabulous
<a href="/uftpd.html">uftpd</a> and a reignited <a href="/inadyn.html">inadyn</a> project!
Yesterday v1.2 of uftpd was released and today Inadyn saw the first
working HTTPS support being released as v1.99.8!  This is likely the
last release of Inadyn before the big 2.0, which will introduce the
new .conf file format based on
<a href="http://www.nongnu.org/confuse/">libConfuse</a>.  A .conf file
feasibility study was
<a href="/blog/2014/02/23/weekend-hack-json-vs-conf/">presented earlier</a> &hellip;</p>
<p>The uftpd project is completely based on user input, currently mostly
mine.  I will add features and bug fixes when I need them, unless I
get more input.  So I welcome anyone to clone it on GitHub and hack
away.  As usual, I will accept any sane patches that adhere to the
coding style and is well written.  The same goes for Inadyn, only with
the added request that the changes are thoroughly tested first, since
I cannot maintain multiple accounts on various DDNS providers myself.</p>
<p>Patches to support flavors of UNIX other than GNU/Linux, including
GNU/Hurd, or even other operating systems are also welcome, as long as
it&rsquo;s not Windows.  I will not maintain any Windows support since I
don&rsquo;t use it myself.  If you want Windows support you will have to
take a very active co-maintainer role in the respective project.</p>
]]></content>
        </item>
        
        <item>
            <title>New release of the DDNS client Inadyn</title>
            <link>/2014/05/14/new-release-of-the-ddns-client-inadyn/</link>
            <pubDate>Wed, 14 May 2014 08:29:48 +0000</pubDate>
            
            <guid>/2014/05/14/new-release-of-the-ddns-client-inadyn/</guid>
            <description>Looking for a Dynamic DNS, DDNS, client? Well you&amp;rsquo;re in luck, the FLOSS market space is flooded with dedicated clients and various wget scripts. So why bother with an old C implementation? Well, this is admittedly one of the old timers in the game and is likely packaged for your GNU/Linux distribution of choice already. It&amp;rsquo;s tried and tested with many DDNS service providers and even comes bundled in a few embedded router distributions as well.</description>
            <content type="html"><![CDATA[<p>Looking for a Dynamic DNS, DDNS, client?  Well you&rsquo;re in luck, the
<a href="http://en.wikipedia.org/wiki/Alternative_terms_for_free_software" title="FLOSS">FLOSS</a> market space is flooded with dedicated clients and various
wget scripts.  So why bother with an old C implementation?  Well, this
is admittedly one of the old timers in the game and is likely packaged
for your GNU/Linux distribution of choice already.  It&rsquo;s tried and
tested with many DDNS service providers and even comes bundled in a
few embedded router distributions as well.</p>
<p>Today I&rsquo;ve released <a href="/inadyn.html">Inadyn</a> v1.99.7 as an XZ compressed
tarball.  The release announcement should be up on <a href="https://freecode.com/projects/inadyn">free(code)</a>
now.  It&rsquo;s a small incremental release containing mainly code cleanup
and a few new features that you likely won&rsquo;t notice: support for
multiple cache files and DDNS providers as separate plugins, for easy
addition of new ones as well as maintenance of existing.  This further
separates the internal logic from the provider specific parts and also
helps reduce clutter to ease maintenance.</p>
<p>This is a small incremental release building up to the long awaited
v2.0, which will include the long-awaited HTTPS support and also a new
.conf file format.  The latter is not really welcomed with open arms
by users, but is a necessary step since the current parser is heavily
affected by bit rot and must be put down.  I will attempt to make the
transition as easy as possible, but you will need to change you .conf
files.</p>
<p>Maybe a preview of the HTTPS support will make it into a release that
still has the old .conf file format, but just maybe.</p>
]]></content>
        </item>
        
        <item>
            <title>Why write your own FTP server?</title>
            <link>/2014/05/04/why-write-your-own-ftp-server/</link>
            <pubDate>Sun, 04 May 2014 11:25:09 +0000</pubDate>
            
            <guid>/2014/05/04/why-write-your-own-ftp-server/</guid>
            <description>&lt;p&gt;So, I finally got fed up with all other FTP servers and wrote
&lt;a href=&#34;/uftpd.html&#34;&gt;my own&lt;/a&gt;.  Why would someone in their right mind do
something like this 2014?&lt;/p&gt;
&lt;p&gt;As a developer the answer to most such questions is usually; to
scratch an itch.  For a very long time I&amp;rsquo;ve looked for a really simple
FTP server that just works, out of the box!&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>So, I finally got fed up with all other FTP servers and wrote
<a href="/uftpd.html">my own</a>.  Why would someone in their right mind do
something like this 2014?</p>
<p>As a developer the answer to most such questions is usually; to
scratch an itch.  For a very long time I&rsquo;ve looked for a really simple
FTP server that just works, out of the box!</p>
<p>My alternatives on GNU/Linux distributions have been: several variants
of the original <a href="https://github.com/mit-athena/ftpd">MIT/Athena ftpd</a>,
<a href="http://www.proftpd.org/">ProFTPD</a>,
<a href="http://www.pureftpd.org/project/pure-ftpd">Pure-FTPd</a>, and
<a href="https://security.appspot.com/vsftpd.html">vstfptd</a>.  Most of them are
too damn difficult to configure, have ugly configuration files or are
plainly just too confusing.  With one exception, vsftpd.  I really
like vsftpd!  It&rsquo;s got a simple and well documented configuration file
(inline as comments) and always worked almost painlessly for me.</p>
<p>However, over the past couple of Ubuntu LTS installations it&rsquo;s been
starting to act up on me.  Not allowing me to have a group-writable
root directory, and not even an ability to disable that security
feature.</p>
<p>It&rsquo;s simple really.  I&rsquo;m a developer.  I have colleagues.  We share
servers at work.  We bootstrap and upgrade our embedded devices using
TFTP/FTP.  We have one directory, usually <code>/srv/ftp</code>, which is group
writable and all developers are members of that group.  Anyone can
upload a file there and the file servers &hellip; would you know &hellip; are
supposed to <em>serve</em> that file, as TFTP or anonymous FTP.</p>
<p>Maybe I&rsquo;m a fringe user?  Maybe secured local area networks, or laptop
to embedded device crossed-cables networks, are no longer the &ldquo;fad&rdquo;?
Maybe a sane built-in default is no longer cool or hipster enough?</p>
<p>I don&rsquo;t know anymore, and this time I was so fed up chasing around for
answers to &ldquo;How to setup your &lsquo;favorite&rsquo; FTP Server&rdquo;, that I just sat
down and fixed it once and for all.  I figured I&rsquo;d otherwise be doing
this waltz over and over again, just like I already have, for the next
10 years &hellip;</p>
<p>I trawled the net once more for good candidates, this time for
adoption and holy cow sacrifices.  I wanted a very simple base to
start from, which I could cut up into pieces, iteratively refactor and
improve upon until I was happy.  That took a while.</p>
<p>I&rsquo;m a big fan of both the Free Software and the Open Source cultures.
(They are slightly different you know.)  I routinely work on software
with GNU GPL, MIT/X11, Apache, and ISC licenses, but for most of my
own creations I usually lean towards the very permissive
<a href="http://en.wikipedia.org/wiki/ISC_license">ISC license</a>.  Maybe
because most of my hobby work these days are quick and dirty hacks I
don&rsquo;t really care enough about.  It&rsquo;s a question of both taste and
appropriateness &ndash; like software patents, I don&rsquo;t like them either,
but for anything which I have a great investment in, or has a great
<a href="http://en.wikipedia.org/wiki/Threshold_of_originality">threshold of originality</a>,
I&rsquo;d use a more restrictive license to make sure the software is kept
in the open.</p>
<p>Anyway, I read much code, discarded several projects that were too
big, too unreadable code or simply didn&rsquo;t feel right.  I tested so
many small &ldquo;FTP&rdquo; servers that turned out to be unusable homegrown
variants or school projects.  There&rsquo;s a lot of code out there &hellip;  I
finally settled on <a href="https://github.com/xu-wang11/FtpServer">FtpServer</a>
by <a href="https://github.com/xu-wang11">Xu Wang</a> as a base for my little
project.  I suspect it too is a school project, but this one actually
worked, right off the bat!</p>
<p>I got so excited that I immediately started improving it, cleaning up
the source code, reindenting it (KNF) and fixing small bugs here and
there.  It was a perfect fit!  This is where I made my big mistake,
which I hope will not eventually kill this project in the end &ndash; the
FtpServer project did not have a license &hellip; so
<a href="https://github.com/xu-wang11/FtpServer/issues/1">I filed a bug</a> to
the GitHub issue tracker, added the ISC license to
<a href="https://github.com/troglobit/uftpd">my fork</a> and continued hacking
away.  The changes I&rsquo;ve made are so substantial that there isn&rsquo;t much
left of the original code, so uftpd should be safe.  Yes, I named it
uftpd, the micro ftp server &ndash; the no nonsense file transfer protocol
daemon.</p>
<p>The whole hack took about three days and I&rsquo;ve learned a lot during
this time!  It was fun, inspiring and gave me a lot of creative energy
that I can use in other projects: at work as well as at home :)</p>
<p>See the <a href="/uftpd.html">uftpd project home</a> for download links.</p>]]></content>
        </item>
        
        <item>
            <title>Release of Finit v1.9</title>
            <link>/2014/04/21/release-of-finit-v1-dot-9/</link>
            <pubDate>Mon, 21 Apr 2014 16:08:30 +0000</pubDate>
            
            <guid>/2014/04/21/release-of-finit-v1-dot-9/</guid>
            <description>Just made it! Here&amp;rsquo;s the result of #Easterhack14 &amp;ndash; Finit v1.9 :-)
Nothing fancy this time, just collecting some bug fixes, playing with cppcheck a bit and adding support for including .conf files. Quite useful if you want to partition your configuration, or if you share major pieces of configuration between different platforms.
Enjoy!</description>
            <content type="html"><![CDATA[<p>Just made it!  Here&rsquo;s the result of #Easterhack14 &ndash;
<a href="/finit.html">Finit</a> v1.9 :-)</p>
<p>Nothing fancy this time, just collecting some bug fixes, playing with
cppcheck a bit and adding support for including .conf files.  Quite
useful if you want to partition your configuration, or if you share
major pieces of configuration between different platforms.</p>
<p>Enjoy!</p>
]]></content>
        </item>
        
        <item>
            <title>Finally — Google Movies &amp; Music in Sweden</title>
            <link>/2014/03/18/finally-google-movies-and-music-in-sweden/</link>
            <pubDate>Tue, 18 Mar 2014 00:00:00 +0000</pubDate>
            
            <guid>/2014/03/18/finally-google-movies-and-music-in-sweden/</guid>
            <description>So, we finally got Google Music &amp;amp; Movies services in Sweden! The prices seem a bit on the steep side, apart from maybe the Music service, which is slightly cheaper than Spotify. Will try it out for a month or so to see which one I like better.
For some reason I chose Gravity as my first rental, at 39 Skr. I&amp;rsquo;ve heard so many bad reviews of it but for better or worse it&amp;rsquo;ll now be my introduction to Google Movies :-)</description>
            <content type="html"><![CDATA[<img src="/images/play-movies.png" style="width: 364px; float: right">
<p>So, we finally got Google Music &amp; Movies services in Sweden!  The
prices seem a bit on the steep side, apart from maybe the Music
service, which is slightly cheaper than Spotify.  Will try it out for
a month or so to see which one I like better.</p>
<p>For some reason I chose Gravity as my first rental, at 39 Skr.  I&rsquo;ve
heard so many bad reviews of it but for better or worse it&rsquo;ll now be
my introduction to Google Movies :-)</p>
]]></content>
        </item>
        
        <item>
            <title>Weekend Hack: JSON vs CONF</title>
            <link>/2014/02/23/weekend-hack-json-vs-conf/</link>
            <pubDate>Sun, 23 Feb 2014 00:00:00 +0000</pubDate>
            
            <guid>/2014/02/23/weekend-hack-json-vs-conf/</guid>
            <description>It was time. I had been putting it off for far too long &amp;ndash; learning about JSON and deciding on a new .conf file format for Inadyn. So this weekend I sat myself down to read up on JSON and the multitude of parser libraries for both JSON and traditional .conf file parsers. I was looking for a human readable file format that a user could easily and reliably edit by themselves without it being too error prone or sensitive to mistyping.</description>
            <content type="html"><![CDATA[<p>It was time.  I had been putting it off for far too long &ndash; learning
about JSON and deciding on a new .conf file format for
<a href="/inadyn.shtml">Inadyn</a>.  So this weekend I sat myself down to read up
on <a href="http://en.wikipedia.org/wiki/JSON">JSON</a> and the multitude of
parser libraries for both JSON and traditional .conf file parsers.  I
was looking for a human readable file format that a user could easily
and reliably edit by themselves without it being too error prone or
sensitive to mistyping.</p>
<script type="application/javascript" src="https://gist.github.com/troglobit/9177645.js"></script>

<p>I quickly narrowed down my scope of investigation to
<a href="http://www.digip.org/jansson/">Jansson</a> for JSON and and
<a href="http://www.nongnu.org/confuse/">Confuse</a> for &ldquo;standard&rdquo; UNIX .conf
files.  Both have very liberal licenses, extensive test suites, very
good documentation and are extremely well written!  In fact, I will
probably use them as prime examples of well maintained Open Source
projects in the future :-)</p>
<p>The resulting code is in my
<a href="https://github.com/troglobit/toolbox/tree/master/conf">toolbox</a> on
GitHub.</p>
<script type="application/javascript" src="https://gist.github.com/troglobit/9177620.js"></script>

<p>In my opinion the .conf file is a lot easier to read, write and edit
by Joe User, so that&rsquo;s what I&rsquo;ll be using for many of my own projects,
starting with <a href="/inadyn.shtml">Inadyn</a></p>
]]></content>
        </item>
        
        <item>
            <title>Just a Programmer</title>
            <link>/2013/08/13/just-a-programmer/</link>
            <pubDate>Tue, 13 Aug 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/08/13/just-a-programmer/</guid>
            <description>&lt;p&gt;Sometimes people ask me what I do for a living.  Usually I tend to
pause and think, real hard, becuase the people asking me this aren&amp;rsquo;t
programmers.  They use computers, but are mostly limited to a Windows
machine, writing in MS Word and browsing the Internet, mostly for
Facebook.&lt;/p&gt;
&lt;p&gt;I often start off with: &amp;ldquo;It&amp;rsquo;s a bit complicated to explain &amp;hellip; &amp;ldquo;, by
which time I&amp;rsquo;ve lost most of the people in the room listening to me.
Sometimes I say: &amp;ldquo;I&amp;rsquo;m a software architect.&amp;quot;, because people seem to
know what architects do for a living, they draw houses, design stuff
and drive SAAB&amp;rsquo;s.  Much like dentists.  The prefix &amp;ldquo;software&amp;rdquo; however
does confuse people.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Sometimes people ask me what I do for a living.  Usually I tend to
pause and think, real hard, becuase the people asking me this aren&rsquo;t
programmers.  They use computers, but are mostly limited to a Windows
machine, writing in MS Word and browsing the Internet, mostly for
Facebook.</p>
<p>I often start off with: &ldquo;It&rsquo;s a bit complicated to explain &hellip; &ldquo;, by
which time I&rsquo;ve lost most of the people in the room listening to me.
Sometimes I say: &ldquo;I&rsquo;m a software architect.&quot;, because people seem to
know what architects do for a living, they draw houses, design stuff
and drive SAAB&rsquo;s.  Much like dentists.  The prefix &ldquo;software&rdquo; however
does confuse people.</p>
<img style="float: right" src="/images/programming-in-a-nutshell.gif">
<p>In reality I&rsquo;m <a href="http://c2.com/cgi/wiki?JustaProgrammer">just a programmer</a> with a little bit more
responsibility.  A day starts with coming in to the office, or sitting
down in my home office, connecting to the company VPN, meanwhile
planning loosely the day and my goals.  All while checking status of
e-mail, our IRC channel and the issue tracker for any recently
reported/updated issues in my fields of responsibility.  Somewhere
around there I have a pretty good idea about what must be done and in
what order.  So I write it down, in no particular order, on folded A4
sheets I use for TODO lists and start working.  About 20 minutes into
that, when I&rsquo;ve just reached <a href="http://c2.com/cgi/wiki?InTheZone">The Zone</a>, I get interrupted for an
impromptu meeting, or <a href="https://en.wikipedia.org/wiki/Conference_call">telco</a>, which in turn always leads to another
meeting, which in turn runs over and suddenly it&rsquo;s 16:00 (4 pm) and I
have 45 minutes to complete a days work before picking up the kids from
school.</p>
<p>Or &hellip; you can apply that same crazy to a day when trying to fix a
simple bug, finding another horrbile bug and fixing that first,
leading to a minor redesign in need of a refactor, which in turn gives
me a pain to merge since during the time I tried fixing that minor bug
my collegues have done multiple changes to the same files I&rsquo;ve been
working on.</p>
<p>That&rsquo;s what I do for a living.  And yes, I know it&rsquo;s not sustainable
work conditions.  I&rsquo;m working on that, it&rsquo;s on the TODO list &hellip;</p>]]></content>
        </item>
        
        <item>
            <title>On commit messages ...</title>
            <link>/2013/08/13/on-commit-messages-dot-dot-dot/</link>
            <pubDate>Tue, 13 Aug 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/08/13/on-commit-messages-dot-dot-dot/</guid>
            <description>There&amp;rsquo;s just one thing to say on the topic of commit messages: ur doin it wrong if &amp;hellip;</description>
            <content type="html"><![CDATA[<p>There&rsquo;s just one thing to say on the topic of commit messages:
<a href="http://stopwritingramblingcommitmessages.com/">ur doin it wrong if &hellip;</a></p>
]]></content>
        </item>
        
        <item>
            <title>On the Linearity of Time</title>
            <link>/2013/08/09/on-the-linearity-of-time/</link>
            <pubDate>Fri, 09 Aug 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/08/09/on-the-linearity-of-time/</guid>
            <description>&lt;p&gt;Don&amp;rsquo;t try this at home kids. (Disclaimer: I live in Sweden :)&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Don&rsquo;t try this at home kids. (Disclaimer: I live in Sweden :)</p>
<script type="application/javascript" src="https://gist.github.com/coffeemug/6168031.js"></script>]]></content>
        </item>
        
        <item>
            <title>Threads vs Events</title>
            <link>/2013/08/06/event-handling/</link>
            <pubDate>Tue, 06 Aug 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/08/06/event-handling/</guid>
            <description>&lt;p&gt;This is a rant about something I recently found to be a long standing
battle line in the world of programming,
&lt;a href=&#34;http://cgi.di.uoa.gr/~mema/courses/mde518/papers/lauer78.pdf&#34;&gt;Lau78&lt;/a&gt;.
The event vs thread based approach to programming.  As rants go I do
not aspire to deliver a clear or logical message, what so ever.  It&amp;rsquo;s
basically just something I need to get off my chest.&lt;/p&gt;
&lt;p&gt;It was not until 2007 I first learned about the event based approach
to programming and event libraries like
&lt;a href=&#34;http://libevent.org/&#34;&gt;libevent&lt;/a&gt; and
&lt;a href=&#34;http://software.schmorp.de/pkg/libev.html&#34;&gt;libev&lt;/a&gt;.  Up until that
point the silver bullet everyone was using was &amp;hellip; Threads.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This is a rant about something I recently found to be a long standing
battle line in the world of programming,
<a href="http://cgi.di.uoa.gr/~mema/courses/mde518/papers/lauer78.pdf">Lau78</a>.
The event vs thread based approach to programming.  As rants go I do
not aspire to deliver a clear or logical message, what so ever.  It&rsquo;s
basically just something I need to get off my chest.</p>
<p>It was not until 2007 I first learned about the event based approach
to programming and event libraries like
<a href="http://libevent.org/">libevent</a> and
<a href="http://software.schmorp.de/pkg/libev.html">libev</a>.  Up until that
point the silver bullet everyone was using was &hellip; Threads.</p>
<p>I don&rsquo;t really know when it all started, maybe it was the Linux
revolution, the first NPTL release with GLIBC, Java or Solaris.
Nevertheless, from my point of view it was sometime in the mid 90&rsquo;s
during my time at university that the use of threads was starting to
become prevalent.</p>
<p data-pullquote='"With the rise of the thread based model of
programming we now had a hammer, and every problem looked like a
nail."'>I had a gut feeling there was something really wrong with using
threads for every conceivable program, but I could not find a way to
express it, so I chugged away with my threads, semaphores and condition
variables.  I convinced myself I was happy like this.</p>
<p>Of course I knew about the event based approach, but it was more or
less dismissed as a thing of the past, a while(1) loop to mimic the
behavior of PLC&rsquo;s.  So almost every program I wrote, and every program
I took over from others, were like Indiana Jones types of mazes full
of deadlocks and race conditions.</p>
<p>I thought I did something wrong, and so did many others like me.  I
spent days and nights trying to understand, refactor, and redesign
threaded programs.  What I found was a doubt that the thread based
model actually didn&rsquo;t suit every problem,
<a href="http://www.cc.gatech.edu/classes/AY2009/cs4210_fall/papers/ousterhout-threads.pdf">Ous96</a>.
There are quite a few domains, however, where thread based models
shine. Usually in languages that come with thread support built-in,
like Erlang.</p>
<p>Most of the programs I work with today are network daemons.  Meaning
they are essentially message based applications that spend a lot of
time waiting for an event to occur: receiving a data frame, waiting
for a timer to expire, a signal to be raised, etc.  Of course threads
can be used for this, but it is a lot simpler to employ an event based
framework instead.  Also, they are all written in C for speed and
portability between different UNIX systems.  For that domain, where I
currently make my living, it will be difficult to convince me to ever
look at threads again.</p>]]></content>
        </item>
        
        <item>
            <title>New Open Source Releases</title>
            <link>/2013/07/12/new-open-source-releases/</link>
            <pubDate>Fri, 12 Jul 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/07/12/new-open-source-releases/</guid>
            <description>Vacation time means catching up on my Open Source projects! :)
Currently I&amp;rsquo;m shaping up the home pages and this blog to improve the easy access and overview of all the packages I maintain. The following packages have new releases, or can expect new releases soon:
 Minix Editline v1.14.1 SMCRoute v1.99.1 &amp;ndash; There&amp;rsquo;s even a v2.0.0 being planned, with the core of SMCRoute available as a library mrouted minor cleanup an sync with OpenBSD pimd cleanups and bug fixes, needs testing inadyn is in dire need of a release, but needs more testing and fixes  As usual, see my GitHub for the latest commits if you want to try anything out, file an issue report, or if you want to contribute.</description>
            <content type="html"><![CDATA[<p>Vacation time means catching up on my Open Source projects! :)</p>
<p>Currently I&rsquo;m shaping up the home pages and this blog to improve the
easy access and overview of all the packages I maintain.  The
following packages have new releases, or can expect new releases soon:</p>
<ul>
<li><a href="/editline.html">Minix Editline</a> v1.14.1</li>
<li><a href="/smcroute.html">SMCRoute</a> v1.99.1 &ndash; There&rsquo;s even a v2.0.0 being
planned, with the core of SMCRoute available as a library</li>
<li><a href="/mrouted.html">mrouted</a> minor cleanup an sync with
<a href="http://www.openbsd.org/cgi-bin/cvsweb/src/usr.sbin/mrouted/">OpenBSD</a></li>
<li><a href="/pimd.html">pimd</a> cleanups and bug fixes, needs testing</li>
<li><a href="/inadyn.html">inadyn</a> is in dire need of a release, but needs more testing and fixes</li>
</ul>
<p>As usual, see my <a href="http://github.com/troglobit">GitHub</a> for the latest
commits if you want to try anything out, file an issue report, or if
you want to contribute.</p>
]]></content>
        </item>
        
        <item>
            <title>Net Install CentOS</title>
            <link>/2013/07/10/net-install-centos/</link>
            <pubDate>Wed, 10 Jul 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/07/10/net-install-centos/</guid>
            <description>I usually run Debian or Ubuntu on my machines. However, having recently found some time to work on my various projects again, I&amp;rsquo;ve now suddenly found myself in need of a CentOS machine.
The CentOS home page invited me to download an installation ISO, so I went for the small Net Install which started perfectly with my virt-manager in Ubuntu.
All I had to provide was an FTP server and directory:</description>
            <content type="html"><![CDATA[<p>I usually run Debian or Ubuntu on my machines.  However, having
recently found some time to work on my various projects again, I&rsquo;ve
now suddenly found myself in need of a CentOS machine.</p>
<p>The <a href="http://www.centos.org/">CentOS home page</a> invited me to download
an installation ISO, so I went for the small
<a href="http://ftp.funet.fi/pub/mirrors/centos.org/5.9/isos/x86_64/CentOS-5.9-x86_64-netinstall.iso">Net Install</a>
which started perfectly with my virt-manager in Ubuntu.</p>
<p>All I had to provide was an FTP server and directory:</p>
<ul>
<li>mirrors.kernel.org</li>
<li>/centos/5.9/os/x86_64</li>
<li>Anonymous FTP</li>
</ul>
<p>That&rsquo;s it, the graphical installer started and I had to start
selecting various packages. Must say it&rsquo;s a bit confusing since the
package naming is not the same in RedHat/CentOS as in Debian.</p>
<p>Oh, and if the installations seems to have gotten stuck, just wait it
out.  It&rsquo;ll get there :)</p>
<p>Read the following to get
<a href="http://prefetch.net/blog/index.php/2009/06/17/redirecting-the-centos-and-fedora-linux-console-to-a-serial-port-virsh-console-edition/">console in virsh working with CentOS guest</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>File System Pass-Through in KVM/Qemu/libvirt</title>
            <link>/2013/07/05/file-system-pass-through-in-kvm-slash-qemu-slash-libvirt/</link>
            <pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/07/05/file-system-pass-through-in-kvm-slash-qemu-slash-libvirt/</guid>
            <description>&lt;p&gt;This post doesn&amp;rsquo;t cover fully setting up KVM/Qemu with virt-manager
and creating virtual machine guests.  See the Ubuntu
&lt;a href=&#34;https://help.ubuntu.com/community/KVM/Installation&#34;&gt;KVM Installtion&lt;/a&gt;,
&lt;a href=&#34;https://help.ubuntu.com/community/KVM/VirtManager&#34;&gt;VirtManager Guide&lt;/a&gt;,
the
&lt;a href=&#34;https://help.ubuntu.com/13.04/serverguide/libvirt.html&#34;&gt;Ubuntu Server Guide on libvirt&lt;/a&gt;,
or
&lt;a href=&#34;http://www.howtoforge.com/virtualization-with-kvm-on-ubuntu-12.04-lts-p3&#34;&gt;HowtoForge&lt;/a&gt;
for that.&lt;/p&gt;
&lt;p&gt;Instead this blog post details the most relevant steps to get file
system pass-through between a Linux host and Qemu guest working.  The
upstream &lt;a href=&#34;http://wiki.qemu.org/Documentation/9psetup&#34;&gt;Qemu docs&lt;/a&gt;
provide a good starting point, as is the original
&lt;a href=&#34;https://www.kernel.org/doc/ols/2010/ols2010-pages-109-120.pdf&#34;&gt;IBM paper on VirtFS&lt;/a&gt;.
For users of Ubuntu &amp;lt;= 13.04, watch out for the
&lt;a href=&#34;https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/943680&#34;&gt;libvirt bug&lt;/a&gt;
that I know many people run into, myself included.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This post doesn&rsquo;t cover fully setting up KVM/Qemu with virt-manager
and creating virtual machine guests.  See the Ubuntu
<a href="https://help.ubuntu.com/community/KVM/Installation">KVM Installtion</a>,
<a href="https://help.ubuntu.com/community/KVM/VirtManager">VirtManager Guide</a>,
the
<a href="https://help.ubuntu.com/13.04/serverguide/libvirt.html">Ubuntu Server Guide on libvirt</a>,
or
<a href="http://www.howtoforge.com/virtualization-with-kvm-on-ubuntu-12.04-lts-p3">HowtoForge</a>
for that.</p>
<p>Instead this blog post details the most relevant steps to get file
system pass-through between a Linux host and Qemu guest working.  The
upstream <a href="http://wiki.qemu.org/Documentation/9psetup">Qemu docs</a>
provide a good starting point, as is the original
<a href="https://www.kernel.org/doc/ols/2010/ols2010-pages-109-120.pdf">IBM paper on VirtFS</a>.
For users of Ubuntu &lt;= 13.04, watch out for the
<a href="https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/943680">libvirt bug</a>
that I know many people run into, myself included.</p>
<p>First of all, I could never really master the beast called AppArmor in
Ubuntu.  Once I got the hang of the files to edit, the order to make
changes and the syntax of its profile files I think I tried every
possible permutation without any success.  So I ended up disabling the
profile(s) of my VM guests.  The UUID in the filename can be found in
the details of your VM, or in the process listing on the host: <code>ps fax | grep guestname</code>.  Here is an example of how to disable one guest:</p>
<pre><code>aa-complain /etc/apparmor.d/libvirt/libvirt-20b8c6c6-440c-bd76-254e-42fd475e6770
</code></pre>
<p>You need to install <a href="apt://apparmor-utils">apparmor-utils</a> to get the
<code>aa-complain</code> tool.  Where <em>complain</em> basically means ignore any hits
from the given profile and just complain in the log.  The default is
<code>aa-enforce</code>.  For more info on AppArmor, see the
<a href="http://wiki.apparmor.net/index.php/Documentation">excellent upstream docs</a></p>
<img src="/images/filesystem-pass-through.png" style="width: 500px; float: right">
<p>Now, how to do it.  I like virsh, but for most of the time the vmware
like
<a href="http://virt-manager.org/">virt-manager is a lot more user friendly</a>.
In the VM&rsquo;s Detailed view, click the &ldquo;Add Hardware&rdquo; button and select
&ldquo;Filesystem&rdquo;.  This is where the action happens.</p>
<ul>
<li><strong>Type:</strong> preset to Passthrough</li>
<li><strong>Mode:</strong> change to <code>Mapped</code> <em>This is the most important step in
this blog, or you will not get read/write support!</em></li>
<li><strong>Source path:</strong> select the path on your host that will be shared
with this guest.  I use <code>/var/lib/libvirt/share</code> but you can use any
directory you want</li>
<li><strong>Target path:</strong> enter magic string that you&rsquo;ll use in the mount
command in the guest.  I use <code>share</code>, no slashes or anything.  In
reality this isn&rsquo;t a path per se, it&rsquo;s a tag that the guest sends to
the kernel 9p driver via the mount command</li>
</ul>
<p>Please note that 9P file systems simply pass-through the owner UID/GID
and directory permissions from the host to the guest.  This can be a
bit confusing, but just make sure to use the same for all guests that
share the same directory.  I chowned it to my account on the host:</p>
<pre><code>host# chown jocke:users /var/lib/libvirt/share
</code></pre>
<p>In my <code>guest:/etc/modules</code> I added the following modules, even though
the kernel can probably load them itself on demand:</p>
<pre><code>9p
9pnet
9pnet_virtio
</code></pre>
<p>The actual command to get the ball rolling on the guest:</p>
<pre><code>guest# mount -t 9p -o trans=virtio,version=9p2000.L,rw share /mnt
</code></pre>
<p>To automatically mount this every time at boot, add the following
to your <code>guest:/etc/fstab</code>:</p>
<pre><code>share	/mnt	9p	trans=virtio,version=9p2000.L,rw	0	0
</code></pre>
<p>That&rsquo;s it. Good Luck!</p>
<!--
  -- Local Variables:
  -- mode: markdown
  -- End:
  -->]]></content>
        </item>
        
        <item>
            <title>Programming as an Artform</title>
            <link>/2013/06/22/programming-as-an-artform/</link>
            <pubDate>Sat, 22 Jun 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/06/22/programming-as-an-artform/</guid>
            <description>&lt;p&gt;This is a response to the excellent post by Jani Gorše, titled
&lt;a href=&#34;https://blooki.st/BlookElement/ShowTextPhoto?blookElementId=1962&#34;&gt;Why is Programming an Art?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ever since I began studying Computer Engineering at &lt;a href=&#34;http://www.mdh.se&#34;&gt;university&lt;/a&gt; back
in 1995 I have struggled to find the &amp;ldquo;proper&amp;rdquo; ways to format my code,
name functions and variables appropriately, structure functions into
files and files into directories with Makefiles and Makefile snippets,
using both recursive and non-recursive make.  Formatting of code, for
instance, was for a while a bit of an obsession of mine, and it sort of
is still.  But today I am more concerned with the overall structure and
how components interact.  Even though I can still get very annoyed at
people naming their local variables obtrusively.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This is a response to the excellent post by Jani Gorše, titled
<a href="https://blooki.st/BlookElement/ShowTextPhoto?blookElementId=1962">Why is Programming an Art?</a></p>
<p>Ever since I began studying Computer Engineering at <a href="http://www.mdh.se">university</a> back
in 1995 I have struggled to find the &ldquo;proper&rdquo; ways to format my code,
name functions and variables appropriately, structure functions into
files and files into directories with Makefiles and Makefile snippets,
using both recursive and non-recursive make.  Formatting of code, for
instance, was for a while a bit of an obsession of mine, and it sort of
is still.  But today I am more concerned with the overall structure and
how components interact.  Even though I can still get very annoyed at
people naming their local variables obtrusively.</p>
<p><a href="http://www.amazon.com/Practice-Programming-Addison-Wesley-Professional-Computing/dp/020161586X"><img src="/images/Practice_of_Programming.jpeg" style="width: 300px; float: right"></a></p>
<p>I still do most of my work, professional and hobby, using plain old C.
I&rsquo;ve read many books and style guides on the subject and the one that
really stood out as being extremely helpful, apart from reading a LOT of
code, is <a href="http://www.amazon.com/Practice-Programming-Addison-Wesley-Professional-Computing/dp/020161586X">The Practice of Programming</a> by Kernighan and Pike!  The
book is crammed full with tons of neat advice and best practises that
simly just make sense.  Stuff like &ldquo;name your local variables i, j, k
for counters and loop variables&rdquo;, which is basically what most of us do
already.  Just read it and you&rsquo;ll see what I mean &ndash; spot on!</p>
<p>Spot on?  Why should you read something that seemingly doesn&rsquo;t tell you
anything you already know?  Well, even the most evident practises often
come under scrutiny when programmers from different schools meet.  At my
job we have Microsoft, Bombardier, and ABB programmers.  All of which
have little to no experience with UNIX, Linux or any Free/Open Source
software development.  They are used to more cumbersome practises, like
&ldquo;Hungarian Style Notation&rdquo;, usually very inflexible corporate styles
which nobody can explain anymore, and so on.</p>
<p>It is difficult to teach the way of Free/Open Source software, but I
think the most important message is: keep it simple, maintain the same
style as used in the rest of the project, and if you comment then write
what you mean with a piece of code, not what it does.  And, in the true
style of UNIX, write one program that does its job well.</p>
<p>The beuty in software comes from structure, the flow, the similarities
and how the modules fit together.  The absence of duplication, and the
readability.</p>
<p>Visit the <a href="http://www.informit.com/store/practice-of-programming-9780201615869">homepage for the book</a> and download the source code to
have a look for yourself.  Enjoy!</p>]]></content>
        </item>
        
        <item>
            <title>Finit v1.8</title>
            <link>/2013/06/08/finit-v1-dot-8/</link>
            <pubDate>Sat, 08 Jun 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/06/08/finit-v1-dot-8/</guid>
            <description>It&amp;rsquo;s been a long time coming, but here it finally is, Finit v1.8! The goodies we&amp;rsquo;ve been waiting for are:
 Runlevels Multiple TTYs One-shot tasks  Let&amp;rsquo;s start off with tasks. Tasks are one-shot commands, with a syntax like service directives, but are not monitored and respawned like services. Tasks are started in parallel, just like services. For some cases, like the system bootstrap phase, some tasks may need to be executed in sequence, and for that purpose there also exists a run command.</description>
            <content type="html"><![CDATA[<p>It&rsquo;s been a long time coming, but here it finally is, <a href="/finit.html">Finit</a>
<a href="ftp://ftp.troglobit.com/finit/finit-1.8.tar.xz">v1.8</a>!  The goodies we&rsquo;ve been waiting for are:</p>
<ul>
<li>Runlevels</li>
<li>Multiple TTYs</li>
<li>One-shot tasks</li>
</ul>
<p>Let&rsquo;s start off with tasks.  Tasks are one-shot commands, with a
syntax like service directives, but are not monitored and respawned
like services.  Tasks are started in parallel, just like services.
For some cases, like the system bootstrap phase, some tasks may need
to be executed in sequence, and for that purpose there also exists a
run command.  Run commands are executed in the order listed in
finit.conf and will run until completion before continuing with the
next task or service.</p>
<p>Multiple TTYs is another neat feature.  Similar to services many TTYs
can be started and automatically be respawned when a user logs out.
For embedded targets wanting to save CPU cycles usually one TTY is the
system console.  Use the console command to point to a defined TTY to
activate &ldquo;Press any key to activate this console.&rdquo;</p>
<p>Finally, runlevels!  This is the key feature in this release of Finit.
Adding the flexibility from SysV init, without the complexity.  This
is one of the key points of Finit &ndash; it should be simple!</p>
<pre><code>finit.conf:
    service [2345] /usr/sbin/sshd -D -- OpenSSH Daemon
</code></pre>
<p>This command tells Finit that the OpenSSH daemon should only run in
runlevel 2-5.  Finit will also respawn sshd if it should crash, just
like before.</p>
<p>Runlevels are needed in use-cases in many embedded devices.  E.g.,
bootstrap, upgrading, and regular operation.  It is completely up to
the system administrator to setup the runlevels of the product or
installation.  At boot runlevel &lsquo;S&rsquo; runs, well before any networking
is up.  This is used to to one-time probing and setup of the
system. When done the runlevel defined in finit.conf, or the default
2, is started.</p>
<p>See the <a href="https://github.com/troglobit/finit/blob/master/README.md">README</a> for more information, or the code for the full
details.</p>
]]></content>
        </item>
        
        <item>
            <title>Proof of Life</title>
            <link>/2013/06/07/proof-of-life/</link>
            <pubDate>Fri, 07 Jun 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/06/07/proof-of-life/</guid>
            <description>There is a certain &amp;ldquo;burstyness&amp;rdquo; to the way I work on my open source projects. It seems it often coincides with intense work loads during new release cycles at work.
However, I&amp;rsquo;ve just finished restoring two pages that got lost in the big server crash:
 mrouted pimd  Big thanks goes to the Wayback Machine for maintaining records of the original pages I lost!</description>
            <content type="html"><![CDATA[<p>There is a certain &ldquo;burstyness&rdquo; to the way I work on my open source
projects.  It seems it often coincides with intense work loads during
new release cycles at <a href="http://www.westermo.com">work</a>.</p>
<p>However, I&rsquo;ve just finished restoring two pages that got lost in the
big server crash:</p>
<ul>
<li><a href="/mrouted.shtml">mrouted</a></li>
<li><a href="/pimd.shtml">pimd</a></li>
</ul>
<p>Big thanks goes to the <a href="http://www.archive.org">Wayback Machine</a> for
maintaining records of the original pages I lost!</p>
]]></content>
        </item>
        
        <item>
            <title>Resurrection</title>
            <link>/2013/02/17/resurrection/</link>
            <pubDate>Sun, 17 Feb 2013 00:00:00 +0000</pubDate>
            
            <guid>/2013/02/17/resurrection/</guid>
            <description>Quite some time has passed now since our old site, http://vmlinux.org, crashed and burned, and with it much of my previous Open Source work and blogs. Tech blog entries, archives for the projects I maintain, lost.
Backups? Of course not.
This all happened in 2011. Since then we also managed to lose the domain and I kind of lost myself for a while, including my motivation.
Fortunately, at this point in time I had migrated most of my projects from CVS and Subversion to DVCS&amp;rsquo; like Bzr and GIT, so I could easily setup new homes for most of my Open Source projects at GitHub.</description>
            <content type="html"><![CDATA[<p>Quite some time has passed now since our old site, <a href="http://vmlinux.org">http://vmlinux.org</a>,
crashed and burned, and with it much of my previous Open Source work
and blogs.  Tech blog entries, archives for the projects I maintain,
lost.</p>
<p>Backups? Of course not.</p>
<p>This all happened in 2011.  Since then we also managed to lose the
domain and I kind of lost myself for a while, including my motivation.</p>
<p>Fortunately, at this point in time I had migrated most of my projects
from CVS and Subversion to DVCS&rsquo; like Bzr and GIT, so I could easily
setup new homes for most of my Open Source projects at
<a href="https://github.com/troglobit">GitHub</a>.</p>
<p>Recently however GitHub stopped serving downloads, so even though I
can continue using it for version control, I had to find a new way of
serving generated tarballs and the like.  See <a href="ftp://ftp.troglobit.com">my
FTP</a> for project downloads.</p>
<p>I had also started missing blogging for some reason. So it started to
make sense to roll something on my own again.  Well, here&rsquo;s me
starting over.</p>
<p>See you soon with more posts about open source projects, releases of
projects I maintain, Emacs tips, and ramblings about techie stuff I
like!  :-)</p>
]]></content>
        </item>
        
        <item>
            <title>Announcing pimd v2.1.7</title>
            <link>/2011/01/09/announcing-pimd-v2-dot-1-7/</link>
            <pubDate>Sun, 09 Jan 2011 20:20:57 +0000</pubDate>
            
            <guid>/2011/01/09/announcing-pimd-v2-dot-1-7/</guid>
            <description>This is a followup release to the security fix in pimd, v2.1.6. The change to use /var/lib/misc/, instead of the insecure /var/tmp/, has now been refactored into using the proper FHS recommended /var/run/pimd/ instead.
As always, check the homepage, the ChangeLog and the GIT log for more details.</description>
            <content type="html"><![CDATA[<p>This is a followup release to the <a href="https://security-tracker.debian.org/tracker/CVE-2011-0007">security fix</a> in <a href="/pimd.html">pimd</a>,
v2.1.6.  The change to use <code>/var/lib/misc/</code>, instead of the insecure
<code>/var/tmp/</code>, has now been refactored into using the proper <a href="http://www.pathname.com/fhs/pub/fhs-2.3.html#VARRUNRUNTIMEVARIABLEDATA">FHS</a>
recommended <code>/var/run/pimd/</code> instead.</p>
<p>As always, check the <a href="/pimd.html">homepage</a>, the <a href="https://github.com/troglobit/pimd/blob/master/ChangeLog">ChangeLog</a> and the
<a href="https://github.com/troglobit/pimd/commits/2.1.7">GIT log</a> for more details.</p>
]]></content>
        </item>
        
        <item>
            <title>Announcing pimd v2.1.6</title>
            <link>/2011/01/08/announcing-pimd-v2-dot-1-6/</link>
            <pubDate>Sat, 08 Jan 2011 23:40:22 +0000</pubDate>
            
            <guid>/2011/01/08/announcing-pimd-v2-dot-1-6/</guid>
            <description>This is a security release of pimd, v2.1.6. The following fixes are included:
 CVE-2011-0007: &amp;ldquo;Insecure file creation in /var/tmp&amp;rdquo; Build error on GNU/kFreeBSD  Thanks to Vincent Bernat this time for the CVE fix!
As always, check the homepage, the ChangeLog and the GIT log for more details.</description>
            <content type="html"><![CDATA[<p>This is a security release of <a href="/pimd.html">pimd</a>, v2.1.6.  The following fixes
are included:</p>
<ul>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2011-0007">CVE-2011-0007</a>: <em>&ldquo;Insecure file creation in /var/tmp&rdquo;</em></li>
<li>Build error on GNU/kFreeBSD</li>
</ul>
<p>Thanks to <a href="http://www.luffy.cx/">Vincent Bernat</a> this time for the CVE fix!</p>
<p>As always, check the <a href="/pimd.html">homepage</a>, the <a href="https://github.com/troglobit/pimd/blob/master/ChangeLog">ChangeLog</a> and the
<a href="https://github.com/troglobit/pimd/commits/2.1.6">GIT log</a> for more details.</p>
]]></content>
        </item>
        
        <item>
            <title>Use Ubuntu to Serve iTunes</title>
            <link>/2010/12/31/ubuntu-to-serve-music-to-itunes/</link>
            <pubDate>Fri, 31 Dec 2010 20:26:37 +0000</pubDate>
            
            <guid>/2010/12/31/ubuntu-to-serve-music-to-itunes/</guid>
            <description>OK, so we finally got an iPad. The effective marketing droids of Apple are doing a good job, even the Linux zealots are starting to use their products :-)
So, how to serve the immense music collection of our family to the iPad? Well, it seems the magic integration with iTunes is not enough (yet), so you need a Simple Daap Client app on your iPad to get the most out of this HowTo.</description>
            <content type="html"><![CDATA[<p>OK, so we finally got an iPad.  The effective marketing droids of Apple
are doing a good job, even the Linux zealots are starting to use their
products :-)</p>
<p>So, how to serve the immense music collection of our family to the iPad?
Well, it seems the magic integration with iTunes is not enough (yet), so
you need a <a href="http://itunes.apple.com/app/simple-daap-client/id369605270">Simple Daap Client</a> app on your iPad to get the most out
of this HowTo. I hope DAAP sharing for iPad will be added soon, that
would be really cool!</p>
<p>I used the <a href="http://www.fireflymediaserver.org/">Firefly Media Server</a>, which in Debian/Ubuntu is known as
<a href="apt://mt-daapd">mt-daapd</a>.  It needs som minor setting up to play nice with the
Avahi multicast DNS (mDNS) services that we will use to let iTunes
discover our new service.</p>
<p>First go ahead and install mt-daapd</p>
<pre><code>sudo apt-get install mt-daapd
</code></pre>
<p>Then make sure to edit the file <code>/etc/default/mt-daapd</code> file, it usually
does not exist in the default setup, so create it and add the following
contents to disable the built-in mDNS server:</p>
<pre><code># -m Disables the built-in mDNS server, useful if you already run Avahi
DAEMON_OPTS=&quot;-m&quot;
</code></pre>
<p>The default configuration of must be updated with the location of your
music library.  On my system it is <code>/pub/Music</code>, so I edit the file
<code>/etc/mt-daapd.conf</code> and change:</p>
<pre><code># Location of the mp3 files to share.  Note that because the
# files are stored in the database by inode, these must be
# in the same physical filesystem.
mp3_dir = /pub/Music
</code></pre>
<p>If you like, you can change the <code>admin_pw</code> (mt-daapd) and default port
to something other than the defaults.  After changing the settings you
need to restart the service:</p>
<pre><code>sudo service mt-daapd restart
</code></pre>
<p>Now enter <code>localhost:3689</code> in your browser window, leave the username
field empty and set password to mt-daapd.  Unless you changed any of the
defaults above.</p>
<p>Time for multicast!  The Avahi service on GNU/Linux systems is what
Bonjour/Rendez-Vous is to Apple systems.  It provides seamless
interaction between clients and servers on a LAN.  My HP printer, for
instance, pops up automatically in Windows, OS X and Linux these days
because these operating systems listen in on network mDNS servers that
broadcast (or rather multicast) available services.  Very neat.</p>
<p>However, as usual there are a few snags you might need to work around to
get everything to work.  Thanks to my ISP (Telia, Sweden), I need to tell
Avahi the following nasty things in <code>/etc/default/avahi-daemon</code></p>
<pre><code># 1 = Try to detect unicast dns servers that serve .local and disable avahi in
# that case, 0 = Don't try to detect .local unicast dns servers, can cause
# troubles on misconfigured networks
AVAHI_DAEMON_DETECT_LOCAL=0
</code></pre>
<p>And also edit the file <code>/etc/avahi/avahi-daemon.conf</code>, the following is
not the entire contents of the file, only the sections I&rsquo;ve changed:</p>
<pre><code>[server]
# Comment out any current/previous work arounds
#domain-name=local
#domain-name=.alocal
disallow-other-stacks=yes

[publish]
publish-workstation=no
publish-domain=no
</code></pre>
<p>Also, in the directory <code>/etc/avahi/services/</code> we need to add an entry for
DAAP.  Create the file <code>/etc/avahi/services/daap.service</code>:</p>
<pre><code>&lt;!DOCTYPE service-group SYSTEM &quot;avahi-service.dtd&quot;&gt;
&lt;!-- iTunes DAAP, music streaming, for mt-daapd or Firefly Media Server
     See avahi.service(5) for more information about this configuration file --&gt;

&lt;service-group&gt;
    &lt;name replace-wildcards=&quot;yes&quot;&gt;%h&lt;/name&gt;

    &lt;service&gt;
        &lt;type&gt;_daap._tcp&lt;/type&gt;
        &lt;port&gt;3689&lt;/port&gt;
        &lt;txt-record&gt;txtvers=1&lt;/txt-record&gt;
        &lt;txt-record&gt;iTSh Version=131073&lt;/txt-record&gt;
        &lt;txt-record&gt;Version=196610&lt;/txt-record&gt;
    &lt;/service&gt;

    &lt;service&gt;
        &lt;type&gt;_rsp._tcp&lt;/type&gt;
        &lt;port&gt;3689&lt;/port&gt;
    &lt;/service&gt;
&lt;/service-group&gt;
</code></pre>
<p>Now, restart avahi and see your music server pop up automatically as a
Share in iTunes:</p>
<pre><code>sudo service avahi-daemon restart
</code></pre>
<p>Good Luck!</p>
]]></content>
        </item>
        
        <item>
            <title>Announcing mrouted v3.9.3</title>
            <link>/2010/10/11/announcing-mrouted-v3-dot-9-3/</link>
            <pubDate>Mon, 11 Oct 2010 23:44:28 +0000</pubDate>
            
            <guid>/2010/10/11/announcing-mrouted-v3-dot-9-3/</guid>
            <description>Here is another bug-fix release of mrouted. This time with a couple of really nasty bugs fixed. A big thanks to Dan Kruchinin for tracking down a NULL pointer dereference in the conf file parser and an overzealous check of netmask that made mrouted useless over tunnel interfaces or point-to-point links (OpenVPN, PPP, L2TP and PPTP). See the ChangeLog or the GIT log for details.</description>
            <content type="html"><![CDATA[<p>Here is another bug-fix release of <a href="/mrouted.html">mrouted</a>.  This time
with a couple of really nasty bugs fixed.  A big thanks to Dan Kruchinin
for tracking down a <code>NULL</code> pointer dereference in the conf file parser
and an overzealous check of netmask that made mrouted useless over
tunnel interfaces or point-to-point links (OpenVPN, PPP, L2TP and PPTP).
See the <a href="https://github.com/troglobit/mrouted/blob/master/ChangeLog">ChangeLog</a> or the <a href="http://git.troglobit.com/mrouted.git/">GIT log</a> for details.</p>
]]></content>
        </item>
        
        <item>
            <title>Announcing pimd v2.1.3</title>
            <link>/2010/09/08/announcing-pimd-v2-dot-1-3/</link>
            <pubDate>Wed, 08 Sep 2010 23:44:49 +0000</pubDate>
            
            <guid>/2010/09/08/announcing-pimd-v2-dot-1-3/</guid>
            <description>I&amp;rsquo;m very pleased to present the next bug-fix release of pimd, v2.1.3. The real announcement for v2.1.2 I never really got around to write because the diligent Debian maintainer, Antonin Kral alerted me to some problems. Which is great! I do not have the resources to test the build on all those platforms. I sure appreciate all the help I can get. Thank you Antonin!
As always, check the homepage, the changelog and the GIT log for details.</description>
            <content type="html"><![CDATA[<p>I&rsquo;m very pleased to present the next bug-fix release of <a href="/pimd.html">pimd</a>, v2.1.3.
The real announcement for v2.1.2 I never really got around to write because
the diligent <a href="http://packages.debian.org/source/pimd">Debian maintainer</a>, <a href="http://www.bobek.cz/">Antonin Kral</a> alerted me to some
problems.  Which is great!  I do not have the resources to test the build on
all those platforms.  I sure appreciate all the help I can get.  Thank you
Antonin!</p>
<p>As always, check the <a href="/pimd.html">homepage</a>, the changelog and the GIT log for details.</p>
]]></content>
        </item>
        
        <item>
            <title>Finally, NetBSD Boots in KVM!</title>
            <link>/2010/08/29/finally/</link>
            <pubDate>Sun, 29 Aug 2010 20:44:34 +0000</pubDate>
            
            <guid>/2010/08/29/finally/</guid>
            <description>Compared to OpenBSD and FreeBSD the NetBSD install was hard, really hard. It wasn&amp;rsquo;t until I stumbled across this that I managed to convince myself to try it again.
The trick seems to be to ignore as much as you can from other Internet tips. NetBSD runs fine in KVM, so if someone says you need to run it in Qemu mode — don&amp;rsquo;t believe the hype. OK, in virt-manager there is no preset defaults for NetBSD, so I went with a generic OS and tried starting the install from there.</description>
            <content type="html"><![CDATA[<p>Compared to OpenBSD and FreeBSD the NetBSD install was hard, really
hard.  It wasn&rsquo;t until I stumbled across <a href="https://ezunix.org/index.php?title=NetBSD_5_on_KVM">this</a> that I managed to
convince myself to try it again.</p>
<p>The trick seems to be to ignore as much as you can from other Internet
tips.  NetBSD runs fine in KVM, so if someone says you need to run it in
Qemu mode — don&rsquo;t believe the hype.  OK, in <code>virt-manager</code> there
is no preset defaults for NetBSD, so I went with a generic OS and tried
starting the install from there.  The kernel hangs before it probes USB,
or it segfaults.</p>
<p>What I did was to stop the guest, and in the details view I disabled
ACPI and selected the pcnet NIC instead of the default <code>ne2k-pci</code>.
Running the default options in the NetBSD 5.0.2 installer, and the
bootloader after install, works fine.</p>
<p>If you still don&rsquo;t manage to get it running check the KVM home page for
<a href="http://www.linux-kvm.org/page/Bugs">known bugs</a> and workarounds.  Sometimes it helps adding
<code>-no-kvm-irqchip</code> or <code>-no-kvm-pit</code>. However, <code>virt-manager</code> does not
seem to support these options yet, so you must run from the command
line.</p>
<p>Good Luck!</p>
]]></content>
        </item>
        
        <item>
            <title>Minix editline v1.14.0</title>
            <link>/2010/08/12/minix-editline-1-dot-14-dot-0/</link>
            <pubDate>Thu, 12 Aug 2010 18:17:40 +0000</pubDate>
            
            <guid>/2010/08/12/minix-editline-1-dot-14-dot-0/</guid>
            <description>It is with great pleasure I announce the next release of the editline library by Simmule Turner and Rich Salz! This is a popular library, it exists in several forked versions. This release marks the end of a huge effort where archaeological methods have been applied to recover fixes and improvements developed independently over several decades by the following projects: Heimdal, Festival speech-tools, Debian, as well as patches by Mr. Steve Tell.</description>
            <content type="html"><![CDATA[<p>It is with great pleasure I announce the next release of the
<a href="/editline.html">editline</a> library by Simmule Turner and Rich Salz!  This is a
popular library, it exists in several forked versions.  This release
marks the end of a huge effort where archaeological methods have been
applied to recover fixes and improvements developed independently over
several decades by the following projects: <a href="http://www.h5l.org">Heimdal</a>,
<a href="http://festvox.org/festival/">Festival speech-tools</a>, <a href="http://packages.qa.debian.org/e/editline.html">Debian</a>, as well as patches by
Mr. <a href="http://www.cs.unc.edu/~tell/dist.html">Steve Tell</a>.</p>
<img class="center noborder" src="/images/peeking.gif">
<p>Noteworthy changes and additions:</p>
<ul>
<li>The symbols <code>rl_complete()</code> and <code>rl_list_possib()</code> are no longer
possible to overload as function pointers.  Instead the FSF
libreadline <code>rl_set_complete_func()</code> and <code>rl_set_list_possib_func()</code>
API has been added for implementing custom completion handlers.</li>
<li>8-bit handling now work correctly on non-UTF8 terminals, including
meta characters and key bindings.  This is actually a revert of an old
broken Debian patch.</li>
<li>The functions <code>el_bind_key()</code> and <code>el_bind_key_in_metamap()</code> have been
added thanks to the efforts of Festival speech-tools hacker Mr. Alan
W. Black.</li>
<li>Support for capitalizing words (M-c), also from Mr. Alan W Black.</li>
<li>Improved FSF libreadline compatibility and signal safety fixes by
Mr. Steve Tell.</li>
<li>The HUGE code cleanups are mostly courtesy of the Heimdal Project.</li>
<li>Several more APIs for increased compatibility with FSF libreadline
have also been added. See the file <code>include/editline.h</code> for details.</li>
</ul>
<img class="center noborder" src="/images/peeking.gif">
<p>Online GIT repository and release tarball available at the usual places:</p>
<ul>
<li><a href="http://github.com/troglobit/editline">github:editline.git</a>  (Main GIT)</li>
<li><a href="http://git.troglobit.com/editline.git">vmlinux:editline.git</a> (Backup)</li>
<li><a href="ftp://ftp.troglobit.com/editline/editline-1.14.0.tar.bz2">editline-1.14.0.tar.bz2</a>, <a href="ftp://ftp.troglobit.com/editline/editline-1.14.0.tar.bz2.md5">MD5</a> (FTP)</li>
</ul>
<p>Report bugs using the GitHub <a href="http://freshmeat.net/projects/minix-editline">issue tracker</a>.  See also the
<a href="http://github.com/troglobit/editline/issues">Freshmeat page</a> for a more consistent updates.</p>
]]></content>
        </item>
        
        <item>
            <title>Micro Tetris™ v1.2.0</title>
            <link>/2010/08/02/micro-tetris-1-dot-2-0/</link>
            <pubDate>Mon, 02 Aug 2010 00:56:35 +0000</pubDate>
            
            <guid>/2010/08/02/micro-tetris-1-dot-2-0/</guid>
            <description>New release of Micro Tetris™, v1.2.0, available for download now! Noteworthy changes and additions:
 Preview display fixes by Mattias Walström Next level triggered after every 10 cleared lines Speed increase by each level Display high score at game over High score recorded to save file Pause key fixed, again by Mattias Walström  Online GIT repository and release tarball available at the usual places:
 github:tetris.git (Main GIT) vmlinux:tetris.</description>
            <content type="html"><![CDATA[<p><a href="http://erikjohanssonphoto.com/work/tetris/"><img src="/images/TetrisConstruction.jpg" style="width: 230px; float: right"></a></p>
<p>New release of <a href="/tetris.html">Micro Tetris™</a>, v1.2.0, available for
download now!  Noteworthy changes and additions:</p>
<ul>
<li>Preview display fixes by <a href="https://github.com/lazzer">Mattias Walström</a></li>
<li>Next level triggered after every 10 cleared lines</li>
<li>Speed increase by each level</li>
<li>Display high score at game over</li>
<li>High score recorded to save file</li>
<li>Pause key fixed, again by <a href="https://github.com/lazzer">Mattias Walström</a></li>
</ul>
<p>Online GIT repository and release tarball available at the usual places:</p>
<ul>
<li><a href="http://github.com/troglobit/tetris">github:tetris.git</a> (Main GIT)</li>
<li><a href="http://git.troglobit.com/tetris.git">vmlinux:tetris.git</a> (Backup)</li>
<li><a href="ftp://ftp.troglobit.com/tetris/tetris-1.2.0.tar.bz2">tetris-1.2.0.tar.bz2</a>, <a href="ftp://ftp.troglobit.com/tetris/tetris-1.2.0.tar.bz2.md5">MD5</a> (FTP)</li>
</ul>
<p>See also the <a href="http://freshmeat.net/projects/micro-tetris">Freshmeat page</a> for a more consistent updates.</p>
]]></content>
        </item>
        
        <item>
            <title>Minix editline moves to GIT</title>
            <link>/2010/07/19/minix-editline-moves-to-git/</link>
            <pubDate>Mon, 19 Jul 2010 02:40:36 +0000</pubDate>
            
            <guid>/2010/07/19/minix-editline-moves-to-git/</guid>
            <description>A small heads-up, I&amp;rsquo;ve migrated the Minix editline project from Bazaar to GIT. The new URL for keeping tabs on your favourite free readline() clone is:
 http://git.vmlinux.org/editline.git/
 I&amp;rsquo;m currently working on fixing up the tree and doing some house cleaning — including making more stuff configurable — before releasing a 1.14.0 later on.
One such item is the integration of libtool with our autoconf friends. This should make it lot more portable (again) and also help smooth a merge with other sources for this library.</description>
            <content type="html"><![CDATA[<p>A small heads-up, I&rsquo;ve migrated the Minix editline project from Bazaar
to GIT.  The new URL for keeping tabs on your favourite free
<code>readline()</code> clone is:</p>
<blockquote>
<p><a href="http://git.troglobit.com/editline.git">http://git.vmlinux.org/editline.git/</a></p>
</blockquote>
<p>I&rsquo;m currently working on fixing up the tree and doing some house
cleaning — including making more stuff configurable — before
releasing a 1.14.0 later on.</p>
<p>One such item is the integration of libtool with our autoconf friends.
This should make it lot more portable (again) and also help smooth a
merge with other sources for this library.  More on that as well later,
hopefully.</p>
]]></content>
        </item>
        
        <item>
            <title>Git Quickie</title>
            <link>/2010/07/13/git-quickie/</link>
            <pubDate>Tue, 13 Jul 2010 20:45:49 +0000</pubDate>
            
            <guid>/2010/07/13/git-quickie/</guid>
            <description>This is a document I intend to maintain for my own purposes. It serves as a quick reminder for the steps needed when creating and working with git repositories.
First setup a bare repository on the server.
$ git --bare init projectX.git Initialized empty Git repository in /pub/git/projectX.git/  Set one-liner description, visible in gitweb.
$ echo &amp;quot;Secret project, use ROT13 to decode source code&amp;quot; &amp;gt;projectX.git/description  Set up a post-update hook so that the server repo is update automatically when you push to it.</description>
            <content type="html"><![CDATA[<p>This is a document I intend to maintain for my own purposes.  It serves
as a quick reminder for the steps needed when creating and working with
git repositories.</p>
<p>First setup a bare repository on the server.</p>
<pre><code>$ git --bare init projectX.git
Initialized empty Git repository in /pub/git/projectX.git/
</code></pre>
<p>Set one-liner description, visible in gitweb.</p>
<pre><code>$ echo &quot;Secret project, use ROT13 to decode source code&quot; &gt;projectX.git/description
</code></pre>
<p>Set up a <code>post-update</code> hook so that the server repo is update
automatically when you push to it.</p>
<pre><code>$ cp ~/public_html/programming/post-update projectX.git/hooks/
</code></pre>
<p>Change how the &ldquo;Owner&rdquo; field in gitweb is displayed to include an
obfuscated email address.</p>
<pre><code>$ vi projectX.git/config
[gitweb]
    owner = &quot;Joachim Nilsson &lt;troglobit()vmlinux!org&gt;&quot;
</code></pre>
<p>These steps have become so common to me that I&rsquo;ve setup a script to
create server side git repositories.  You can now push to the server,
after having setup remote location on the client.</p>
<pre><code>$ git remote add origin ssh://login@example.com/pub/git/projextX.git
$ git push origin master
$ git push --tags
</code></pre>
]]></content>
        </item>
        
        <item>
            <title>Converting from Bazaar to GIT</title>
            <link>/2010/07/13/converting-from-bazaar-to-git/</link>
            <pubDate>Tue, 13 Jul 2010 01:56:11 +0000</pubDate>
            
            <guid>/2010/07/13/converting-from-bazaar-to-git/</guid>
            <description>You need git, and bazaar obviously. Also install bzr-fastimport, it contains the export plugin as well. The rest is a rip off from Frank&amp;rsquo;s page.
$ git init project.git $ cd project.git $ bzr fast-export --export-marks=.git/bzr.mark ~/project.bzr | git fast-import --export-marks=.git/git.mark That worked for me. The output will likely be something like this:
01:41:19 Calculating the revisions to include ... 01:41:19 Starting export of 33 revisions ... 01:41:20 Exported 33 revisions in 0:00:01 git-fast-import statistics: --------------------------------------------------------------------- Alloc&amp;#39;d objects: 5000 Total objects : 267 ( 0 duplicates ) blobs : 158 ( 0 duplicates 57 deltas) trees : 76 ( 0 duplicates 55 deltas) commits: 33 ( 0 duplicates 0 deltas) tags : 0 ( 0 duplicates 0 deltas) Total branches : 10 ( 1 loads ) marks : 1024 ( 33 unique ) atoms : 38 Memory total : 2344 KiB pools : 2110 KiB objects: 234 KiB --------------------------------------------------------------------- pack_report: getpagesize() = 4096 pack_report: core.</description>
            <content type="html"><![CDATA[<p>You need git, and bazaar obviously.  Also install bzr-fastimport, it
contains the export plugin as well. The rest is a rip off from Frank&rsquo;s
<a href="http://fthieme.net/en/drupal6/node/77">page</a>.</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">$ git init project.git
$ <span class="nb">cd</span> project.git
$ bzr fast-export --export-marks<span class="o">=</span>.git/bzr.mark ~/project.bzr <span class="p">|</span> git fast-import --export-marks<span class="o">=</span>.git/git.mark
</code></pre></div><p>That worked for me. The output will likely be something like this:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">01:41:19 Calculating the revisions to include ...
01:41:19 Starting export of 33 revisions ...
01:41:20 Exported 33 revisions in 0:00:01
git-fast-import statistics:
---------------------------------------------------------------------
Alloc&#39;d objects:         5000
Total objects  :          267 (         0 duplicates                  )
        blobs  :          158 (         0 duplicates         57 deltas)
        trees  :           76 (         0 duplicates         55 deltas)
        commits:           33 (         0 duplicates          0 deltas)
        tags   :            0 (         0 duplicates          0 deltas)
Total branches :           10 (         1 loads     )
        marks  :         1024 (        33 unique    )
        atoms  :           38
Memory total   :         2344 KiB
        pools  :         2110 KiB
        objects:          234 KiB
---------------------------------------------------------------------
pack_report: getpagesize()            =       4096
pack_report: core.packedGitWindowSize = 1073741824
pack_report: core.packedGitLimit      = 8589934592
pack_report: pack_used_ctr            =        267
pack_report: pack_mmap_calls          =         73
pack_report: pack_open_windows        =          1 /          1
pack_report: pack_mapped              =     977484 /     977484
---------------------------------------------------------------------
</code></pre></div><p>Now just do a simple <code>git checkout master</code> to get started working again.</p>
]]></content>
        </item>
        
        <item>
            <title>Syntax highlighting in less</title>
            <link>/2010/05/09/syntax-highlighting-in-less/</link>
            <pubDate>Sun, 09 May 2010 19:53:19 +0000</pubDate>
            
            <guid>/2010/05/09/syntax-highlighting-in-less/</guid>
            <description>Yes, it&amp;rsquo;s certainly possible and source code becomes so much easier to read. Try it out by:
 downloading my .lessfilter save it as ~/.lessfilter in your $HOME Profit!  Ahem &amp;hellip;
Just try it out on a C source file :-)
less -R myfile.c  </description>
            <content type="html"><![CDATA[<img style="float: right" src="/images/lessfilter.png">
<p>Yes, it&rsquo;s certainly possible and source code becomes so much easier to
read.  Try it out by:</p>
<ol>
<li><a href="https://github.com/troglobit/toolbox/blob/master/dot.lessfilter">downloading my .lessfilter</a></li>
<li>save it as <code>~/.lessfilter</code> in your <code>$HOME</code></li>
<li>Profit!</li>
</ol>
<p>Ahem &hellip;</p>
<p>Just try it out on a C source file :-)</p>
<pre><code>less -R myfile.c
</code></pre>
]]></content>
        </item>
        
        <item>
            <title>HowTo: Move window buttons back to the right</title>
            <link>/2010/05/01/howto-move-window-buttons-back-to-the-right-hand-side/</link>
            <pubDate>Sat, 01 May 2010 16:46:57 +0000</pubDate>
            
            <guid>/2010/05/01/howto-move-window-buttons-back-to-the-right-hand-side/</guid>
            <description>When you&amp;rsquo;ve installed Ubuntu 10.04 you might want to have the window controls back to the right side, where you&amp;rsquo;re used to having them. Use the following simple command:
gconftool-2 --set /apps/metacity/general/button_layout --type string &amp;quot;menu:minimize,maximize,close&amp;quot;  </description>
            <content type="html"><![CDATA[<p>When you&rsquo;ve installed Ubuntu 10.04 you might want to have the window
controls back to the right side, where you&rsquo;re used to having them.  Use
the following simple command:</p>
<pre><code>gconftool-2 --set /apps/metacity/general/button_layout --type string &quot;menu:minimize,maximize,close&quot;
</code></pre>
]]></content>
        </item>
        
        <item>
            <title>Best. Programming. Font. Ever.</title>
            <link>/2010/04/26/best-programming-font-ever/</link>
            <pubDate>Mon, 26 Apr 2010 22:44:19 +0000</pubDate>
            
            <guid>/2010/04/26/best-programming-font-ever/</guid>
            <description>This is not only a reminder to myself, it is appraisal to the probably best programming font ever: Inconsolata. Thank you so much, Mr Raph Levien!
On the previous laptop I used ProFont quite extensively, but its screen was only 1280x800, on the new laptop I have 1680x1050 and ProFont just got too small for my aging eyes.
For more tips on fonts, see Top-10 Programming Fonts and KeithDevens.com.</description>
            <content type="html"><![CDATA[<p>This is not only a reminder to myself, it is appraisal to the probably
best programming font ever: <a href="http://levien.com/type/myfonts/inconsolata.html">Inconsolata</a>.  Thank you so much, Mr
<a href="http://levien.com">Raph Levien</a>!</p>
<p>On the previous laptop I used <a href="http://www.tobiasjung.net/profont/">ProFont</a> quite extensively, but its screen
was only 1280x800, on the new laptop I have 1680x1050 and ProFont just
got too small for my aging eyes.</p>
<p>For more tips on fonts, see <a href="http://hivelogic.com/articles/top-10-programming-fonts">Top-10 Programming Fonts</a> and
<a href="http://keithdevens.com/wiki/ProgrammerFonts">KeithDevens.com</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Oona 6 years old!</title>
            <link>/2009/06/14/oona-6-years-old/</link>
            <pubDate>Sun, 14 Jun 2009 21:04:34 +0000</pubDate>
            
            <guid>/2009/06/14/oona-6-years-old/</guid>
            <description>Wow, this friday (June 12th) my daughter turned six! I can hardly believe it is six years since she came into our lives, time has gone by so quick &amp;hellip; when she was born we still lived in Västerås, now she has a younger brother and we live in a great house in Skultuna.
Happy birthday, Oona! I wish you all the best now that you&amp;rsquo;re starting first year of school after the summer vacation.</description>
            <content type="html"><![CDATA[<p>Wow, this friday (June 12th) my daughter turned six!  I can hardly
believe it is six years since she came into our lives, time has gone by
so quick &hellip; when she was born we still lived in <a href="http://www.vasteras.se">Västerås</a>, now she
has a younger brother and we live in a great house in <a href="https://sv.wikipedia.org/wiki/Skultuna">Skultuna</a>.</p>
<p>Happy birthday, Oona! I wish you all the best now that you&rsquo;re starting
first year of school after the summer vacation.  I know you&rsquo;re thrilled
about it, as are we, your proud parents. :-)</p>
]]></content>
        </item>
        
        <item>
            <title>Editline First Post</title>
            <link>/2009/06/14/editline-first-post/</link>
            <pubDate>Sun, 14 Jun 2009 20:44:45 +0000</pubDate>
            
            <guid>/2009/06/14/editline-first-post/</guid>
            <description>For a while now I&amp;rsquo;ve been maintaining a port of the Minix editline library libedit. Mainly for my own purposes, or rather on behalf of Westermo WeOS, where it is used in the CLI. This library is the same as the Debian editline package, even though the origin of that package is somewhat unclear to me.
Today I decided to adjust the package name and bump the version number to indicate that my port is the same, and now slightly more advanced, than the Debian version.</description>
            <content type="html"><![CDATA[<p>For a while now I&rsquo;ve been maintaining a port of the <a href="http://www.cise.ufl.edu/~cop4600/cgi-bin/lxr/http/source.cgi/lib/editline/">Minix</a> editline
library libedit.  Mainly for my own purposes, or rather on behalf of
<a href="http://www.westermo.com">Westermo WeOS</a>, where it is used in the CLI.  This library is the
same as the <a href="https://packages.qa.debian.org/e/editline.html">Debian editline</a> package, even though the origin of that
package is <a href="https://lists.debian.org/debian-devel/2000/05/msg00548.html">somewhat unclear</a> to me.</p>
<p>Today I decided to adjust the package name and bump the version number
to indicate that my port is the same, and now slightly more advanced,
than the Debian version.  To that end I&rsquo;ve now changed the repository
name and prepared for merging with Debian. Getting this work accepted
back into Debian is a completely different issue.</p>
<p>Get the code as a <a href="http://www.bazaar-vcs.org">Bazaar</a> branch, or view its change log through the
<a href="https://launchpad.net/loggerhead">Loggerhead</a> web interface:</p>
<ul>
<li>bzr branch <a href="http://git.troglobit.com/editline.git">http://bzr.vmlinux.org/editline</a></li>
<li><a href="http://git.troglobit.com/editline.git">Loggerhead web interface</a></li>
<li><a href="http://troglobit.com/editline.html">New homepage</a></li>
</ul>
<p>I now intend to do some further integration work, adapting the <code>debian/</code>
directory from editline-1.12-5 and smoothing out any remaining issues
before I release 1.13.0.</p>
]]></content>
        </item>
        
        <item>
            <title>HowTo use Git for Collaborative Development</title>
            <link>/2009/06/13/howto-use-git-for-collaborative-development/</link>
            <pubDate>Sat, 13 Jun 2009 00:36:07 +0000</pubDate>
            
            <guid>/2009/06/13/howto-use-git-for-collaborative-development/</guid>
            <description>This is mainly some notes for myself so I don&amp;rsquo;t forget. Having worked with GNU Bazaar before much of Git is still alien to me.
This HowTo is divided into two parts:
 what happens on your laptop, and what you must do on a remote server where you publish your changes  So, let&amp;rsquo;s start stimple:
laptop&amp;gt; mkdir projectX; cd projectX laptop&amp;gt; git init laptop&amp;gt; emacs file1.txt laptop&amp;gt; git add file1.</description>
            <content type="html"><![CDATA[<p>This is mainly some notes for myself so I don&rsquo;t forget.  Having worked
with <a href="http://bazaar-vcs.org/">GNU Bazaar</a> before much of Git is still alien to me.</p>
<p>This HowTo is divided into two parts:</p>
<ol>
<li>what happens on your laptop, and</li>
<li>what you must do on a remote server where you publish your changes</li>
</ol>
<p>So, let&rsquo;s start stimple:</p>
<pre><code>laptop&gt; mkdir projectX; cd projectX
laptop&gt; git init
laptop&gt; emacs file1.txt
laptop&gt; git add file1.txt
laptop&gt; git commit -m &quot;Initial commit&quot;
</code></pre>
<p>Thus far no suprises, right?  Now, some nasty git bits:</p>
<pre><code>laptop&gt; emacs file1.txt
laptop&gt; git commit
</code></pre>
<p>Yep, doesn&rsquo;t work. You have to add -a to the command line for &ldquo;all&rdquo;.</p>
<pre><code>laptop&gt; git commit -a
</code></pre>
<p>OK, so next item.  How to publish this so others can see? Well, I have a
shell account on a remote server, so I naturally try:</p>
<pre><code>laptop&gt; git push sftp://login@example.com/pub/git/projectX.git
fatal: I don't handle protocol 'sftp'
</code></pre>
<p>Does not work. OK, next obvious choice:</p>
<pre><code>laptop&gt; git push ssh://login@example.com/pub/git/projectX.git
fatal: '/pub/git/projectX.git': unable to chdir or not a git archive
fatal: The remote end hung up unexpectedly
</code></pre>
<p>Wow, not a clue as to how I should proceed.  After some Google-Foo I
found <a href="http://toolmantim.com/articles/setting_up_a_new_remote_git_repository">this article</a> detail the steps for remote repos.  Very messy,
compared to Bazaar.</p>
<pre><code>laptop&gt; ssh login@example.com
server&gt; cd /pub/git
server&gt; mkdir projectX.git; cd projectX.git
server&gt; git --bare init
server&gt; logout
laptop&gt; git remote add origin ssh://crash@vmlinux.org/pub/git/tetris.git
laptop&gt; git push
No refs in common and none specified; doing nothing.
Perhaps you should specify a branch such as 'master'.
fatal: The remote end hung up unexpectedly
error: failed to push some refs to 'ssh://login@example.com/pub/git/projectX.git'
laptop&gt; git push origin master
Counting objects: 29, done.
Compressing objects: 100% (26/26), done.
Writing objects: 100% (29/29), 9.54 KiB, done.
Total 29 (delta 10), reused 0 (delta 0)
To ssh://login@example.com/pub/git/projectX.git
* [new branch]      master -&gt; master
</code></pre>
<p>Eventually I made it sing.  The first <code>git push</code> must use the references
to origin and master.  At least you don&rsquo;t have to care about that later,
after the first push command git remembers what you want.</p>
<p>Only one thing left, in the gitweb project overview projectX is listed
as having no description.  Of course, since I&rsquo;m starting to get to know
git by now, I realised early this is probably not something that is
propagated through push — yep, I was right.  You have to change that on
the server.</p>
<pre><code>laptop&gt; ssh login@example.com
server&gt; cd /pub/git/projectX.git
server&gt; echo &quot;Secret Project-X use ROT13 to decode all source files&quot; &gt;description
server&gt; logout
</code></pre>
<p>All done! <em>phew</em></p>
]]></content>
        </item>
        
        <item>
            <title>Micro Tetris™</title>
            <link>/2009/06/13/micro-tetris/</link>
            <pubDate>Sat, 13 Jun 2009 00:04:30 +0000</pubDate>
            
            <guid>/2009/06/13/micro-tetris/</guid>
            <description>I just published the unobfuscated version of the 1989 IOCCC Best Game entry, Tetris™. See the original author&amp;rsquo;s, John Tromp, home page for the game for details. But suffice it to say, this is an extremely bare bones version of the classic game and very similar to the BSD games&amp;rsquo; version.
Actually, this similarity in board layout, key combinations and feel led me to do some archaeological digging. I dowloaded the classic BSD games collection and, after having called GNU Indent on the obfuscated code, I started noticing such extreme similarities that just could not be coincidental.</description>
            <content type="html"><![CDATA[<p>I just published the <a href="https://troglobit.com/projects/tetris/">unobfuscated version</a> of the <a href="https://www.ioccc.org/1989/tromp.hint">1989 IOCCC Best
Game</a> entry, Tetris™.  See the original author&rsquo;s, <a href="https://tromp.github.io/tetris.html">John Tromp</a>,
home page for the game for details.  But suffice it to say, this is an
extremely bare bones version of the classic game and very similar to the
<a href="https://www.ibiblio.org/pub/linux/games/bsd-games-2.17.tar.gz">BSD games&rsquo;</a> version.</p>
<p>Actually, this similarity in board layout, key combinations and feel led
me to do some archaeological digging.  I dowloaded the classic BSD games
collection and, after having called <a href="https://www.gnu.org/software/indent/">GNU Indent</a> on the obfuscated
code, I started noticing such extreme similarities that just could not
be coincidental.  The layout and constructs of the code are virtually
the same, so I can only conclude that they must share the same ancestor.
Maybe this code is that ancestor, considering that the BSD Tetris is
copyrighted in 1992 and this version stems from 1989, it is maybe not a
completly illogical conclusion.</p>
<p>See for yourself.</p>
<ul>
<li><a href="https://github.com/troglobit/tetris">tetris.git</a></li>
<li><a href="https://www.ibiblio.org/pub/linux/games/bsd-games-2.17.tar.gz">BSD Games</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>More about Bzrweb and some about Git</title>
            <link>/2009/06/12/more-about-bzrweb-and-some-about-git/</link>
            <pubDate>Fri, 12 Jun 2009 19:50:27 +0000</pubDate>
            
            <guid>/2009/06/12/more-about-bzrweb-and-some-about-git/</guid>
            <description>OK, I admit it. I cannot decide what version control system (VCS) to use. I&amp;rsquo;m stuck between the speed and massive snow ball effect of Git and the ease of use and emotional attachment I have to Bazaar.
I&amp;rsquo;ve been &amp;ldquo;maintaining&amp;rdquo; bzrweb for a while now, not doing a very good job of it though. It&amp;rsquo;s lagging behind considerably to the bzr API. After the upgrade of vmlinux.org to the latest Ubuntu server release bzrweb actually didn&amp;rsquo;t work at all.</description>
            <content type="html"><![CDATA[<p>OK, I admit it.  I cannot decide what version control system (VCS) to
use.  I&rsquo;m stuck between the speed and massive snow ball effect of
<a href="http://git-scm.com/">Git</a> and the ease of use and emotional attachment I have to
<a href="http://bazaar-vcs.org/">Bazaar</a>.</p>
<p>I&rsquo;ve been &ldquo;maintaining&rdquo; bzrweb for a while now, not doing a very good
job of it though.  It&rsquo;s lagging behind considerably to the bzr API.
After the upgrade of vmlinux.org to the latest Ubuntu server release
bzrweb actually didn&rsquo;t work at all.  If it hadn&rsquo;t been for
<a href="https://code.launchpad.net/~halfdan/bzrweb">the fixes</a> by <a href="http://halfdans.net/">Rasmus Toftdahl Olesen</a> I would probably have
abandoned it entirely.  Thank you Rasmus!  Anyway, I&rsquo;ve been gleaning at
other Bazaar web frontends for a while.  The only real option is
Loggerhead, but even though I consider myself a computer pro I just
cannot seem to wrap my head around how to set it up.  I just wanted to
setup a local browser for my user, without the need for root access.
Like bzrweb supports, after having abandoned that, seemingly radical
idea, I tried setting up a site wide shared installation &hellip; no luck so
far. :-/</p>
<p>In comparison to Loggerhead I easily managed to setup a Git repository
browser, using a <code>/pub/git</code> structure, see <a href="http://git.troglobit.com/">git.vmlinux.org</a>.  The
gitweb package in Ubuntu was very easy to setup, the one only thing I
had problem with was the Apache VirtualHost setup.  Some sleep cured
that, but I should post the conf here, in case someone else experiences
trouble.</p>
<p>I&rsquo;ll have another go at setting up Loggerhead later, or perhaps try to
fixup bzrweb.  I&rsquo;m currently leaning towards fixing up bzrweb.  Fix bugs
viewing tree files, refactor tarball export and a new project summary
page, are some of the most interesting things I can come up with.  If
only things could settle down at work for a while — oh well, vacation is
coming up. Soon, my precious, soon &hellip;</p>
<p>First, however, I will publish the micro vt100/ansi tetris version I
found last week.  It will be the second project where I use Git, the
first one was <code>cons</code>, which is a Xen xm wrapper for non privileged
users.</p>
<p>Some Git and Bazaar links:</p>
<ul>
<li><a href="http://www.spheredev.org/wiki/Git_for_the_lazy">Git for the Lazy</a> :-)</li>
<li><a href="http://appletree.or.kr/quick_reference_cards/CVS-Subversion-Git/">CVS, Subversion &amp; Git Refcards</a></li>
<li><a href="http://www.fthieme.net/drupal6/node/77">Converting Bzr to Git</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Howto Setup and Run Xen</title>
            <link>/2009/06/08/howto-setup-and-run-xen/</link>
            <pubDate>Mon, 08 Jun 2009 22:05:42 +0000</pubDate>
            
            <guid>/2009/06/08/howto-setup-and-run-xen/</guid>
            <description>This is an extremly brief and quick Xen tutorial. There are lots of them already, see your GNU/Linux distribution&amp;rsquo;s wiki, HowtoForge or other places for a starter guide. This particular HowTo deals with setting up Xen as easy as possible using Ubuntu 8.04 LTS as host operating system (dom0 in Xen terms) and Ubuntu 9.04 as guest operating systems (domU in Xen lingo).
Ubuntu 8.04 LTS comes with a Xen kernel that can run as dom0.</description>
            <content type="html"><![CDATA[<p>This is an extremly brief and quick <a href="http://www.xenproject.org/">Xen</a> tutorial. There are lots of
them already, see your GNU/Linux distribution&rsquo;s wiki, HowtoForge or
other places for a starter guide. This particular HowTo deals with
setting up Xen as easy as possible using Ubuntu 8.04 LTS as host
operating system (dom0 in Xen terms) and Ubuntu 9.04 as guest operating
systems (domU in Xen lingo).</p>
<p>Ubuntu 8.04 LTS comes with a Xen kernel that can run as dom0. This is
quite important, so pay attention to setting that up correctly. For this
I recommend the <a href="http://howtoforge.org/high-performance-xen-on-ubuntu-8.04-amd64">HowtoForge Tutorial</a>.</p>
<p><strong>Note:</strong> you will need to upgrade the default Xen 3.2 to 3.3 to be able
to run the latest distributions as guest OS.  See this
<a href="https://answers.launchpad.net/ubuntu/+question/50326">Ubuntu question</a> for more insight.  To get Xen 3.3, simply activate
the Hardy backports repository in your <code>/etc/apt/sources.list</code> and, as
usual, pay attention to your <code>/boot/grub/menu.lst</code> so that it points out
the Xen 3.3 image in the <code>defaults=</code> option.</p>
<p>When done with the basic setup you should install pygrub on your host,
this is a truly magic piece of software that makes it possible to boot
all guests using their own kernel and modules.  See the <a href="http://wiki.debian.org/PyGrub">Debian wiki</a>
for some details on install and setup.  Then ignore what you read and do
like this:</p>
<pre><code># /var/lib/xend/domains/example/config.sxp - Xen domU example.
# Note the order of partitions in disk=[], the first listed partition
# is the partition where your /boot (grub) resides. 
bootloader  = '/usr/bin/pygrub'

builder     = 'linux'
memory      = '2048'
root        = '/dev/xvda1 ro'

disk        = [
  'phy:/dev/disk/by-uuid/df3418f5-2fc3-443c-8e64-4395828dc678,xvda1,w',
  'phy:/dev/disk/by-uuid/acecf01e-c4d9-4a7b-b18a-681c69f71173,xvda2,w',
]

name        = 'example'

vif         = [ 'bridge=eth1' ]
dhcp        = &quot;off&quot;
ip          = &quot;12.34.56.78&quot;
netmask     = &quot;255.255.255.252&quot;
gateway     = &quot;12.34.56.77&quot;
hostname    = &quot;example&quot;

on_poweroff = 'destroy'
on_reboot   = 'restart'
on_crash    = 'restart'
vcpus       = 1
extra       = 'xencons=tty1'
</code></pre>
<p>When installing grub on your guest, don&rsquo;t pay any attention to Grub
complaining about not being able to map <code>/dev/xvda1</code> to a BIOS disk.
pyGrub doesn&rsquo;t care about such wordly things as physical disks.  Just
make sure the <code>/boot</code> directory&rsquo;s partition (often <code>/</code>) is the first
listed in the <code>disk=[]</code> array above.</p>
<p>You may need to edit the <code>update-grub</code> script before you install grub,
it is located at <code>/usr/sbin/update-grub</code>.  Search for <code>in_xen</code>, a fairly
long way down.  Make sure it&rsquo;s set to <code>in_xen=1</code> before the big
<code>if[]</code>-clause that depends on it.  Without this fix the Xen able kernels
in Ubuntu 9.04, and later, are not detected.</p>
<p>Now run <code>update-grub</code> and answer yes to the questions. Take good care to
verify that the script actually finds one active (server) kernel and
adds it properly to your <code>/boot/grub/menu.lst</code> file.</p>
<p>Another common problem is the lack of a console login.  Usually you
don&rsquo;t need one, but if you&rsquo;d like to check your domU from within your
dom0 you need to add the file &ldquo;console&rdquo; to <code>/etc/event.d</code></p>
<pre><code># console - getty
#
# This service maintains a getty on the Xen serial console
# from the point the system is started until it is shut
# down again.

start on stopped rc2
start on stopped rc3
start on stopped rc4
start on stopped rc5

stop on runlevel 0
stop on runlevel 1
stop on runlevel 6

respawn
exec /sbin/getty 38400 console
</code></pre>
<p>That should do the trick!  If it doesn&rsquo;t, then there&rsquo;s plenty of help to
find in the Debian and Ubuntu wikis, see links above. Good luck!</p>
]]></content>
        </item>
        
        <item>
            <title>Learning About GIT</title>
            <link>/2009/04/10/learning-about-git/</link>
            <pubDate>Fri, 10 Apr 2009 16:23:42 +0000</pubDate>
            
            <guid>/2009/04/10/learning-about-git/</guid>
            <description>It has been a long time coming, but now I&amp;rsquo;m seriously starting to look at Git. Git is the content tracker used by the Linux kernel folks, initially developed by Torvalds.
At Westermo R&amp;amp;D we use Subversion for our daily operations and today I started migrating the software to Git. Mainly just to get a comparison of performance, storage size and to explore how we can use Git on top of svn to become more productive when working in parallel in different teams.</description>
            <content type="html"><![CDATA[<p>It has been a long time coming, but now I&rsquo;m seriously starting to look
at <a href="http://git-scm.com/">Git</a>.  Git is the content tracker used by the
<a href="http://www.kernel.org">Linux kernel</a> folks, initially developed by
Torvalds.</p>
<p>At <a href="http://www.westermo.com">Westermo R&amp;D</a> we use Subversion for our
daily operations and today I started migrating the software to Git.
Mainly just to get a comparison of performance, storage size and to
explore how we can use Git on top of svn to become more productive when
working in parallel in different teams.  We&rsquo;ve tried this quite
extensively before, using Subversion branches and even though it&rsquo;s a
heck of a lot easier to use compared to CVS its strength is not in
merging.</p>
<p>The new
<a href="http://subversion.tigris.org/merge-tracking/func-spec.html">merge tracking</a>
feature in Subversion 1.5 and features like
<a href="http://subversion.tigris.org/svn_1.6_releasenotes.html#tree-conflicts">detection of tree conflicts</a>
in, the recently released, 1.6 helps.  However, working in small teams,
disconnected from a centralised server is still not possible with svn,
OK sure there is <a href="http://svk.bestpractical.com/">svk</a>, but honestly,
doesn&rsquo;t that make you think of CVS and bolting on features after the
fact, similar to <a href="http://www.cvsnt.org/">CVSNT</a> or
<a href="http://opencvs.org/">OpenCVS</a>.  Intriguingly bizarre projects. :-)</p>
<p>The reasons for trying out Git are not only related to any short comings
of Subversion, Git has lot of strong points on its own.  See
<a href="http://www.vijedi.net/2009/reasons-for-using-the-git-svn-bridge/">here</a>
for instance:</p>
<ul>
<li>SHA-1 hashes for each commit, makes it possible to easier detect history corruptions</li>
<li>Local developer branches</li>
<li>Fast branch switching</li>
<li>Cherry picking commits from other branches, easily</li>
<li>Stashing/Shelving, i.e. put aside things you&rsquo;re working on for later</li>
</ul>
<p>I&rsquo;ve started collecting a set of links that seem to be useful:</p>
<ul>
<li><a href="http://tsunanet.blogspot.com/2007/07/learning-git-svn-in-5min.html">Learning git-svn in five minutes</a></li>
<li><a href="http://www.kernel.org/pub/software/scm/git/docs/git-svn.html">The git-svn(1) man page</a></li>
<li><a href="http://git.or.cz/course/svn.html">Git - SVN Crash Course</a></li>
<li><a href="http://utsl.gen.nz/talks/git-svn/intro.html">An introduction to git-svn for Subversion users and deserters</a></li>
<li><a href="http://flavio.castelli.name/howto_use_git_with_svn">How to use Git and SVN together</a></li>
<li><a href="http://tsgates.cafe24.com/git/git-emacs.html">A guided tour of emacs-git</a></li>
<li><a href="http://xtalk.msk.su/~ott/en/writings/emacs-vcs/EmacsGit.html">Work with Git from Emacs</a></li>
<li><a href="http://www.emacswiki.org/emacs/Git">EmacsWiki:Git</a></li>
</ul>
<p>I&rsquo;ll conclude this post with two YouTube entries, first is the, now
classic, presentation by
<a href="http://www.youtube.com/watch?v=4XpnKHJAok8">Linus Torvalds on what Git isn&rsquo;t</a>
&hellip; and then
<a href="http://www.youtube.com/watch?v=8dhZ9BXQgc4">Randal Schwartz on what Git is</a>
&hellip;</p>
]]></content>
        </item>
        
        <item>
            <title>Brief libev update</title>
            <link>/2009/04/05/brief-libev-update/</link>
            <pubDate>Sun, 05 Apr 2009 23:53:47 +0000</pubDate>
            
            <guid>/2009/04/05/brief-libev-update/</guid>
            <description>I have now updated the libev examples. It took me a while, but during that time I have been hard at work converting two of our network daemons to use libev. As of today the upcoming Westermo WeOS uses libev in both its rstpd and igmpd implementations.
Updated example code:
 timer test message queue test  Enjoy, and feel free to [contact me][6] if you have any questions or comments on the code.</description>
            <content type="html"><![CDATA[<p>I have now updated the <a href="https://github.com/troglobit/toolbox/tree/master/libev-examples">libev examples</a>.  It took me a while, but
during that time I have been hard at work converting two of our network
daemons to use <a href="http://software.schmorp.de/pkg/libev.html">libev</a>.  As of today the upcoming <a href="http://www.westermo.com">Westermo</a> WeOS
uses libev in both its rstpd and igmpd implementations.</p>
<p>Updated example code:</p>
<ul>
<li><a href="https://github.com/troglobit/toolbox/blob/master/libev-examples/event-demo.c">timer test</a></li>
<li><a href="https://github.com/troglobit/toolbox/blob/master/libev-examples/event-demo2.c">message queue test</a></li>
</ul>
<p>Enjoy, and feel free to [contact me][6] if you have any questions or
comments on the code.  For libev specific help I can really recommend
their [mailing list][7]!</p>
<p>[6]: Joachim Nilsson <a href="mailto:troglobit@gmail.com">mailto:troglobit@gmail.com</a>
[7]: <a href="http://lists.schmorp.de/mailman/listinfo/libev">http://lists.schmorp.de/mailman/listinfo/libev</a></p>
]]></content>
        </item>
        
        <item>
            <title>The Marvellous libev</title>
            <link>/2009/03/28/the-marvellous-libev/</link>
            <pubDate>Sat, 28 Mar 2009 23:00:00 +0000</pubDate>
            
            <guid>/2009/03/28/the-marvellous-libev/</guid>
            <description>A very good friend mine recently told me about a neat event library, libev. Usually when he drops me links like that it takes me a couple of years to react and finally adopt.
This time it only took me about a month.
He has actually showed me lots of very useful stuff throughout the years, and even though we used GNU/Linux at university, he was one those hard core people who showed me the path into a successful full-time career as a Linux developer.</description>
            <content type="html"><![CDATA[<p>A very good friend mine recently told me about a neat event library,
<a href="http://software.schmorp.de/pkg/libev">libev</a>.  Usually when he drops me
links like that it takes me a couple of years to react and finally
adopt.</p>
<p>This time it only took me about a month.</p>
<p>He has actually showed me lots of very useful stuff throughout the
years, and even though we used GNU/Linux at university, he was one
those hard core people who showed me the path into a successful
full-time career as a Linux developer. I don&rsquo;t think I have ever
thanked you properly for that, Jakob!</p>
<p>As it turns out libev was exactly what I have been looking for, for
years!  Way back in 2005 when I switched jobs I started working with a
scary home brew code base ported to Linux from VxWorks.  From the
original code only the basic state machine, basic election algorithms
and some other minor glue code remains.  I have slowly refactored the
code base into something, hopefully, more maintainable.</p>
<p>The one missing piece was the timer implementation.  The old code used
to create a new pthread for each new timeout.  I tried replacing it with
code of
<a href="https://github.com/troglobit/toolbox/blob/master/timer/timer.c">my own</a>,
based on Don Libes
<a href="http://www.kohala.com/start/libes.timers.txt">&ldquo;Implementing Software Timers&rdquo;</a>.
As it turns out libev already has (working) timers, in fact, it has
taken an even more complete approach and made almost everything into
events with callbacks, perfect for state machines!</p>
<p>After having done
<a href="https://github.com/troglobit/toolbox/blob/master/event-demo.c">some initial testing</a>
of the libev timers I put on a big smile and fired up Emacs to
investigate what other parts of that home brew code base were eligible
for replacement, when i suddenly hit me: the state machine consists of a
couple of threads that pass messages between them using <code>msgsnd()</code> and
<code>msgrcv()</code>, bad old XSI IPC primitives.  Bad guys that don&rsquo;t use
standard file descriptors.  A quick and dirty hack confirms it. I
started looking around and I had a vague recollection of some message
primitives that actually used file descriptors.  On the mailing list
Marc (Lehman) was as always extremely quick to answer my questions and
with his help I eventually found the <code>mq_overview(7)</code> man page:</p>
<blockquote>
<p>Polling message queue descriptors
On Linux, a message queue descriptor is actually a file descriptor,
and can be monitored using select(2), poll(2), or epoll(7). This
is not portable.</p>
</blockquote>
<p>Wow, I could hardly wait until I, later that day, could get my hands on
the keyboard again and try it out!  Yes, the POSIX message queue
primitives work!  Here is my
<a href="https://github.com/troglobit/toolbox/blob/master/event-demo2.c">sample message queue code</a>.
Compile it in Emacs with <code>M-x compile</code> (I have that bound to F9 in my
.emacs, Borland IDE style :)</p>
<p>Thus far I must say I can really recommend libev!  Even though it isn&rsquo;t
<a href="http://www.openbsd.org/policy.html">ISC licensed</a>, it&rsquo;s dual licensed
under the
<a href="http://en.wikipedia.org/wiki/BSD_licenses">2-clause BSD license</a> and
the <a href="http://www.gnu.org/copyleft/gpl.html">GNU GPL</a>.  In my case I&rsquo;ll go
with the 2-clause BSD license, which according to Wikipedia is
&ldquo;functionally equivalent&rdquo; to the
<a href="http://en.wikipedia.org/wiki/MIT_License">MIT license</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Why I Like C</title>
            <link>/2009/03/27/why-i-like-c/</link>
            <pubDate>Fri, 27 Mar 2009 00:37:42 +0000</pubDate>
            
            <guid>/2009/03/27/why-i-like-c/</guid>
            <description>I thought I was alone, but it turns out I&amp;rsquo;m not. Scott James Remnant describes exactly what I&amp;rsquo;ve been feeling the last couple of years. Read his blog entry on the subject. I couldn&amp;rsquo;t agree more.</description>
            <content type="html"><![CDATA[<p>I thought I was alone, but it turns out I&rsquo;m not.
<a href="http://netsplit.com">Scott James Remnant</a> describes exactly what I&rsquo;ve
been feeling the last couple of years.  Read his
<a href="https://web.archive.org/web/20121019061557/http://netsplit.com/2009/03/26/the-fallacy-of-high-level-languages/">blog entry</a>
on the subject.  I couldn&rsquo;t agree more.</p>
]]></content>
        </item>
        
        <item>
            <title>Link Collection 2009-02-28</title>
            <link>/2009/02/28/link-collection-2009-02-28/</link>
            <pubDate>Sat, 28 Feb 2009 23:36:37 +0000</pubDate>
            
            <guid>/2009/02/28/link-collection-2009-02-28/</guid>
            <description>This makes it possible to debug why a disk needs to spin up, and to increase battery life even more.
Dislike NetworkManager? Try wicd &amp;hellip;
Minimalistic distro Crush Bang Linux 8.10
Ah, what every FLOSS dad is looking for, a way to make your kids interested in your world instead of the dark side, and what is better than to trick them into it with a cool Linux game? Read Uwe Hermann&amp;rsquo;s blog about Teeworlds, or visit the home page.</description>
            <content type="html"><![CDATA[<p><a href="http://www.linuxinsight.com/proc_sys_vm_block_dump.html">This makes it possible</a> to debug why a disk needs to spin up, and to
increase battery life even more.</p>
<p>Dislike NetworkManager? Try <a href="http://wicd.sourceforge.net/">wicd</a> &hellip;</p>
<p>Minimalistic distro <a href="http://crunchbanglinux.org/">Crush Bang Linux 8.10</a></p>
<p>Ah, what every <a href="https://en.wikipedia.org/wiki/Free_and_open-source_software">FLOSS</a> dad is looking for, a way to make your kids
interested in <a href="http://www.kernel.org/">your world</a> instead of the dark side, and what is
better than to trick them into it with a cool Linux game?
<a href="http://www.hermann-uwe.de/blog/teeworlds--a-fun-fast-paced-open-source-online-multiplayer-shooter">Read Uwe Hermann&rsquo;s blog about Teeworlds</a>, or visit the
<a href="http://www.teeworlds.com/">home page</a>.</p>
<p>OK, so my kids are five and three years old, maybe <a href="http://www.worldofgoo.com/">World of Goo</a> is
more to their liking? ;-)  Try the <a href="http://www.worldofgoo.com/dl2.php?lk=demo">demo here</a>!</p>
]]></content>
        </item>
        
        <item>
            <title>Reminder to Self</title>
            <link>/2009/02/14/reminder-to-self/</link>
            <pubDate>Sat, 14 Feb 2009 21:13:41 +0000</pubDate>
            
            <guid>/2009/02/14/reminder-to-self/</guid>
            <description>How to recode AVI-files to be able to write them to a Video CD.
ffmpeg -i original.avi -target pal-vcd copy.mpg vcdimager -t vcd1 -l &amp;quot;Title&amp;quot; -c vcd.cue -b vcd.bin copy.mpg cdrdao write --device /dev/cdrw vcd.cue  Note: vcdimager is able to take multiple .mpg files as argument, very useful when burning multiple family videos to the same disc!
 Tip from Johan Risberg on how to be able to reattach a UTF-8 Linux screen session from Cygwin.</description>
            <content type="html"><![CDATA[<p>How to recode AVI-files to be able to write them to a <a href="http://en.wikipedia.org/wiki/Video_CD">Video CD</a>.</p>
<pre><code>ffmpeg -i original.avi -target pal-vcd copy.mpg
vcdimager -t vcd1 -l &quot;Title&quot; -c vcd.cue -b vcd.bin copy.mpg
cdrdao write --device /dev/cdrw vcd.cue
</code></pre>
<p><strong>Note:</strong> <code>vcdimager</code> is able to take multiple .mpg files as argument,
very useful when burning multiple family videos to the same disc!</p>
<hr>
<p>Tip from <a href="http://nummerfem.se/">Johan Risberg</a> on how to be able to reattach a UTF-8 Linux
screen session from Cygwin.  First, start irssi in a screen from a
Linux login with <code>LANG=LANG en_US.utf8</code>.  Then reattach to the screen,
preferably using <code>-xRR</code>, with <code>LANG=C</code> from <a href="http://www.cygwin.org/cygwin">Cygwin</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Netork Programming -- Link Collection</title>
            <link>/2009/02/10/network-programming-link-collection/</link>
            <pubDate>Tue, 10 Feb 2009 21:56:42 +0000</pubDate>
            
            <guid>/2009/02/10/network-programming-link-collection/</guid>
            <description>This is a first effort at collecting information about network programming structs and APIs available in UNIX. I plan on updating this as I find more.
 Linux Journal: Linux Network Programming, Part I, II, III. Linux Journal: Multicast Routing Code in the Linux Kernel Linux Journal: Inside the Linux Packet Filter, Part I, II /usr/include/netinet/in.h  There are of course, in addition to these fine sources, the entire catalogue of work by Richard M.</description>
            <content type="html"><![CDATA[<p>This is a first effort at collecting information about network
programming structs and APIs available in UNIX.  I plan on updating this
as I find more.</p>
<ul>
<li>Linux Journal: Linux Network Programming, Part
<a href="http://www.linuxjournal.com/article/2333">I</a>,
<a href="http://www.linuxjournal.com/article/2335">II</a>,
<a href="http://www.linuxjournal.com/article/2336">III</a>.</li>
<li>Linux Journal:
<a href="http://www.linuxjournal.com/article/6070">Multicast Routing Code in the Linux Kernel</a></li>
<li>Linux Journal: Inside the Linux Packet Filter, Part
<a href="http://www.linuxjournal.com/article/4852">I</a>,
<a href="http://www.linuxjournal.com/article/5617">II</a></li>
<li>/usr/include/netinet/in.h</li>
</ul>
<p>There are of course, in addition to these fine sources, the entire
catalogue of work by <a href="http://kohala.com/start/">Richard M. Stevens</a>.
May he rest in peace.  His works are considered <em>the</em> reference
litterature on this subject, see for instance the
<a href="http://www.unpbook.com">UNIX Network Programming</a>
(<a href="http://www.linuxjournal.com/article/2656">review</a>).</p>
]]></content>
        </item>
        
        <item>
            <title>Minix editline v0.3.0</title>
            <link>/2009/02/08/minix-editline-v0-dot-3-0/</link>
            <pubDate>Sun, 08 Feb 2009 22:35:22 +0000</pubDate>
            
            <guid>/2009/02/08/minix-editline-v0-dot-3-0/</guid>
            <description>It&amp;rsquo;s here! Fresh, new and packed with new features! Well, really just one new major feature — support for ANSI arrow keys. A good enough reason to bump the minor version number :-)
Get it from the usual FTP location:
 http://ftp.vmlinux.org/pub/People/jocke/minix-editline/  </description>
            <content type="html"><![CDATA[<p>It&rsquo;s here!  Fresh, new and packed with new features!  Well, really just
one new major feature — support for ANSI arrow keys.  A good enough
reason to bump the minor version number :-)</p>
<p>Get it from the usual FTP location:</p>
<ul>
<li><a href="http://ftp.vmlinux.org/pub/People/jocke/minix-editline/">http://ftp.vmlinux.org/pub/People/jocke/minix-editline/</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>The joy of colors</title>
            <link>/2008/11/09/the-joy-of-colors/</link>
            <pubDate>Sun, 09 Nov 2008 00:39:27 +0000</pubDate>
            
            <guid>/2008/11/09/the-joy-of-colors/</guid>
            <description>Ever so often, as I have mentioned before, I lose myself in trying to find new ways of working and doing my daily tasks. One such digression is the topic of editors. I mainly use GNU Emacs for development and other major tasks, for everything else I use Vim.
Vim is quick to start, capable, good looking and easy to use, contrary to other vi implementations. (Most notably nvi, which I hate with a passion!</description>
            <content type="html"><![CDATA[<p>Ever so often, as I have mentioned before, I lose myself in trying to
find new ways of working and doing my daily tasks.  One such digression
is the topic of editors.  I mainly use GNU Emacs for development and
other major tasks, for everything else I use Vim.</p>
<p>Vim is quick to start, capable, good looking and easy to use, contrary
to other vi implementations. (Most notably nvi, which I hate with a
passion!) Today I found a neat colorscheme that works well on terminals
with a black background. It&rsquo;s called &lsquo;advantage&rsquo; and is available from
the <a href="https://web.archive.org/web/20090601001529/http://www.cs.cmu.edu/~maverick/VimColorSchemeTest/">Vim Color Scheme Test</a>.</p>
<p>To install, download <code>advantage.vim</code> and copy it to your
<code>/usr/share/vim/vim71/colors/</code> directory.  Then open a C source file in
vim and type <code>:colorscheme advantage</code> to activate it.</p>
<p>Thank you <a href="https://web.archive.org/web/20090601001529/http://www.cs.cmu.edu/~maverick/">Shan Leung Maverick Woo</a>! :-)</p>
]]></content>
        </item>
        
        <item>
            <title>Minix editline v0.2.2</title>
            <link>/2008/11/08/minix-editline-v0-dot-2-2/</link>
            <pubDate>Sat, 08 Nov 2008 20:24:22 +0000</pubDate>
            
            <guid>/2008/11/08/minix-editline-v0-dot-2-2/</guid>
            <description>Oups, it seems I forgot to announce the v0.2.2 release of the Minix editline library! It was made official in Bazaar over a month ago, 2008-10-02, but it was not until today that the tarball was created and uploaded to the FTP.
The most noteworthy in this release is support for command completion with the addition of rl_complete() and rl_list_possib(). Two function pointers that easily can be overloaded by the user.</description>
            <content type="html"><![CDATA[<p>Oups, it seems I forgot to announce the v0.2.2 release of the Minix
editline library!  It was made official in Bazaar over a month ago,
2008-10-02, but it was not until today that the tarball was created and
uploaded to the FTP.</p>
<p>The most noteworthy in this release is support for command completion
with the addition of <code>rl_complete()</code> and <code>rl_list_possib()</code>.  Two
function pointers that easily can be overloaded by the user.  See the
examples section of the tree for example usage.</p>
<p>Get it from the usual FTP location:</p>
<ul>
<li><a href="http://ftp.vmlinux.org/pub/People/jocke/minix-editline/">http://ftp.vmlinux.org/pub/People/jocke/minix-editline/</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Ubuntu 8.10rc1 &amp;mdash; NetworkManager WTF?!</title>
            <link>/2008/10/27/ubuntu-8-dot-10rc1-networkmanager-wtf/</link>
            <pubDate>Mon, 27 Oct 2008 19:50:03 +0000</pubDate>
            
            <guid>/2008/10/27/ubuntu-8-dot-10rc1-networkmanager-wtf/</guid>
            <description>I tried upgrading from Hardy Heron to Intrepid Ibex this weekend. Big mistake. If I disregard the total dpkg meltdown that I, as usually, had to resolve manually there still remains this recurring madness called Network Manager.
I&amp;rsquo;m an engineer. I have a masters degree in computer engineering. I have worked professionally with GNU/Linux since 2000 and been a die hard user of it since I left OS/2 behind in 1996.</description>
            <content type="html"><![CDATA[<p>I tried upgrading from Hardy Heron to Intrepid Ibex this weekend.  Big
mistake.  If I disregard the total dpkg meltdown that I, as usually, had
to resolve manually there still remains this recurring madness called
Network Manager.</p>
<p>I&rsquo;m an engineer.  I have a masters degree in computer engineering.  I
have worked professionally with GNU/Linux since 2000 and been a die hard
user of it since I left OS/2 behind in 1996.  But come on!  Why does it
take a software engineer to perform a simple upgrade?  Even worse, why
do I have to be a network engineering specialist to figure out why
simple wired ethernet doesn&rsquo;t work out of the box?</p>
<p>Network Manager fails completely to:</p>
<ol>
<li>Select wired network over an open Telia hotspot</li>
<li>Distinguish between my primary and secondary wired interfaces</li>
<li>Completely loses my <code>/etc/resolv.conf</code> all the time</li>
</ol>
<p>Sorry, but that is completely inexcusable!  <a href="http://www.gnome.org/projects/NetworkManager/">Network Manager</a>, you
suck!  &ldquo;Pain-Free Networking&rdquo;, my ass! :-P</p>
]]></content>
        </item>
        
        <item>
            <title>Cross Compiler Foo</title>
            <link>/2008/08/20/cross-compiler-foo/</link>
            <pubDate>Wed, 20 Aug 2008 20:14:42 +0000</pubDate>
            
            <guid>/2008/08/20/cross-compiler-foo/</guid>
            <description>There is a certain magic surrounding cross compilers and the people that know how to build one. Not unlike that of (Linux/BSD) kernel developers. At work we today support two embedded Linux targets, both are ARM based, and in neither of the two have we built the cross compiler ourselves. The first was ye&amp;rsquo; old 2.95 based from uClinux.org and the second we had a consultant build for us. Lame!</description>
            <content type="html"><![CDATA[<p>There is a certain magic surrounding cross compilers and the people that
know how to build one.  Not unlike that of (Linux/BSD) kernel
developers.  At work we today support two embedded Linux targets, both
are ARM based, and in neither of the two have we built the cross
compiler ourselves.  The first was ye&rsquo; old 2.95 based from
<a href="http://www.uclinux.org/">uClinux.org</a> and the second we had a consultant build for us.  Lame!</p>
<p>Ever since I was appointed software architect I&rsquo;ve had this nagging
sensation about our cross-compiler situation.  We do everything else:
roll our own archs for Linux, patch BusyBox, design our own L2/L3
network daemons, and what-not.  Very annoying that we have such poor
control of the mantle piece of our build environment.</p>
<p>Sure, it&rsquo;s almost indistinguishable from magic, but it&rsquo;s not hard.
There are fine helpers such as <a href="http://buildroot.uclibc.org/">buildroot</a>, ptxdist and the aging
crosstool scripts by Dan Kegel.  I used to do some work with Dan&rsquo;s
scripts in a couple of previous jobs, so it was a pleasant surprise to
find that the project had found a new maintainer!</p>
<p>I can highly recommend the <a href="http://crosstool-ng.org/">crosstool-NG</a> project!  It makes building
a toolchain really easy.  In a snap had I copied our uClibc <code>.config</code>
into the work dir of my configuration, issued the &ldquo;build&rdquo; command and
wham, there it was a coffee break later.  A working GCC v4.2.4 cross
compiler for Arm Xscale (big-endian) with built-in uClibc (no more GLIBC
madness and separate uClibc builds in our tree), not to mention an all
you can eat buffe of extra tools for the target: <code>strace</code>, <code>gdb</code> &amp;
<code>gdbserver</code>, <code>libdmalloc</code>, <code>ncurses</code> &hellip; crazy.</p>
<p>I&rsquo;ll start rolling it out on monday in our department and keep close
tabs on the development of crosstool-NG to be able to grab the
latest 4.3.2, or later GCC when it enters the ct-ng Subversion
repository.</p>
]]></content>
        </item>
        
        <item>
            <title>Moving to ISC</title>
            <link>/2008/07/30/moving-to-isc/</link>
            <pubDate>Wed, 30 Jul 2008 23:53:42 +0000</pubDate>
            
            <guid>/2008/07/30/moving-to-isc/</guid>
            <description>I hereby announce that all of the code I produce from now on will use the ISC license. Previously I&amp;rsquo;ve used the MIT license and the GNU GPL, or LGPL where applicable.
The reason for changing this is two-fold. First, I like to be able to reuse much of what I do in proprietary settings. Yes, I&amp;rsquo;m one of those people who look upon the world with &amp;ldquo;grey&amp;rdquo; eyes rather than black &amp;amp; white.</description>
            <content type="html"><![CDATA[<p>I hereby announce that all of the code I produce from now on will use
the <a href="http://en.wikipedia.org/wiki/ISC_license">ISC license</a>.  Previously
I&rsquo;ve used the <a href="http://en.wikipedia.org/wiki/MIT_License">MIT license</a>
and the GNU GPL, or LGPL where applicable.</p>
<p>The reason for changing this is two-fold.  First, I like to be able to
reuse much of what I do in proprietary settings. Yes, I&rsquo;m one of those
people who look upon the world with &ldquo;grey&rdquo; eyes rather than black &amp;
white.  Second, the ISC license is a lot more clear on the wording but
is still GPL compatible.</p>
<p>OpenBSD also has some
<a href="http://www.openbsd.org/policy.html">thoughts on the matter</a> which I
find interesting.</p>
]]></content>
        </item>
        
        <item>
            <title>Link Collection w31 2008</title>
            <link>/2008/07/30/link-collection-w31-2008/</link>
            <pubDate>Wed, 30 Jul 2008 16:22:36 +0000</pubDate>
            
            <guid>/2008/07/30/link-collection-w31-2008/</guid>
            <description>George Dyson, son of legendary Freeman Dyson, talks about the first computer, the first software bugs (both physical and logical) and the initial struggles of hackers. Fun history lesson for computer engineers and programmers alike. (Now, go crawl the web for &amp;ldquo;Dyson Sphere&amp;rdquo; and &amp;ldquo;Star Trek&amp;rdquo;! :-)
Is Ubuntu 8.04 really that buggy as everyone suggest? My guess is that we&amp;rsquo;ve reached a breaking point where beginner users (&amp;lt; 1 year) are starting to outnumber the older &amp;ldquo;hard core&amp;rdquo; users.</description>
            <content type="html"><![CDATA[<p>George Dyson, son of legendary <a href="http://en.wikipedia.org/wiki/Freeman_Dyson">Freeman Dyson</a>, talks about
<a href="http://www.ted.com/index.php/talks/george_dyson_at_the_birth_of_the_computer.html">the first computer</a>, the first software bugs (both physical and
logical) and the initial struggles of hackers.  Fun history lesson for
computer engineers and programmers alike.  (Now, go crawl the web for
&ldquo;Dyson Sphere&rdquo; and &ldquo;Star Trek&rdquo;! :-)</p>
<p>Is Ubuntu 8.04 really that buggy as everyone suggest?  My guess is that
we&rsquo;ve reached a breaking point where beginner users (&lt; 1 year) are
starting to outnumber the older &ldquo;hard core&rdquo; users.  Or have the top 20%
moved on to other distros?  <a href="http://xkcd.com/456/">Even XKCD has picked up on it &hellip;</a></p>
<p><a href="http://www.gnome.org/~michael/">Michael Meeks</a> of Novell was interviewed recently by the Austrian
paper <a href="http://derstandard.at/?url=/?id=1216917892794">derStandard.at</a>, and one of the things he mentioned was the
<a href="http://go-oo.org/discover/">OpenOffice fork</a> they maintain, very interesting new features, not
(yet) included in OpenOffice.org, e.g. .docx and VBA support!</p>
<p>A couple of days ago I managed to convince <a href="http://vmlinux.org/mwik/">a friend</a> of mine to try
running bleeding edge GNU Emacs from CVS.  He almost gave up, kicking
and screaming, due to his Bitstream Vera fonts becoming totally screwed
up compared to <a href="http://peadrop.com/blog/category/computers/emacs/">Alexandre Vassalottis snapshot build</a> from January.
It turned out to be caused by the Emacs font back-end
<a href="http://lists.gnu.org/archive/html/emacs-devel/2008-06/msg01224.html">defaulting to the old X font renderer</a> rather than the new XFT one.</p>
<p>Here is <a href="http://vmlinux.org/jocke/myblog/entries/misc/my.Xresources">my ~/.Xresources</a> file that seems to fix the problem.  Run
<code>xrdb -merge ~/.Xresources</code> to merge in the new settings without logging
out/in again.</p>
<p>The <a href="http://www.canonical.com/">Canonical</a> <a href="http://www.sf.net/">SourceForge</a> equivalent, <a href="http://www.launchpad.net/">Launchpad</a>, is
slowly turning into something really cool.  <a href="https://launchpad.net/+tour/index">Take the tour</a> if you
are curious and want to know more.</p>
<p>I cannot believe I haven&rsquo;t heard of <a href="http://www.pastebin.com/">pastebin</a> before.  Thanks
<a href="http://kalkig.nu/">Rooth</a>!</p>
<p>My <a href="http://vmlinux.org/ilse/">dear wife</a> is a <a href="http://www.nano-editor.org/">GNU Nano</a> user.  Here are a
<a href="http://nullcortex.com/2008/07/28/nano-nano/">couple of tips</a> for her, and other die-hard Nano users.</p>
<p>Are you an electronics or computer engineer?  Then you&rsquo;ve probably had
trouble explaining boolean logic to people.
<a href="http://www.youtube.com/watch?v=SudixyugiX4">This dude explains it all using dominoes.</a></p>
<p>Finishing off with this, unbeatable, hardware hacker.  He&rsquo;s transformed
his <a href="http://en.wikipedia.org/wiki/Asus_Eee_PC">EeePC</a> into a veritable monster!  <a href="http://beta.ivancover.com/wiki/index.php/Eee_PC_Internal_Upgrades">See his guide</a> for the
changes necessary &hellip;</p>
]]></content>
        </item>
        
        <item>
            <title>HowTo: Build GNU Emacs from CVS</title>
            <link>/2008/07/28/howto-build-gnu-emacs-from-cvs/</link>
            <pubDate>Mon, 28 Jul 2008 01:38:13 +0000</pubDate>
            
            <guid>/2008/07/28/howto-build-gnu-emacs-from-cvs/</guid>
            <description>Why would you want to do this? Well, considering all the neat new things that have been added lately it should be tempting for any old Emacs fan.
The Emacs Wiki has all the info you need, but here is a quick run-down of the bare necessities. Start by checking out your working copy:
cvs -z3 -d:pserver:anonymous@cvs.savannah.gnu.org:/cvsroot/emacs co emacs cd emacs/ ./configure make bootstrap Start with ./src/emacs or symlink the binary to your ~/bin/ directory.</description>
            <content type="html"><![CDATA[<p>Why would you want to do this?  Well, considering all the <a href="http://blog.orebokech.com/2008/07/emacs-snapshot-20080727-1.html">neat new things</a>
that have been added lately it should be tempting for any old Emacs fan.</p>
<p>The <a href="http://www.emacswiki.org">Emacs Wiki</a> has all the info you need, but here is a quick run-down of
the bare necessities.  Start by <a href="http://www.emacswiki.org/cgi-bin/emacs-en/EmacsFromCVS">checking out your working copy</a>:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">cvs -z3 -d:pserver:anonymous@cvs.savannah.gnu.org:/cvsroot/emacs co emacs
cd emacs/
./configure
make bootstrap
</code></pre></div><p>Start with <code>./src/emacs</code> or symlink the binary to your <code>~/bin/</code> directory.
I.e. you don&rsquo;t have to run <code>make install</code> to use it.  Users of <code>emacsclient</code>
should symlink that to their <code>~/bin</code> as well.</p>
<p>Assumptions made:</p>
<ol>
<li>you have the appropriate -dev packages installed in Debian/Ubuntu, and</li>
<li>your <code>.bashrc</code> does indeed add <code>~/bin</code> to your search <code>$PATH</code> environment variable</li>
</ol>
]]></content>
        </item>
        
        <item>
            <title>More Emacs Progress!</title>
            <link>/2008/07/22/more-emacs-progress/</link>
            <pubDate>Tue, 22 Jul 2008 23:56:55 +0000</pubDate>
            
            <guid>/2008/07/22/more-emacs-progress/</guid>
            <description>Wow, I&amp;rsquo;m almost starting to feel like a Windows user. The latest CVS builds of GNU Emacs has a lot of new features:
 XFT Support (font anti-aliasing) Better GTK integration (desktop) A font selector!  I use the CVS version now as my daily driver in Ubuntu 8.10. It&amp;rsquo;s really useful, and I love the improved support for debugging programs inside Emacs!
I think it is quite impressive how far this little editor has come.</description>
            <content type="html"><![CDATA[<p>Wow, I&rsquo;m almost starting to feel like a Windows user.  The latest CVS
builds of <a href="http://www.gnu.org/software/emacs/">GNU Emacs</a> has a lot of new features:</p>
<ul>
<li>XFT Support (font anti-aliasing)</li>
<li>Better GTK integration (desktop)</li>
<li>A font selector!</li>
</ul>
<p>I use the CVS version now as my daily driver in Ubuntu 8.10.  It&rsquo;s
really useful, and I love the improved support for debugging programs
inside Emacs!</p>
<p>I think it is quite impressive how far this little editor has come.  OK,
so it is perhaps not just an editor anymore.  Some people claim it is a
fully sufficient operating system and other refer to it as a kitchen
sink.  Nevertheless, today you do not need to know any Lisp to configure
it or grab the scroll bar with the middle mouse button or any other
archaic method to get around.</p>
<p>Still interested?  Be sure to <a href="http://www.gnu.org/software/emacs/tour/">take the tour</a> and then proceed to
explore the wonderful world of Emacs! :)</p>
]]></content>
        </item>
        
        <item>
            <title>No Wireless LED on ThinkPad T61</title>
            <link>/2008/07/19/no-wireless-led-on-thinkpad-t61/</link>
            <pubDate>Sat, 19 Jul 2008 11:09:25 +0000</pubDate>
            
            <guid>/2008/07/19/no-wireless-led-on-thinkpad-t61/</guid>
            <description>I&amp;rsquo;ve got a ThinkPad T61 with Intel iwl3945 wireless chipset that I installed fresh with Ubuntu 8.04. Everything worked flawlessly out-of-the-box, except for the useless fingerprint scanner and the wireless LED. Don&amp;rsquo;t get me wrong, the wireless network worked fine, but the LED wasn&amp;rsquo;t on.
At first I thought there was something wrong with the LED itself, but a couple of searches later I found that it was a known limitation of the 2.</description>
            <content type="html"><![CDATA[<p>I&rsquo;ve got a ThinkPad T61 with Intel iwl3945 wireless chipset that I
installed fresh with Ubuntu 8.04.  Everything worked flawlessly
out-of-the-box, except for the useless fingerprint scanner and the
wireless LED.  Don&rsquo;t get me wrong, the wireless network worked fine, but
the LED wasn&rsquo;t on.</p>
<p>At first I thought there was something wrong with the LED itself, but a
couple of searches later I found that it was a known limitation of the
2.6.24 kernel included in 8.04.  A driver upgrade was scheduled for
8.04.1 and after a couple of months it was shipped.  Silly me thought
I&rsquo;d get the upgrade automatically, but it turns out that both the
iwl3945 and the iwl4965, as well as a bunch of other wireless drivers,
are tucked away in <a href="apt://linux-backports-modules-hardy">linux-backports-modules-hardy</a>, which will not be
installed by default.</p>
<p>So, if you have some wireless issues in Ubuntu 8.04, try installing this
(meta) package (that depends on a suitable version specific kernel) and
see if it helps.</p>
]]></content>
        </item>
        
        <item>
            <title>Suddenly Compiz is not Working Anymore ...</title>
            <link>/2008/07/17/suddenly-compiz-is-not-working-anymore-dot-dot-dot/</link>
            <pubDate>Thu, 17 Jul 2008 01:48:05 +0000</pubDate>
            
            <guid>/2008/07/17/suddenly-compiz-is-not-working-anymore-dot-dot-dot/</guid>
            <description>So weird. I usually rearrange my desktop every two weeks, often when I am bored. Sometimes I want a quick lean, smallish desktop and other times I want the whole shebang, all possible animations, SVG icons, mouse gestures — you name it and I will already have tons of it!
Today I wanted to enable Compiz again and it just wouldn&amp;rsquo;t start. After a couple of tries that turned out to be dead ends I finally got this:</description>
            <content type="html"><![CDATA[<p>So weird.  I usually rearrange my desktop every two weeks, often when I
am bored.  Sometimes I want a quick lean, smallish desktop and other
times I want the whole shebang, all possible animations, SVG icons,
mouse gestures — you name it and I will already have tons of it!</p>
<p>Today I wanted to enable Compiz again and it just wouldn&rsquo;t start.  After
a couple of tries that turned out to be dead ends I finally got this:</p>
<pre><code>/usr/bin/compiz.real (core) - Error: Could not acquire compositing manager selection on screen 0 display &quot;:0.0&quot; 
</code></pre>
<p>Some more digging around Google gave me the answer: Metacity and Compiz
fight to be &ldquo;compositing manager&rdquo; &hellip;</p>
<p>&hellip; as soon as I disabled <code>/apps/metacity/general/compositing_manager</code> I
could enable Compiz again!</p>
]]></content>
        </item>
        
        <item>
            <title>Missing Sound in Firefox?</title>
            <link>/2008/07/14/missing-sound-in-firefox/</link>
            <pubDate>Mon, 14 Jul 2008 10:30:48 +0000</pubDate>
            
            <guid>/2008/07/14/missing-sound-in-firefox/</guid>
            <description>In Ubuntu 8.04 I recently discovered that you need to install the libflashsupport package if you get no sound in Firefox while running flash application/video. Oddly enough this is not a &amp;ldquo;required&amp;rdquo; or &amp;ldquo;supported&amp;rdquo; package in Ubuntu proper.</description>
            <content type="html"><![CDATA[<p>In Ubuntu 8.04 I recently discovered that you need to install the
<a href="apt://libflashsupport">libflashsupport</a> package if you get no sound in
Firefox while running flash application/video.  Oddly enough this is not
a &ldquo;required&rdquo; or &ldquo;supported&rdquo; package in Ubuntu proper.</p>
]]></content>
        </item>
        
        <item>
            <title>Regexp replace in many files</title>
            <link>/2008/07/13/regexp-replace-in-many-files/</link>
            <pubDate>Sun, 13 Jul 2008 21:38:33 +0000</pubDate>
            
            <guid>/2008/07/13/regexp-replace-in-many-files/</guid>
            <description>I just have to blog about this exceptional tool I just found. It is called regexxer and is a tool in the true UNIX spirit — it does one job only, and does it well.</description>
            <content type="html"><![CDATA[<p>I just have to blog about this exceptional tool I just found.  It is
called <a href="apt://regexxer">regexxer</a> and is a tool in the true UNIX spirit
— it does one job only, and does it well.</p>
]]></content>
        </item>
        
        <item>
            <title>Minix editline v0.2.1</title>
            <link>/2008/06/09/minix-editline-v0-dot-2-1/</link>
            <pubDate>Mon, 09 Jun 2008 23:02:22 +0000</pubDate>
            
            <guid>/2008/06/09/minix-editline-v0-dot-2-1/</guid>
            <description>The v0.2.0 release included some Debian patches, tcgetattr() and a batch mode (when reading from file) line reader. This release fixes a bug in the Debian patch that caused the batch mode version of readline() to actually truncate lines longer than 64 chars.
Get it from the usual FTP location:
 http://ftp.vmlinux.org/pub/People/jocke/minix-editline/  </description>
            <content type="html"><![CDATA[<p>The v0.2.0 release included some Debian patches, <code>tcgetattr()</code> and a
batch mode (when reading from file) line reader.  This release fixes a
bug in the Debian patch that caused the batch mode version of
<code>readline()</code> to actually truncate lines longer than 64 chars.</p>
<p>Get it from the usual FTP location:</p>
<ul>
<li><a href="http://ftp.vmlinux.org/pub/People/jocke/minix-editline/">http://ftp.vmlinux.org/pub/People/jocke/minix-editline/</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Minix editline v0.1.4</title>
            <link>/2008/06/09/minix-editline-v0-dot-1-4/</link>
            <pubDate>Mon, 09 Jun 2008 00:49:22 +0000</pubDate>
            
            <guid>/2008/06/09/minix-editline-v0-dot-1-4/</guid>
            <description>Another day another release, I guess. :-)
Lots of small fixes — it can now be cross-built for Arm (Xscale) without any serious warnings. Get it from the usual FTP location:
 http://ftp.vmlinux.org/pub/People/jocke/minix-editline/  </description>
            <content type="html"><![CDATA[<p>Another day another release, I guess. :-)</p>
<p>Lots of small fixes — it can now be cross-built for Arm (Xscale)
without any serious warnings.  Get it from the usual FTP location:</p>
<ul>
<li><a href="http://ftp.vmlinux.org/pub/People/jocke/minix-editline/">http://ftp.vmlinux.org/pub/People/jocke/minix-editline/</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Minix editline v0.1.1</title>
            <link>/2008/06/08/minix-editline-v0-dot-1-1/</link>
            <pubDate>Sun, 08 Jun 2008 00:56:22 +0000</pubDate>
            
            <guid>/2008/06/08/minix-editline-v0-dot-1-1/</guid>
            <description>Hot on the heels of the first one, only minor build fixes but this one should actually be usable by others. Now installs both library, include file and man page into the given --prefix.
 http://ftp.vmlinux.org/pub/People/jocke/minix-editline/  </description>
            <content type="html"><![CDATA[<p>Hot on the heels of the first one, only minor build fixes but this one
should actually be usable by others.  Now installs both library, include
file and man page into the given <code>--prefix</code>.</p>
<ul>
<li><a href="http://ftp.vmlinux.org/pub/People/jocke/minix-editline/">http://ftp.vmlinux.org/pub/People/jocke/minix-editline/</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Minix editline v0.1.0</title>
            <link>/2008/06/07/minix-editline-v0-dot-1-0/</link>
            <pubDate>Sat, 07 Jun 2008 21:45:05 +0000</pubDate>
            
            <guid>/2008/06/07/minix-editline-v0-dot-1-0/</guid>
            <description>I&amp;rsquo;ve been looking long and hard for a small and useful GNU readline replacement. Oddly enough, all the time I was looking for one I never even once considered looking at the Minix sources!
Currently I&amp;rsquo;m using the NetBSD editline derivative (readline compatible) from Jess Thrysoee, but it requires ncurses, which is huge!
All I really wanted was a bare bones readline() suitable for small embedded systems. One which could record history and preferably, but not required to, support completion.</description>
            <content type="html"><![CDATA[<p>I&rsquo;ve been looking long and hard for a small and useful <a href="http://www.gnu.org/software/readline/">GNU readline</a>
replacement.  Oddly enough, all the time I was looking for one I never
even once considered looking at the <a href="http://www.minix3.org/">Minix</a> sources!</p>
<p>Currently I&rsquo;m using the NetBSD <a href="http://thrysoee.dk/editline/">editline derivative</a> (readline
compatible) from <a href="http://thrysoee.dk/">Jess Thrysoee</a>, but it requires ncurses, which is
huge!</p>
<p>All I really wanted was a bare bones <code>readline()</code> suitable for small
embedded systems.  One which could record history and preferably, but
not required to, support completion.</p>
<p>OK, so yesterday I found the Minix editline implementation, written
years ago by Simmule Turner and Rich Salz. My hat is off to you guys,
you rock!</p>
<p>Here&rsquo;s my first packaged version for Linux:</p>
<ul>
<li><a href="http://ftp.vmlinux.org/pub/People/jocke/minix-editline/">http://ftp.vmlinux.org/pub/People/jocke/minix-editline/</a></li>
</ul>
<p>All I have done, so far, is to move around the files a bit and add the
standard <a href="http://mij.oltrelinux.com/devel/autoconf-automake/">GNU configure and build system</a>.  It now builds and runs
perfectly on my laptop, next step is to cross-build it for a couple of
embedded ARM targets.</p>
<p>I do all development using <a href="http://www.bazaar-vcs.org/">GNU Bazaar</a>. If you want to join in, then
branch from the following public URL:</p>
<pre><code> bzr branch http://vmlinux.org/jocke/bzr/minix-editline 
</code></pre>
<p>Patches and ideas are welcome!</p>
]]></content>
        </item>
        
        <item>
            <title>Enterprise Emacs</title>
            <link>/2008/02/24/enterprise-emacs/</link>
            <pubDate>Sun, 24 Feb 2008 10:59:19 +0000</pubDate>
            
            <guid>/2008/02/24/enterprise-emacs/</guid>
            <description>&lt;p&gt;Many years ago I discovered the beauty in a beast called &lt;a href=&#34;http://www.gnu.org/software/emacs/&#34;&gt;Emacs&lt;/a&gt;.  I
am actually a frequent user of both Emacs and &lt;a href=&#34;http://www.vim.org&#34;&gt;Vim&lt;/a&gt;, but I firmly
belive in the notion of &lt;a href=&#34;http://pragmaticprogrammer.com/the-pragmatic-programmer/extracts/tips&#34;&gt;learning one editor well&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;The editor should be an extension of your hand; make sure your editor
is configurable, extensible, and programmable.&amp;rdquo; — &lt;a href=&#34;http://pragmaticprogrammer.com/the-pragmatic-programmer/extracts/tips&#34;&gt;The Pragmatic Programmer&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At the many jobs I have had, colleagues often glanced over my shoulder
and said; &amp;ldquo;Oh, Emacs &amp;hellip; Yeah I used that ages ago when I was
working on UNIX &amp;hellip;&amp;quot;, often they remember it fondly, sometimes for
all the quirky keyboard shortcuts.  Very few know that it is still being
actively developed.&lt;/p&gt;
&lt;p&gt;Emacs can be quite counter intuitive and sometimes even an outright pain
to use.  I find it a shame that still today, after (literally) decades
there are no sane defaults.  Once, when I was still forced to use
Windows, I saw a setup wizard in &lt;a href=&#34;http://ntemacs.sourceforge.net/&#34;&gt;Win32-Emacs&lt;/a&gt; that resembled what I
would like to have — a sort of use cases possible to chose from.  It may
have been some extension that was maintained in some non-official
version, because now when I look for it I cannot find it.  But why not
have a setup wizard in the upstream distribution of Emacs as well?&lt;/p&gt;
&lt;p&gt;Well, this is my gripe, the pieces of Emacs that are still unfriendly to
users, and mostly new users, coming from Windows or MAC.  I will use
this blog to present ideas and small things I have done to make Emacs
more user friendly.  I call this &lt;em&gt;Enterprise Emacs&lt;/em&gt;.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Many years ago I discovered the beauty in a beast called <a href="http://www.gnu.org/software/emacs/">Emacs</a>.  I
am actually a frequent user of both Emacs and <a href="http://www.vim.org">Vim</a>, but I firmly
belive in the notion of <a href="http://pragmaticprogrammer.com/the-pragmatic-programmer/extracts/tips">learning one editor well</a>:</p>
<blockquote>
<p>&ldquo;The editor should be an extension of your hand; make sure your editor
is configurable, extensible, and programmable.&rdquo; — <a href="http://pragmaticprogrammer.com/the-pragmatic-programmer/extracts/tips">The Pragmatic Programmer</a></p>
</blockquote>
<p>At the many jobs I have had, colleagues often glanced over my shoulder
and said; &ldquo;Oh, Emacs &hellip; Yeah I used that ages ago when I was
working on UNIX &hellip;&quot;, often they remember it fondly, sometimes for
all the quirky keyboard shortcuts.  Very few know that it is still being
actively developed.</p>
<p>Emacs can be quite counter intuitive and sometimes even an outright pain
to use.  I find it a shame that still today, after (literally) decades
there are no sane defaults.  Once, when I was still forced to use
Windows, I saw a setup wizard in <a href="http://ntemacs.sourceforge.net/">Win32-Emacs</a> that resembled what I
would like to have — a sort of use cases possible to chose from.  It may
have been some extension that was maintained in some non-official
version, because now when I look for it I cannot find it.  But why not
have a setup wizard in the upstream distribution of Emacs as well?</p>
<p>Well, this is my gripe, the pieces of Emacs that are still unfriendly to
users, and mostly new users, coming from Windows or MAC.  I will use
this blog to present ideas and small things I have done to make Emacs
more user friendly.  I call this <em>Enterprise Emacs</em>.</p>
<p>Many of the following, really obvious, settings are today available in a
menu called &ldquo;Options&rdquo;, some are still buried deep within the scriptable
innards and go by unfamiliar names.</p>
<pre><code>;; Enterprise Emacs -- save this as your ~/.emacs
; Scrollbar on the *right*, or none (use 'nil for none)
(set-scroll-bar-mode 'right)

; A visible marked region
(transient-mark-mode t)

; Marking text with shift + arrow keys
(pc-selection-mode t)
(delete-selection-mode t)

; Syntax highlighting
(global-font-lock-mode t)

; A cursor that blinks so I can find it
(blink-cursor-mode t)

; A status line displaying both line *and column* of my cursor
(column-number-mode t)

; Continue at the file and position where I left off when I closed Emacs
(desktop-save-mode t)
</code></pre>
<p>In the coming months I will present some useful tips from my bag of
tricks.  Including, but not limited to:</p>
<ul>
<li>Auto-adjust as you type</li>
<li>Auto-spell as you type, text and code</li>
<li>Auto-complete words and function/method names</li>
<li>A solution to: &ldquo;Where the h-ll is that function?&rdquo;</li>
<li>Debugging from inside Emacs, like an IDE!</li>
<li>Windows-like marking, with Ctrl-x, Ctrl-v and Ctrl-v</li>
</ul>
<p>Plus the usual Emacs features that users of Microsoft products may not
have ever known.  To mention a few: complete indentation engine, with
several predefined indentation modes.  Built-in calculator (converts
between bases!)</p>
<p>The first tip is Emacs-23 with (grab on to something!)  anti-aliasing of
fonts!  Yes, it&rsquo;s still an experimental feature, and if you did not
already know this, &ldquo;experimental&rdquo; in free/open source is often quite
stable.  I have used it daily for &gt;6 months and it has crashed on me
only once.</p>
<ul>
<li><a href="http://peadrop.com/blog/2007/01/06/pretty-emacs/">Ubuntu</a></li>
<li><a href="http://emacs.orebokech.com/">Debian</a></li>
</ul>
<p>Start off by installing it and discover the Options menu.  Then return to
this blog and I will have the next installment ready.</p>]]></content>
        </item>
        
        <item>
            <title>Suspend/Resume Nightmare in Ubuntu</title>
            <link>/2008/02/23/suspend-slash-resume-nightmare-in-ubuntu/</link>
            <pubDate>Sat, 23 Feb 2008 21:34:44 +0000</pubDate>
            
            <guid>/2008/02/23/suspend-slash-resume-nightmare-in-ubuntu/</guid>
            <description>I&amp;rsquo;ve had my ThinkPad T43 for a while now and I&amp;rsquo;m really pleased with it, everything just works! It took some pleading and, I admit, begging to persuade my boss and the IT department to buy it since they usually only buy from Dell or HP. This was mainly due to care packs and payment plans that these suppliers offer companies. My ThinkPad they had to actually pay for straight up.</description>
            <content type="html"><![CDATA[<p>I&rsquo;ve had my ThinkPad T43 for a while now and I&rsquo;m really pleased with it,
everything just works!  It took some pleading and, I admit, begging to
persuade my boss and the IT department to buy it since they usually only
buy from Dell or HP.  This was mainly due to care packs and payment plans
that these suppliers offer companies.  My ThinkPad they had to actually
pay for straight up.  So if I were a Lenovo sales person, that was
something I would fix to boost my sales.</p>
<p>This post is however not about sales, brands of laptops or how the cat
ate my homework &hellip; well, OK, almost.  Ubuntu/Gnome ate my resume!</p>
<p>When I initially installed the laptop, early 2006, I went with
Ubuntu 5.10.  Ubuntu is great Linux dist!  Ubuntu is to Debian what
Mandrake was to RedHat in the beginning: RedHat + all the tweaks you
usually had to apply.</p>
<p>I remember the first install, it was a Breeze!  All features and extras
of the laptop was of course not working.  After some digging I found a
few pages detailing what to do to get things like susped, hibernate and
such working.  A couple of hours later everything was working!  Cool,
that had to be the first computer where I actually bothered setting it
all up.</p>
<p>Now, two years later I run 7.10 and I am less than happy.  All upgrades
have made this laptop a complete mess.  Each upgrade has failed to
integrate the necessary changes I made and simply installed the new
default settings from each package.  OK, I can live with that.  But I was
starting to really miss having no suspend, so the last four months I
have been working on fixing it all again.</p>
<p>It turns out that if I run the script <code>/etc/acpi/suspend.sh</code> manually
from the prompt suspend and resume works fine, even with X.  But when I
press Fn-F4 from within X or select &ldquo;Suspend&rdquo; from the Gnome &ldquo;logout&rdquo;
menu the machine happily goes to sleep but always fails at resume.  I
always get a black screen!</p>
<p>Why is it so complicated?  I really don&rsquo;t understand.  What is it doing?</p>
<p>OK, so I started digging.  The Fn-F4 button didn&rsquo;t work in the console
so that seemed like a first thing to investigate.  I started
<code>acpi_listen</code> and pressed Fn-F4, bingo!  It returned a key press.  A
grep later and I had found it in <code>/etc/acpi/events/ibm-sleepbtn</code>,
alright!  Simple syntax, seems it looks for the ThinkPad sleep button
and then sends another new combination <code>$KEY_SLEEP</code>, wtf?</p>
<p>I changed the action to call <code>/etc/acpi/sleep.sh</code>, restarted the ACPI
stuff and, yes it works!  At least from the console, not from X/Gnome.
Aha, so we have a Gnome app that does magic things, HAL +
gnome-power-manager.</p>
<p>I didn&rsquo;t get any further.  Removing gnome-power-manager fixed my
problem, I can now press Fn-F4 from Gnome, close the lid, come back the
next morning and sucessfully resume when opening the lid again.</p>
<p>So, the question is, wtf is gnome-power-manager doing and why do I have
to learn this stuff all over again every time I upgrade?</p>
]]></content>
        </item>
        
        <item>
            <title>Bzrweb 0.1.2 Released</title>
            <link>/2007/07/31/bzrweb-0-dot-1-2-released/</link>
            <pubDate>Tue, 31 Jul 2007 23:33:01 +0000</pubDate>
            
            <guid>/2007/07/31/bzrweb-0-dot-1-2-released/</guid>
            <description>The end of my own &amp;ldquo;summer of code&amp;rdquo; is here. Seriously, this summer I took it upon myself to clean up my act and move whole heartedly to the Bazaar version control system for my private projects. Needless to say, I didn&amp;rsquo;t get far.
Being quite lazy I haven&amp;rsquo;t upgraded this server yet to the latest shiny Debian 4.0. This made it a bit hard to setup the new shiny Loggerhead web gui (see it in action here) for Bazaar — so instead I started fixing up the old bzrweb that I already had setup a few years ago.</description>
            <content type="html"><![CDATA[<p>The end of my own &ldquo;summer of code&rdquo; is here.  Seriously, this summer I
took it upon myself to clean up my act and move whole heartedly to the
<a href="http://www.bazaar-vcs.org/">Bazaar</a> version control system for <a href="https://web.archive.org/web/20090601005547/http://vmlinux.org/jocke/bzr/">my private projects</a>.
Needless to say, I didn&rsquo;t get far.</p>
<p>Being quite lazy I haven&rsquo;t upgraded this server yet to the latest shiny
Debian 4.0.  This made it a bit hard to setup the new shiny
<a href="https://web.archive.org/web/20090601005547/http://www.lag.net/loggerhead/">Loggerhead web gui</a> (see it in action <a href="https://web.archive.org/web/20090601005547/http://codebrowse.launchpad.net/~mwhudson/loggerhead/production/changes">here</a>) for Bazaar —
so instead I started fixing up the <a href="https://web.archive.org/web/20090601005547/http://mccormick.cx/dev/bzrweb/">old bzrweb</a> that I already had
setup a few years ago.</p>
<p>I&rsquo;m new to Python, but, as I said, I&rsquo;m quite lazy and Python seemed to
suit me perfectly.  Whipping up Bzrweb to support the bzr 0.15 I had on
my laptop (Ubuntu 7.04) was just enough to fiddle with in the warm
summer evenings of my vacation.  Now I find myself really enjoying
Python. :-)</p>
<p>So I decided to try and take up maintainership of Bzrweb.  I like it for
its simplicity and small list of dependencies (only Python 2.4).  Which
is something I will honor and continue to evolve.</p>
<p>Oh well, <a href="ftp://vmlinux.org/pub/bzrweb/">here it is</a>:</p>
<ul>
<li><a href="ftp://vmlinux.org/pub/bzrweb/bzrweb-0.1.2.tar.gz">bzrweb-0.1.2.tar.gz</a> (<a href="ftp://vmlinux.org/pub/bzrweb/bzrweb-0.1.2.tar.gz.md5sum">md5sum</a>)</li>
<li>Release Notes: <a href="ftp://vmlinux.org/pub/bzrweb/ReleaseNotes-0.1.2.txt">[TXT]</a> <a href="ftp://vmlinux.org/pub/bzrweb/ReleaseNotes-0.1.2.pdf">[PDF]</a></li>
</ul>
<p>No GPG signing yet, I&rsquo;ve yet to figure out how GPG works, again.</p>
<p>Bug reports can be sent to me directly, see my address in the tarball or
<a href="https://web.archive.org/web/20090601005547/http://vmlinux.org/jocke/bzr/">online</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Netapplet Patchwork</title>
            <link>/2007/07/12/netapplet-patchwork/</link>
            <pubDate>Thu, 12 Jul 2007 11:37:38 +0000</pubDate>
            
            <guid>/2007/07/12/netapplet-patchwork/</guid>
            <description>I think I&amp;rsquo;ve finally done it — achieved my ultimate goal of combining the awesome powers of the Debian /etc/network/interfaces file with guessnet, wpa_supplicant, ifplugd and now also with netapplet!
I&amp;rsquo;ve been looking for a way to just point-and-click to select a different access point, both at home and at work. To that end I have a pretty advanced interfaces file that automatically detects where I am, what I am connected with (cable/wireless) and then, like magic, sets it all up.</description>
            <content type="html"><![CDATA[<p>I think I&rsquo;ve finally done it — achieved my ultimate goal of
combining the awesome powers of the Debian <code>/etc/network/interfaces</code>
file with <code>guessnet</code>, <code>wpa_supplicant</code>, <code>ifplugd</code> and now also with
netapplet!</p>
<p>I&rsquo;ve been looking for a way to just point-and-click to select a
different access point, both at home and at work.  To that end I have a
pretty advanced interfaces file that automatically detects where I am,
what I am connected with (cable/wireless) and then, like magic, sets it
all up.</p>
<p>Several times now I have tried, really hard, to get used to and live my
life with <a href="http://www.gnome.org/projects/NetworkManager/">Network Manager</a>, but it&rsquo;s just plain impossible.  It
still doesn&rsquo;t integrate well with Debian ifupdown et consortes and until
now I&rsquo;ve been using <code>ifup</code> to select different wireless mappings:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">$ sudo ifdown eth2; sudo ifup eth2=WLAN
Password: ***********
[Use crappy work AP to access VPN tunnel]
$ sudo ifdown eth2; sudo ifup eth2=NETLET
Password: ***********
[Use family WRT54GL access point]
</code></pre></div><p>For the last couple of days I&rsquo;ve been looking into getting the old
(obsoleted?) Netapplet from Novell.  Since I&rsquo;m a Ubuntu user I&rsquo;m using
the Debian patched-up version by <a href="http://mjg59.livejournal.com/">Matthew Garrett</a> (thanks!).  I
remember using it a couple of years back, at that time I think it worked
but now it didn&rsquo;t — not well at least.  I found several bugs and
quirks that I have now fixed and published in my own &ldquo;repository&rdquo;.</p>
<p>I have published everything as a Bazaar branch, one changeset per patch
(small patches), at <a href="https://web.archive.org/web/20090528101921/http://vmlinux.org/jocke/bzr/netapplet-1.0.8/">http://vmlinux.org/jocke/bzr/netapplet-1.0.8</a>,
which can be viewed <a href="https://web.archive.org/web/20090528101921/http://vmlinux.org/jocke/bzr/">here</a> using bzrweb.</p>
]]></content>
        </item>
        
        <item>
            <title>Making bzrweb work again</title>
            <link>/2007/07/11/making-bzrweb-work-again/</link>
            <pubDate>Wed, 11 Jul 2007 10:35:00 +0000</pubDate>
            
            <guid>/2007/07/11/making-bzrweb-work-again/</guid>
            <description>During the past weekend and the last couple of evenings I&amp;rsquo;ve been studying the Python code in bzrweb — which I&amp;rsquo;ve been using for online repository browsing. It broke sometime last year due to not keeping up with the development of bzr. Yesterday I got it working again!
 Browse: http://vmlinux.org/jocke/bzr/ Branch: bzr branch http://vmlinux.org/jocke/bzr/bzrweb  Having only programmed Python very little earlier I must say that it&amp;rsquo;s really easy to get in to.</description>
            <content type="html"><![CDATA[<p>During the past weekend and the last couple of evenings I&rsquo;ve been
studying the Python code in bzrweb — which I&rsquo;ve been using for
online repository browsing.  It broke sometime last year due to not
keeping up with the development of bzr.  Yesterday I got it working
again!</p>
<ul>
<li>Browse: <a href="https://web.archive.org/web/20090601005547/http://vmlinux.org/jocke/bzr/">http://vmlinux.org/jocke/bzr/</a></li>
<li>Branch: <code>bzr branch http://vmlinux.org/jocke/bzr/bzrweb</code></li>
</ul>
<p>Having only programmed Python very little earlier I must say that it&rsquo;s
really easy to get in to.  I usually hack scripts in sh or Perl, but
Python is really something that could be used for real programs.</p>
<p>I plan on doing some more bzrweb hacking later.  I&rsquo;m not sure yet what
it&rsquo;ll be, but I guess a file-view would be useful, plus some minor CSS
cleanup.</p>
]]></content>
        </item>
        
        <item>
            <title>Buggy Gnome Main Menu</title>
            <link>/2007/07/07/buggy-gnome-main-menu/</link>
            <pubDate>Sat, 07 Jul 2007 09:52:17 +0000</pubDate>
            
            <guid>/2007/07/07/buggy-gnome-main-menu/</guid>
            <description>I&amp;rsquo;ve been living with the new Gnome Main Menu for a while now. Like many others I run Ubuntu these days and I&amp;rsquo;ve found the version in Feisty Fawn to be extremely slow and buggy.
I tried manually installing (dpkg -i) the latest version in Gutsy, but it had too many dependencies. So I decided to try and backport it, and it worked!
I haven&amp;rsquo;t set up any repository, so just download the below two .</description>
            <content type="html"><![CDATA[<p>I&rsquo;ve been living with the new Gnome Main Menu for a while now.  Like many
others I run Ubuntu these days and I&rsquo;ve found the version in Feisty Fawn
to be extremely slow and buggy.</p>
<p>I tried manually installing (<code>dpkg -i</code>) the latest version in Gutsy, but
it had too many dependencies.  So I decided to try and backport it, and
it worked!</p>
<p>I haven&rsquo;t set up any repository, so just download the below two <code>.deb</code>
files and install them with <code>sudo dpkg -i *.deb</code> in a terminal window:</p>
<ul>
<li><a href="http://vmlinux.org/jocke/debian/libslab0_0.9.8.svn.20070430-1ubuntu1_i386.deb">libslab-0.9.8.deb</a></li>
<li><a href="http://vmlinux.org/jocke/debian/gnome-main-menu_0.9.8.svn.20070430-1ubuntu1_i386.deb">gnome-main-menu-0.9.8.deb</a></li>
</ul>
<p>The <code>md5sums</code> for these files are:</p>
<pre><code>3f0a962ffdd2974663f2f425eed5f541   libslab0_0.9.8.svn.20070430-1ubuntu1_i386.deb
1d11fcace33bab707e28c230c85ea1ba   gnome-main-menu_0.9.8.svn.20070430-1ubuntu1_i386.deb
</code></pre>
]]></content>
        </item>
        
        <item>
            <title>VMWare Kernel Modules for Your New Kernel</title>
            <link>/2007/03/25/vmware-kernel-modules-for-your-new-kernel/</link>
            <pubDate>Sun, 25 Mar 2007 23:59:57 +0000</pubDate>
            
            <guid>/2007/03/25/vmware-kernel-modules-for-your-new-kernel/</guid>
            <description>My recent post on building Debian kernels misses a subtle but useful point. Namely that of building Debian kernel modules alongside your new kernel. I wanted to run a new kernel with the Ubuntu vmware-player-kernel-source package. I was fumbling around wanting to use module-assistant to do this for me when I stumbled upon on the solution, presented so eloquently by my friend Albert Veli. This gives us a small update to the previous post:</description>
            <content type="html"><![CDATA[<p>My recent post on building Debian kernels misses a subtle but useful
point.  Namely that of building Debian kernel modules alongside your new
kernel.  I wanted to run a new kernel with the Ubuntu
vmware-player-kernel-source package.  I was fumbling around wanting to
use <code>module-assistant</code> to do this for me when I stumbled upon on the
solution, <a href="http://ubuntuforums.org/showthread.php?p=1266060#post1266060">presented so eloquently by my friend Albert Veli</a>.  This
gives us a small update to the previous post:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">$ wget ftp://ftp.sunet.se/pub/Linux/kernels/v2.6/patch-2.6.20.4.bz2
$ cd linux-2.6.20/
$ bzcat ../patch-2.6.20.4.bz2 | patch -p1
$ cd ../
$ mv linux-2.6.20 linux-2.6.20.4
$ cd linux-2.6.20.4
$ make oldconfig
$ fakeroot make-kpkg clean
$ fakeroot make-kpkg --initrd kernel_image
$ sudo dpkg -i ../linux-image-2.6.20.4_2.6.20.4-7.troglobit_i386.deb
</code></pre></div><p>Next up is installing and building the vmware-player-kernel-source:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">$ sudo apt-get install vmware-player-kernel-source
$ cd /usr/src
$ sudo tar xvfj vmware-player-kernel-source.tar.bz2
$ cd -
$ cd linux-2.6.20.4
$ fakeroot make-kpkg modules_clean
$ fakeroot make-kpkg modules_image
$ sudo dpkg -i  ../vmware-player-kernel-modules-2.6.20.4_2.6.20.4-7.troglobit_i386.deb
</code></pre></div><p>You may, of course, need to tweak the file <code>/etc/kernel-pkg.conf</code>, but
there are man pages for that.</p>
]]></content>
        </item>
        
        <item>
            <title>HowTo: Building Debian/Ubuntu Kernels</title>
            <link>/2007/02/03/building-debian-slash-ubuntu-kernels/</link>
            <pubDate>Sat, 03 Feb 2007 11:00:45 +0000</pubDate>
            
            <guid>/2007/02/03/building-debian-slash-ubuntu-kernels/</guid>
            <description>I have been over this topic so many times now, strangely enough I&amp;rsquo;ve managed to make things more complicated than they need to be. It&amp;rsquo;s really this simple:
$ wget ftp://ftp.sunet.se/pub/Linux/kernels/v2.6/linux-2.6.19.2.tar.bz2 $ tar xfj linux-2.6.19.2.tar.bz2 $ cd linux-2.6.19.2/ $ zcat /proc/config.gz &amp;gt;.config $ make menuconfig [Tweak to your hearts desire] $ fakeroot make-kpkg --initrd kernel_image $ dpkg -i ../linux-image-2.6.19.2_2.6.19.2-10.00.Custom_i386.deb [DONE!] You may, of course, need to tweak the file /etc/kernel-pkg.conf, but there are man pages for that.</description>
            <content type="html"><![CDATA[<p>I have been over this topic so many times now, strangely enough I&rsquo;ve
managed to make things more complicated than they need to be.  It&rsquo;s
really this simple:</p>
<div class="highlight"><pre class="chroma"><code class="language-fallback" data-lang="fallback">$ wget ftp://ftp.sunet.se/pub/Linux/kernels/v2.6/linux-2.6.19.2.tar.bz2
$ tar xfj linux-2.6.19.2.tar.bz2
$ cd linux-2.6.19.2/
$ zcat /proc/config.gz &gt;.config
$ make menuconfig
[Tweak to your hearts desire]
$ fakeroot make-kpkg --initrd kernel_image
$ dpkg -i ../linux-image-2.6.19.2_2.6.19.2-10.00.Custom_i386.deb
[DONE!]
</code></pre></div><p>You may, of course, need to tweak the file <code>/etc/kernel-pkg.conf</code>, but
there are man pages for that.</p>
]]></content>
        </item>
        
        <item>
            <title>Moved</title>
            <link>/2007/02/03/moved/</link>
            <pubDate>Sat, 03 Feb 2007 10:52:15 +0000</pubDate>
            
            <guid>/2007/02/03/moved/</guid>
            <description>Yep, we finally did it, we bought ourselves a house. Last year in October we moved from our small three-room flat in central Västerås to the new house in Skultuna. Everything went really fast from finding it up for sale, deciding on it down to getting a loan and moving in. Worst part of it all was getting a decent broadband connection. We actually moved from a 100 Mbps dedicated copper line to a 24/2 Mbps ADSL line.</description>
            <content type="html"><![CDATA[<p>Yep, we finally did it, we bought ourselves a house.  Last year in
October we moved from our small three-room flat in central Västerås to
the new house in Skultuna.  Everything went really fast from finding it
up for sale, deciding on it down to getting a loan and moving in.  Worst
part of it all was getting a decent broadband connection.  We actually
moved from a 100 Mbps dedicated copper line to a 24/2 Mbps ADSL line.
It sucks big time.  Oh well &hellip;</p>
]]></content>
        </item>
        
        <item>
            <title>Top Ten UNIX Shell Commands</title>
            <link>/2006/09/23/top-ten-unix-shell-commands/</link>
            <pubDate>Sat, 23 Sep 2006 23:02:42 +0000</pubDate>
            
            <guid>/2006/09/23/top-ten-unix-shell-commands/</guid>
            <description>Current trend is to run the following one-liner from IBM. I&amp;rsquo;m usually logged in to the following three systems, with very different results.
vmlinux.org $ history |awk &#39;{print $2}&#39;|sort|uniq -c|sort -nr|head -10 144 ls 61 cd 58 sudo 29 less 23 emacs 19 bzr 16 vim 11 rm 10 wget 10 mv  My personal life. Not much different from my professional dito. Most visible difference maybe is my use of bzr instead of svn.</description>
            <content type="html"><![CDATA[<p>Current trend is to run the following
<a href="http://www-128.ibm.com/developerworks/aix/library/au-productivitytips.html?ca=dgr-lnxw07UNIX-Office-Tips">one-liner from IBM</a>.
I&rsquo;m usually logged in to the following three systems, with very
different results.</p>
<h2 id="vmlinuxorg">vmlinux.org</h2>
<pre><code>$ history |awk '{print $2}'|sort|uniq -c|sort -nr|head -10
144 ls
 61 cd
 58 sudo
 29 less
 23 emacs
 19 bzr
 16 vim
 11 rm
 10 wget
 10 mv
</code></pre>
<p>My personal life.  Not much different from my professional dito.  Most
visible difference maybe is my use of bzr instead of svn.  At the time
we decided on svn at work bzr had not matured enough and darcs didn&rsquo;t
(still doesn&rsquo;t) have a Windows client as good as TortoiseSVN.</p>
<h2 id="build-server-work">Build server @work</h2>
<pre><code>$ history |awk '{print $2}'|sort|uniq -c|sort -nr|head -10
108 cd
 63 svn
 44 search
 41 ls
 25 sudo
 23 less
 23 ./build.sh
 21 make
 17 ./netprobe
 16 man
</code></pre>
<p>Mostly work stuff,
<a href="https://github.com/troglobit/toolbox/blob/master/search">&lsquo;search&rsquo;</a> is a
small wrapper around find that skips .svn dirs and semantic.cache files
and other annoying things you constantly run in to when looking for
something.  The build script is a small wrapper around make for our
Snapgear and uClinux-dist trees. Netprobe was one of the last prototypes
I wrote to investigate some UNIX peculiarities involving libnet and
libpcap.</p>
<h2 id="troglobit-my-laptop">troglobit (my laptop)</h2>
<pre><code>$ history |awk '{print $2}'|sort|uniq -c|sort -nr|head -10
140 sudo
 47 ifconfig
 45 less
 27 ps
 26 ssh
 25 iwconfig
 21 ping
 21 man
 15 ls
 15 cd
</code></pre>
<p>Well, I&rsquo;m having trouble with my laptop network. The wlan
(wpa_supplicant) doesn&rsquo;t like suspend/resume on my ThinkPad T43.</p>
<p><em>Update:</em> I had to make an update to this, even at first I had my doubts
about the first script. It didn&rsquo;t feel right, now after revising it,
and reading
<a href="https://web.archive.org/web/20090601001529/http://planet.debian.org/">Planet Debian</a>,
I noticed Erich Schuberts entry.  There it was, the working script,
which I only had to bashify!  Thanks Erich!</p>
]]></content>
        </item>
        
        <item>
            <title>Aaaah, the fish got a facelift! :)</title>
            <link>/2006/08/13/aaaah/</link>
            <pubDate>Sun, 13 Aug 2006 10:43:13 +0000</pubDate>
            
            <guid>/2006/08/13/aaaah/</guid>
            <description>This is just great! Wanda the fortune telling fish of the Gnome desktop got herself a face lift. Take a look at this:
Add her new look to your applet by copying the file to /usr/share/gnome/panel/pixmaps/. Select it in the applet preferences and use 8 frames and 0.3 seconds per frame.</description>
            <content type="html"><![CDATA[<p>This is just great!  Wanda the fortune telling fish of the Gnome desktop
got herself a face lift.  Take a look at this:</p>
<img class="center" src="/images/newwanda.png">
<p>Add her new look to your applet by copying the file to
<code>/usr/share/gnome/panel/pixmaps/</code>.  Select it in the applet preferences
and use 8 frames and 0.3 seconds per frame.</p>
]]></content>
        </item>
        
        <item>
            <title>Test posting using blosxom</title>
            <link>/2006/08/05/test-posting-using-blosxom/</link>
            <pubDate>Sat, 05 Aug 2006 22:35:49 +0000</pubDate>
            
            <guid>/2006/08/05/test-posting-using-blosxom/</guid>
            <description>First try to consolidate on using an already working implementation of a blog script rather than writing my own. I&amp;rsquo;m trying out Blosxom, which is somewhat overkill for my needs. I actually wrote up a simple Perl script a couple of weeks ago that did what I wanted, oh well, what remains now is to do some Emacs hacks to smooth things over a bit.</description>
            <content type="html"><![CDATA[<p>First try to consolidate on using an already working implementation of a
blog script rather than writing my own.  I&rsquo;m trying out Blosxom, which
is somewhat overkill for my needs.  I actually wrote up a simple Perl
script a couple of weeks ago that did what I wanted, oh well, what
remains now is to do some Emacs hacks to smooth things over a bit.</p>
]]></content>
        </item>
        
        <item>
            <title>Besiktning</title>
            <link>/2006/07/24/besiktning/</link>
            <pubDate>Mon, 24 Jul 2006 22:10:27 +0000</pubDate>
            
            <guid>/2006/07/24/besiktning/</guid>
            <description>Yes, bilen gick igenom besiktningen!</description>
            <content type="html"><![CDATA[<p>Yes, bilen gick igenom besiktningen!</p>
]]></content>
        </item>
        
        <item>
            <title>Atari ST(E) Emulation with Steem</title>
            <link>/2006/07/23/atari-st-e-emulation-with-steem/</link>
            <pubDate>Sun, 23 Jul 2006 22:10:50 +0000</pubDate>
            
            <guid>/2006/07/23/atari-st-e-emulation-with-steem/</guid>
            <description>This is is really great! Today, on my 32nd birthday I found a really golden piece of software - Steem - even though it&amp;rsquo;s not free software, it has a Linux port which runs almost all of my alltime Atari ST classics: Thrust, Virus, Speedball I &amp;amp; II, Xenon I &amp;amp; II, Great Giana Sisters, The Union Demo, The &amp;ldquo;Oh crikey what a scorcer&amp;rdquo; demo, Nebulus and lots more!
Since today is also my birthday I received a gift.</description>
            <content type="html"><![CDATA[<p>This is is really great!  Today, on my 32nd birthday I found a really
golden piece of software - <a href="http://steem.atari.st/">Steem</a> - even though it&rsquo;s not
<a href="http://fsf.org/">free software</a>, it has a Linux port which runs almost all of my
alltime Atari ST classics: Thrust, Virus, Speedball I &amp; II, Xenon I &amp;
II, Great Giana Sisters, The Union Demo, The &ldquo;Oh crikey what a scorcer&rdquo;
demo, Nebulus and lots more!</p>
<p>Since today is also my birthday I received a gift.  It was my <a href="http://vmlinux.org/ilse">wife</a>
and my <a href="http://vmlinux.org/oona">daughter</a> who had bought a Black &amp; Decker grass trimmer. :-)
My daughter had also selected a fine bunch of red carnations.  Now I can
finally take care of all the weed and long grass at the back of the
house.</p>
]]></content>
        </item>
        
        <item>
            <title>Bromsbyte Passat</title>
            <link>/2006/07/21/bromsbyte-passat/</link>
            <pubDate>Fri, 21 Jul 2006 22:10:48 +0000</pubDate>
            
            <guid>/2006/07/21/bromsbyte-passat/</guid>
            <description>Igår bytte jag bromsskivor på vår gamla Passat Variant -00. Det var definitivt dags efter över 15000 mil så var skivorna och beläggen så slitna att tom. Bilprovningen nog hade klagat i år. Dessutom var det fjärde service:en som VW-verkstaden tyckte det var dags att byta. VW var mer än villiga och gav mig ett anbud på 5500:- vilket jag var väldigt nära att nappa på. Efter en liten reality check så insåg jag dock att vi inte skulle ha råd med det, så jag fick loss delar från Mekonomen för 2400:- och började själv &amp;hellip;</description>
            <content type="html"><![CDATA[<p>Igår bytte jag bromsskivor på vår gamla Passat Variant -00.  Det var
definitivt dags efter över 15000 mil så var skivorna och beläggen så
slitna att tom. Bilprovningen nog hade klagat i år.  Dessutom var det
fjärde service:en som VW-verkstaden tyckte det var dags att byta.  VW
var mer än villiga och gav mig ett anbud på 5500:- vilket jag var
väldigt nära att nappa på.  Efter en liten reality check så insåg jag
dock att vi inte skulle ha råd med det, så jag fick loss delar från
Mekonomen för 2400:- och började själv &hellip;</p>
<p>Som tur är har min käre far ett <a href="https://web.archive.org/web/20090207083722/http://lassesakeri.se/">åkeri</a> och därmed tillgång till en
rätt hyffsad verkstad.  Även om själva verkstan i slutändan inte var det
som avgjorde det hela, så hjälper det att ha lyftar och verktyg till
hands.  Till min hjälp hade jag dessutom, eftersom jag sparat en massa
pengar redan, köpt in en Haynes-manual och ett <a href="https://web.archive.org/web/20090601001422/http://www.biltema.se/products/product.asp?iSecId=506&amp;iItemId=82463">bromskolvverktyg</a>.
Haynes-manualen hade två skiftnycklar av fem i svårighet för att byta
framskivorna och tre för bak, så jag började fram.</p>
<p>Som den nybörjare jag är så tog det mig ett ganska bra tag innan jag
fick upp framvagnen på pallbockar.  Sedan var det faktiskt inte alls så
svårt att demontera bromsoken, bromsoksfästena och skivorna.  Skivorna
satt helt löst och lossnade av sig själva.  Monteringen var heller inte
svår efter att ha skrapat rent de urfasade områdena i oken där beläggen
skall glida.  Det enda jag glömde fram och var tvungen att ta av hjulen
igen för var de där bromsoksfjädrarna.</p>
<p>Beläggen fram på Passaten har förslitningsvarnare.  Jag hade aldrig sett
den lampan lysa förrut, men nu gjorde den det.  Fast innan jag fattade
att det var den lampan så trodde jag det var nån annan del av
bromssystemet och/eller ABS:en, för i instruktionsboken så blandade de
ihop symbolerna fullständigt i symbolbeskrivingen och översiktsbilden av
instrumentpanelen.  Men när jag luskat ut det hela så var det bara att
börja felsöka.  Det visade sig att vänstersidans anslutning från
kontrollboxen var full med drivaxelfett.  En drivaxeldamask hade gått
sönder veckorna innan och fett hade läckt ut lite överallt i det
hjulhuset.  Det var väldigt dåligt med kontakt, men lite fettlösare och
lite juckande med kontakterna löste det hela till slut.  Tyvärr lyckades
jag dock förstöra samma kontakts snäppfäste på högersidan, så jag fick
fixera den med eltejp.  Hoppas det håller till bilprovningen den 24:e!</p>
<p>Dags för bromsarna bak, det var här det började strula.  Min fina
Haynes-manual svamlade om att man skulle kasta bort styrsprintbultarna
efter varje demontering.  På Mekonomen hade de inga såna i lager och på
VW så erkände de efter ett tag att det troligen räckte att göra rent de
gamla och möjligen lägga på lite Loctite™.  Det var nånstans här som jag
var så grumlig i skallen att jag åkte hem till mor och fick mig lite att
äta. Lite piggare, men ändock ganska stel, åkte jag tillbaka till
verkstan och pallade upp bakvagnen.  Efter att ha fått av hjulen och
börjat ta loss bultarna som håller bromsoken så insåg jag hur lätt det
varit med framvagnen, där satt bromskivorna löst, här satt höger bak
helt fast.  Jag började försöka ta bort fästet för bromsoket så länge,
det satt också helt fast.  Jäklar också!  Gick till andra sidan,
demonterade bromsoket och där ramlade bromsskivan rakt ner i famnen på
mig.  Jaha, men jag har ju inte demonterat bromsokfästet ännu.  Jaja,
det behövs väl inte då, kanske kan vi prova samma teknik på högersidan
också?  Sätter mig vid på höger bak igen och börjar banka på skivan,
först med en gummihammare och sedan med en vanlig hammare.  Jag slår
överallt, mest inifrån och ut och nu ganska hårt.  Ingenting händer.</p>
<p>Efter säkert en timmas bankande kommer Micke farande.  Han ska fixa en
av lastbilarna så det går att fälla ned framsteget igen efter en liten
sammanstötning på Essingeleden av en annan förare.  Micke undrar vad jag
hållt på med så länge, med en grimas som svar pekar jag på skivan som
sitter fast.  Till svar får jag: &ldquo;Jamen, det där är ju lätt&rdquo;, han hämtar
bautasläggan Arne och låter den falla, tokhårt, på skivan tre gånger.
Tredje gången lossnar den och faller av, återigen trots att
bromsokfästet sitter kvar.  Ah vad skönt säger jag och börjar göra rent
en ersättningsskiva i T-röd.  Nu ska jag &ldquo;bara&rdquo; pressa tillbaka oket
innan jag monterar ihop alltsammans och kan åka hem.</p>
<p>Att trycka tillbaka bromskolven på oken fram var en baggis, där var det
bara att använda den där bromsoksprylen för 50:- på Biltema.  Bak var
det en annan historia.  Jag trodde ju i min enfald att det bara var att
göra som fram, trots att det såg annorlunda ut bak.  Så jag tryckte och
tryckte ända tills Micke kom in igen.  &ldquo;Aha, du har sånt där ok bak,
jaja då ska du trycka OCH vrida in den.&rdquo; &ndash; &ldquo;Eh, jaha&rdquo;, sa jag och
började fundera över hur det skulle gå till.  Hittade en liten tång som
passade i den nedfasade hålen i kolven och började trycka och vrida
medurs ett par minuter, som snart nog blev en timma.  Jag gav till slut
upp och gick till andra sidan.  Med min nyvunna kunskap tog jag nu samma
tång och vred detta oks kolv medurs samtidigt som jag tryckte lite
granna, ett par minuter senare var kolven inne.  Jäkla högersida, varför
är den så svår och fastrostad jämfört med vänster? Vänster  brukar ju
normalt vara värre map. rost och sånt.</p>
<p>Åter på högersidan, lite mer rostlösare innanför dammskyddet till
kolven.  Väntar och dricker lite kola. Sätter mig ner igen och börjar
vrida och trycka. Självklart händer det fortfarande ingenting.  In
kommer Micke igen, han trycker och vrider, byter till en annan tång,
trycker och vrider.  Inget händer.  &ldquo;Vänta nu,&rdquo; säger han, &ldquo;vi provar
att ta den här bautapolygripen och så trycker jag samtidigt som du
försöker vrida.&rdquo;  Inte lätt, det går segt som tusan, men långsamt
långsamt så kryper kolven in.  Seger!  Så här i efterhand har jag
förstått att det var ett <a href="https://web.archive.org/web/20090601001422/http://www.biltema.se/products/product.asp?iSecId=506&amp;iItemId=82465">sånt här</a> bromskolvverktyg jag skulle ha
haft bak.</p>
<p>Resten var bara ihopmontering, det var lätt och totalt så var det alltså
bara två bultar, vilka man kunde återanvända, för att byta både
bromskiva och belägg bak.  Totalt tog det hela dan, men det var det
värt!</p>
<p>Allting är lätt när man kan det :-)</p>
]]></content>
        </item>
        
        <item>
            <title>make-kpkg and dirty modules</title>
            <link>/2006/07/17/make-kpkg-and-dirty-modules/</link>
            <pubDate>Mon, 17 Jul 2006 22:10:24 +0000</pubDate>
            
            <guid>/2006/07/17/make-kpkg-and-dirty-modules/</guid>
            <description>Dammit, tonight I spent too many hours chasing down a &amp;ldquo;feature&amp;rdquo; in the Debian kernel build process or the Linux-2.6 kernel. I haven&amp;rsquo;t yet deciced who to blame ;-)
Here goes: when you build the latest Linux 2.6 kernel, checked out from the git repository, with make-kpkg you should make sure to uncheck the CONFIG_LOCALVERSION_AUTO option in the kernel config before hand. It&amp;rsquo;s under &amp;ldquo;General setup&amp;rdquo; → &amp;ldquo;Automatically append version information &amp;hellip;&amp;quot;.</description>
            <content type="html"><![CDATA[<p>Dammit, tonight I spent too many hours chasing down a &ldquo;feature&rdquo; in the
Debian kernel build process or the Linux-2.6 kernel.  I haven&rsquo;t yet
deciced who to blame ;-)</p>
<p>Here goes: when you build the latest Linux 2.6 kernel, checked out from
the git repository, with <code>make-kpkg</code> you should make sure to uncheck the
<code>CONFIG_LOCALVERSION_AUTO</code> option in the kernel config before hand.
It&rsquo;s under &ldquo;General setup&rdquo; → &ldquo;Automatically append version
information &hellip;&quot;.  If you don&rsquo;t disable it, then your <code>utsrelease.h</code>
will contain some annoying extra git version string and your modules
directory will look something like this: <code>/lib/modules/2.6.18-dirty</code></p>
<p>All this due to the <code>LOCALVERSION</code> config, your git checkout, and the
tiny little fact that <code>make-kpkg</code> modifies (moves away) the two files
<code>scripts/packages/{builddeb,Makefile}</code> which leads to the modification
of the checkout and the scripts/setlocalversion will tell this to the
top Makefile which in turn will create this whole mess.</p>
<p>Take my advice, untick the <code>CONFIG_LOCALVERSION_AUTO</code> option.  It&rsquo;s the
easiest one to get away with.</p>
]]></content>
        </item>
        
        <item>
            <title>Quick Note</title>
            <link>/2006/07/17/quick-note/</link>
            <pubDate>Mon, 17 Jul 2006 21:10:45 +0000</pubDate>
            
            <guid>/2006/07/17/quick-note/</guid>
            <description>About that /etc/network/interface autoconfig thingy: it&amp;rsquo;s almost done. Works perfect &amp;hellip; at work (connected) and at home (wireless). I need to fine tune the tests, I think, to get the connected stuff to work at home too. The problem seems to be that the test to see if the machine is connected at home is that the MAC it looks for to ID the office network also is available from home, via the VPN.</description>
            <content type="html"><![CDATA[<p>About that <code>/etc/network/interface</code> autoconfig thingy: it&rsquo;s almost done.
Works perfect &hellip; at work (connected) and at home (wireless).  I need to
fine tune the tests, I think, to get the connected stuff to work at home
too.  The problem seems to be that the test to see if the machine is
connected at home is that the MAC it looks for to ID the office network
also is available from home, via the VPN.  I&rsquo;ll get back on the subject
as soon as I&rsquo;ve done some more tests.</p>
]]></content>
        </item>
        
        <item>
            <title>Swedish National Day: Deep thoughts ...</title>
            <link>/2006/06/06/swedish-national-day-deep-thoughts-dot-dot-dot/</link>
            <pubDate>Tue, 06 Jun 2006 22:10:42 +0000</pubDate>
            
            <guid>/2006/06/06/swedish-national-day-deep-thoughts-dot-dot-dot/</guid>
            <description>From time to time, even though it seems to occur more frequently these days, I think about the persistence of things. How development is continuously accelerating in the modern world. To me this is like a double edged sword, it&amp;rsquo;s both comforting and unsettling. Comforting that we as humans continuously improve and develop our methods and technologies. Unsettling because I know much of the development is in directions that I don&amp;rsquo;t approve of: more intricate and capable weapons and methods of surveillance.</description>
            <content type="html"><![CDATA[<p>From time to time, even though it seems to occur more frequently these
days, I think about the persistence of things.  How development is
continuously accelerating in the modern world.  To me this is like a
double edged sword, it&rsquo;s both comforting and unsettling.  Comforting
that we as humans continuously improve and develop our methods and
technologies.  Unsettling because I know much of the development is in
directions that I don&rsquo;t approve of: more intricate and capable weapons
and methods of surveillance.  Yet somehow we manage to survive and
thrive in our lives.  Life finds a way, I guess.</p>
]]></content>
        </item>
        
        <item>
            <title>Laptop Network Configuration in Debian/Ubuntu</title>
            <link>/2006/06/06/laptop-network-configuration-in-debian-slash-ubuntu/</link>
            <pubDate>Tue, 06 Jun 2006 21:10:24 +0000</pubDate>
            
            <guid>/2006/06/06/laptop-network-configuration-in-debian-slash-ubuntu/</guid>
            <description>I have three network cards in my laptop. Two built-in and one PCMCIA card. I&amp;rsquo;m currently investigating how I can migrate from using the slow and tedious gnome-network &amp;amp; C:o tools to the more integrated Debian/Ubuntu tools ifupdown, guessnet, ifplugd and waproamd instead. As usual Debian has a fine and clever way of handling all this with their /etc/network/interface file. To learn more about this fine management interface I&amp;rsquo;m reading the well written book The Debian System by Martin F.</description>
            <content type="html"><![CDATA[<p>I have three network cards in my laptop.  Two built-in and one PCMCIA
card.  I&rsquo;m currently investigating how I can migrate from using the slow
and tedious gnome-network &amp; C:o tools to the more integrated
Debian/Ubuntu tools <code>ifupdown</code>, <code>guessnet</code>, <code>ifplugd</code> and <code>waproamd</code>
instead.  As usual Debian has a fine and clever way of handling all this
with their <code>/etc/network/interface</code> file.  To learn more about this
<a href="http://www.debian.org/doc/manuals/reference/ch-gateway.en.html">fine management interface</a> I&rsquo;m reading the well written book
<a href="http://debiansystem.info/">The Debian System</a> by <a href="http://madduck.net/blog/">Martin F. Krafft</a>.  I highly recommend it
to others wanting to learn the essentials of their Debian (based)
system.</p>
<p>What I wanted to do is quite simple actually: the built-in wired
interface, named <code>eth0</code>, should on link-up default to a specific IP
address if ARP reveals a certain MAC on the network.  If plugged in to
an unknown net <code>eth0</code> should go up with DHCP.  If <code>eth0</code> is not up then
the built-in wlan card, <code>eth1</code>, should be tried with two different
ESSID&rsquo;s, work and home, in that order.  If none of the ESSID&rsquo;s could be
found any open WiFi access point should be the tried with DHCP.  The
last interface, <code>eth2</code>, is the PCMCIA card and is only used for the lab
net and always have the same IP address if plugged in completely
ignoring link status.</p>
<p>When I&rsquo;ve implemented the above I&rsquo;ll post the result here.</p>
]]></content>
        </item>
        
        <item>
            <title>No news are good news?</title>
            <link>/2006/05/26/no-news-are-good-news/</link>
            <pubDate>Fri, 26 May 2006 21:10:42 +0000</pubDate>
            
            <guid>/2006/05/26/no-news-are-good-news/</guid>
            <description>Seriously, it&amp;rsquo;s been one long winter and now finally summer is upon us again. It was about six months ago that I switched jobs and this is the first time for that period that I&amp;rsquo;ve got ten minutes above the surface. The new job is fun but currently takes up too much of my time to be healthy in the long run.
Today we&amp;rsquo;re going to Stenby TV-service with our broken Hitachi 32&amp;rdquo; TV.</description>
            <content type="html"><![CDATA[<p>Seriously, it&rsquo;s been one long winter and now finally summer is upon us
again.  It was about six months ago that I switched jobs and this is the
first time for that period that I&rsquo;ve got ten minutes above the surface.
The <a href="http://www.westermo.se">new job</a> is fun but currently takes up too much of my time to be
healthy in the long run.</p>
<p>Today we&rsquo;re going to <a href="http://www.stenby-tvservice.se/">Stenby TV-service</a> with our broken Hitachi 32&rdquo;
TV.  It broke down on the same day as the digital TV broadcast started
in our region.  Curious coincidence, huh?</p>
<p>Time passes quickly, in a couple of weeks my daughter turns three and my
son one year.  Still feels like yesterday they both were born.</p>
]]></content>
        </item>
        
    </channel>
</rss>
