<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Containers | Troglobit]]></title>
  <link href="http://troglobit.github.io/blog/categories/containers/atom.xml" rel="self"/>
  <link href="http://troglobit.github.io/"/>
  <updated>2016-04-11T01:49:14+02:00</updated>
  <id>http://troglobit.github.io/</id>
  <author>
    <name><![CDATA[Joachim Nilsson]]></name>
    <email><![CDATA[troglobit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Testing Multicast With Docker]]></title>
    <link href="http://troglobit.github.io/blog/2016/03/07/testing-multicast-with-docker/"/>
    <updated>2016-03-07T01:37:04+01:00</updated>
    <id>http://troglobit.github.io/blog/2016/03/07/testing-multicast-with-docker</id>
    <content type="html"><![CDATA[<p>Recently <a href="https://github.com/troglobit/pimd/issues/70">issue #70</a> was
reported to <a href="https://github.com/troglobit/pimd/">pimd</a>.  That number of
issues reported is cool in itself, but this was a question about
<a href="https://www.docker.com">Docker</a> and <code>pimd</code>.</p>

<p>Up until that point I had only read about this new fad, and played
around with it a bit <a href="http://www.westermo.com">at work</a> for use as a
stable build environment for cross-compiling.  I had no idea people
would want to use a Docker container as a multicast sink.  Basically I
was baffled.</p>

<p>The reporter used a Java based tool but simply couldn&rsquo;t get things to
work properly with <code>pimd</code> running on the host:</p>

<pre><code>                eth0
 MC sender ---&gt; [ Server host ]    &lt;--- router running pimd
                       |
               ________|________
              /     docker0     \   &lt;--- bridge    ______
             /         |         \                |      |   &lt;--- MC receiver
  __________/          |          \_______________|______|_____
 \                     |                            /         /
  \                     `------------------&gt;-------'         /
   \________________________________________________________/
      Container ship
</code></pre>

<p>We tried several approaches, but nothing seemed to help.  This became a
bit of blocker for the <code>pimd</code> v2.3.2 release and I admittedly lost a bit
of sleep over this.  So finally this weekend, I sat down and whipped my
old <a href="https://github.com/troglobit/mcjoin/">mcjoin</a> tool up into shape.
I&rsquo;ve relied on it for years, but it couldn&rsquo;t send or receive packets,
until now.</p>

<p>Running docker v1.5 in Ubuntu 15.10 I ran this, with <code>pimd</code> on the host
and <code>mcjoin</code> as a multicast sink for 250 groups in a container:</p>

<pre><code>cd ~/Troglobit/mcjoin
docker run -t -i -u `id -u`:`id -g` -v $HOME:$HOME -w $PWD troglobit/toolchain:latest ./mcjoin 225.1.2.3+250
^C
Received total: 2500 packets
</code></pre>

<p>The <code>pimd</code> and the multicast sender runs on my host, which should not
matter since Linux still has to route the traffic to the <code>docker0</code>
interface.  Also, without setting the TTL to 2 (or greater) the
container receives no traffic at all.  Here&rsquo;s what I run in another
terminal on my host:</p>

<pre><code>./mcjoin -s -t 2 -c 10 225.1.2.3+250
</code></pre>

<p>Although <code>pimd</code> is a little slow to register and install the forwarding
rules in the kernel, it sure enough worked on the first attempt! \o/</p>

<p>This is my first real application level experience with Docker, but it
is sure not the last.  Docker is a truly revolutionary new tool!</p>
]]></content>
  </entry>
  
</feed>
