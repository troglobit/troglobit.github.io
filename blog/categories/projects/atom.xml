<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Projects | Troglobit]]></title>
  <link href="http://troglobit.github.io/blog/categories/projects/atom.xml" rel="self"/>
  <link href="http://troglobit.github.io/"/>
  <updated>2015-11-28T14:03:16+01:00</updated>
  <id>http://troglobit.github.io/</id>
  <author>
    <name><![CDATA[Joachim Nilsson]]></name>
    <email><![CDATA[troglobit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Threads vs Events]]></title>
    <link href="http://troglobit.github.io/blog/2013/08/06/event-handling/"/>
    <updated>2013-08-06T14:20:00+02:00</updated>
    <id>http://troglobit.github.io/blog/2013/08/06/event-handling</id>
    <content type="html"><![CDATA[<p>This is a rant about something I recently found to be a long standing
battle line in the world of programming,
<a href="http://cgi.di.uoa.gr/~mema/courses/mde518/papers/lauer78.pdf">Lau78</a>.
The event vs thread based approach to programming.  As rants go I do
not aspire to deliver a clear or logical message, what so ever.  It&rsquo;s
basically just something I need to get off my chest.</p>

<p>It was not until 2007 I first learned about the event based approach
to programming and event libraries like
<a href="http://libevent.org/">libevent</a> and
<a href="http://software.schmorp.de/pkg/libev.html">libev</a>.  Up until that
point the silver bullet everyone was using was &hellip; Threads.</p>

<!-- more -->


<p>I don&rsquo;t really know when it all started, maybe it was the Linux
revolution, the first NPTL release with GLIBC, Java or Solaris.
Nevertheless, from my point of view it was sometime in the mid 90&rsquo;s
during my time at university that the use of threads was starting to
become prevalent.</p>

<p>Surround your pullquote like this {&#8221; text to be quoted &#8220;}</p>

<p>Of course I knew about the event based approach, but it was more or
less dismissed as a thing of the past, a while(1) loop to mimic the
behavior of PLC&rsquo;s.  So almost every program I wrote, and every program
I took over from others, were like Indiana Jones types of mazes full
of deadlocks and race conditions.</p>

<p>I thought I did something wrong, and so did many others like me.  I
spent days and nights trying to understand, refactor, and redesign
threaded programs.  What I found was a doubt that the thread based
model actually didn&rsquo;t suit every problem,
<a href="http://www.cc.gatech.edu/classes/AY2009/cs4210_fall/papers/ousterhout-threads.pdf">Ous96</a>.
There are quite a few domains, however, where thread based models
shine. Usually in languages that come with thread support built-in,
like Erlang.</p>

<p>Most of the programs I work with today are network daemons.  Meaning
they are essentially message based applications that spend a lot of
time waiting for an event to occur: receiving a data frame, waiting
for a timer to expire, a signal to be raised, etc.  Of course threads
can be used for this, but it is a lot simpler to employ an event based
framework instead.  Also, they are all written in C for speed and
portability between different UNIX systems.  For that domain, where I
currently make my living, it will be difficult to convince me to ever
look at threads again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Open Source Releases]]></title>
    <link href="http://troglobit.github.io/blog/2013/07/12/new-open-source-releases/"/>
    <updated>2013-07-12T16:30:00+02:00</updated>
    <id>http://troglobit.github.io/blog/2013/07/12/new-open-source-releases</id>
    <content type="html"><![CDATA[<p>Vacation time means catching up on my Open Source projects! :)</p>

<p>Currently I&rsquo;m shaping up the home pages and this blog to improve the
easy access and overview of all the packages I maintain.  The
following packages have new releases, or can expect new releases soon:</p>

<ul>
<li> <a href="/editline.html">Minix Editline</a> v1.14.1</li>
<li> <a href="/smcroute.html">SMCRoute</a> v1.99.1 &ndash; There&rsquo;s even a v2.0.0 being
 planned, with the core of SMCRoute available as a library</li>
<li> <a href="/mrouted.html">mrouted</a> minor cleanup an sync with
 <a href="http://www.openbsd.org/cgi-bin/cvsweb/src/usr.sbin/mrouted/">OpenBSD</a></li>
<li> <a href="/pimd.html">pimd</a> cleanups and bug fixes, needs testing</li>
<li> <a href="/inadyn.html">inadyn</a> is in dire need of a release, but needs more testing and fixes</li>
</ul>


<p>As usual, see my <a href="http://github.com/troglobit">GitHub</a> for the latest
commits if you want to try anything out, file an issue report, or if
you want to contribute.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finit v1.8]]></title>
    <link href="http://troglobit.github.io/blog/2013/06/08/finit-v1-dot-8/"/>
    <updated>2013-06-08T00:04:00+02:00</updated>
    <id>http://troglobit.github.io/blog/2013/06/08/finit-v1-dot-8</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a long time coming, but here it finally is, <a href="/finit.html">Finit</a>
<a href="ftp://troglobit.com/finit/finit-1.8.tar.xz">v1.8</a>!  The goodies we&rsquo;ve been waiting for are:</p>

<ul>
<li>Runlevels</li>
<li>Multiple TTYs</li>
<li>One-shot tasks</li>
</ul>


<p>Let&rsquo;s start off with tasks.  Tasks are one-shot commands, with a
syntax like service directives, but are not monitored and respawned
like services.  Tasks are started in parallel, just like services.
For some cases, like the system bootstrap phase, some tasks may need
to be executed in sequence, and for that purpose there also exists a
run command.  Run commands are executed in the order listed in
finit.conf and will run until completion before continuing with the
next task or service.</p>

<p>Multiple TTYs is another neat feature.  Similar to services many TTYs
can be started and automatically be respawned when a user logs out.
For embedded targets wanting to save CPU cycles usually one TTY is the
system console.  Use the console command to point to a defined TTY to
activate &ldquo;Press any key to activate this console.&rdquo;</p>

<p>Finally, runlevels!  This is the key feature in this release of Finit.
Adding the flexibility from SysV init, without the complexity.  This
is one of the key points of Finit &ndash; it should be simple!</p>

<pre><code>finit.conf:
    service [2345] /usr/sbin/sshd -D -- OpenSSH Daemon
</code></pre>

<p>This command tells Finit that the OpenSSH daemon should only run in
runlevel 2-5.  Finit will also respawn sshd if it should crash, just
like before.</p>

<p>Runlevels are needed in use-cases in many embedded devices.  E.g.,
bootstrap, upgrading, and regular operation.  It is completely up to
the system administrator to setup the runlevels of the product or
installation.  At boot runlevel &rsquo;S&#8217; runs, well before any networking
is up.  This is used to to one-time probing and setup of the
system. When done the runlevel defined in finit.conf, or the default
2, is started.</p>

<p>See the <a href="https://github.com/troglobit/finit/blob/master/README.md">README</a> for more information, or the code for the full
details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Editline First Post]]></title>
    <link href="http://troglobit.github.io/blog/2009/06/14/editline-first-post/"/>
    <updated>2009-06-14T20:44:45+02:00</updated>
    <id>http://troglobit.github.io/blog/2009/06/14/editline-first-post</id>
    <content type="html"><![CDATA[<p>For a while now I&rsquo;ve been maintaining a port of the <a href="http://www.cise.ufl.edu/~cop4600/cgi-bin/lxr/http/source.cgi/lib/editline/">Minix</a> editline
library libedit.  Mainly for my own purposes, or rather on behalf of
<a href="http://www.westermo.com">Westermo WeOS</a>, where it is used in the CLI.  This library is the
same as the <a href="https://packages.qa.debian.org/e/editline.html">Debian editline</a> package, even though the origin of that
package is <a href="https://lists.debian.org/debian-devel/2000/05/msg00548.html">somewhat unclear</a> to me.</p>

<p>Today I decided to adjust the package name and bump the version number
to indicate that my port is the same, and now slightly more advanced,
than the Debian version.  To that end I&rsquo;ve now changed the repository
name and prepared for merging with Debian. Getting this work accepted
back into Debian is a completely different issue.</p>

<p>Get the code as a <a href="http://www.bazaar-vcs.org">Bazaar</a> branch, or view its change log through the
<a href="https://launchpad.net/loggerhead">Loggerhead</a> web interface:</p>

<ul>
<li>bzr branch <a href="http://git.troglobit.com/editline.git">http://bzr.vmlinux.org/editline</a></li>
<li><a href="http://git.troglobit.com/editline.git">Loggerhead web interface</a></li>
<li><a href="http://troglobit.com/editline.html">New homepage</a></li>
</ul>


<p>I now intend to do some further integration work, adapting the <code>debian/</code>
directory from editline-1.12-5 and smoothing out any remaining issues
before I release 1.13.0.</p>
]]></content>
  </entry>
  
</feed>
