<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gitweb | Troglobit]]></title>
  <link href="http://troglobit.github.io/blog/categories/gitweb/atom.xml" rel="self"/>
  <link href="http://troglobit.github.io/"/>
  <updated>2015-11-15T19:55:01+01:00</updated>
  <id>http://troglobit.github.io/</id>
  <author>
    <name><![CDATA[Joachim Nilsson]]></name>
    <email><![CDATA[troglobit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HowTo: Apache With Gitweb on Debian 8.1]]></title>
    <link href="http://troglobit.github.io/blog/2015/06/30/howto-apache-with-gitweb-on-debian-8-dot-1/"/>
    <updated>2015-06-30T23:13:48+02:00</updated>
    <id>http://troglobit.github.io/blog/2015/06/30/howto-apache-with-gitweb-on-debian-8-dot-1</id>
    <content type="html"><![CDATA[<p>I&rsquo;m posting this in case anyone else gets stuck setting up <a href="http://www.apache.org">Apache</a>
with <a href="http://git-scm.com/docs/gitweb">Gitweb</a>.  Also as a reminder to myself in case I ever need to
set up this all over again.</p>

<ol>
<li>You have all your eggs in one basket (GitHub), and</li>
<li>You really like that shiny basket, but</li>
<li>You know you&rsquo;re clumsy and usually drop baskets yourself.</li>
<li>You are wise (yes you are!) and realize you need another basket, so</li>
<li>You set up a server and a domain yourself &hellip;</li>
</ol>


<p>OK.  Let&rsquo;s start simple, since you are already running the latest Debian
you fire up the command line and install the basics:</p>

<pre><code>sudo apt-get install gitweb apache2
</code></pre>

<p>So it&rsquo;ll complain, you&rsquo;ll clarify your request and soon all required
packages are on your server.  Now what?</p>

<p>Debian has already set up <a href="http://localhost/gitweb">http://localhost/gitweb</a> for you, and if you
have a domain already you should go ahead and edit the master file for
that:</p>

<pre><code>editor /etc/apache2/sites-available/000-default.conf
service apache2 reload
</code></pre>

<p>If you want to use that for your gitweb needs, then you&rsquo;re done!</p>

<!-- more -->


<p>For me, running <a href="http://troglobit.com/gitweb">http://troglobit.com/gitweb</a> out of the box was not
enough.  I wanted to setup <a href="http://git.troglobit.com">http://git.troglobit.com</a> and also to make
sure to keep really short and pretty URLs to projects I host.  So the
next part of this post is about how to set that up.</p>

<p>My <code>000-default.conf</code> is for <a href="http://troglobit.com,">http://troglobit.com,</a> so I created a new
one for the sub-domain:</p>

<pre><code>editor /etc/apache2/sites-available/git.conf
</code></pre>

<p>&hellip; and added the following:</p>

<pre><code class="apache /etc/apache2/sites-available/git.conf">    &lt;VirtualHost *:80&gt;
        ServerName git.troglobit.com
        DocumentRoot /usr/share/gitweb

        SetEnv GITWEB_CONFIG    /etc/gitweb.conf
        SetEnv GIT_PROJECT_ROOT /srv/git

        &lt;Directory /usr/share/gitweb&gt;
            Options FollowSymLinks ExecCGI
            AddHandler cgi-script .cgi

            DirectoryIndex gitweb.cgi

            # Pretty gitweb URLs + pathinfo feature in gitweb.conf
            RewriteEngine On
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule ^.* /gitweb.cgi/$0 [L,PT]
        &lt;/Directory&gt;

        # Enable git clone over HTTP
        ScriptAliasMatch \
            "(?x)^/(.*/(HEAD | \
            info/refs | \
            objects/(info/[^/]+ | \
            [0-9a-f]{2}/[0-9a-f]{38} | \
            pack/pack-[0-9a-f]{40}\.(pack|idx)) | \
            git-(upload|receive)-pack))$" \
            /usr/lib/git-core/git-http-backend/$1
    &lt;/VirtualHost&gt;
</code></pre>

<p>Remember to enable the new sub-domain in Apache and restart the daemon:</p>

<pre><code>a2ensite git
service apache2 restart
</code></pre>

<p>I&rsquo;m not using the default Debian GIT repo location, <code>/var/lib/git</code>, so I
need to set the project root for both the Apache and the GitWeb config:</p>

<pre><code class="perl /etc/gitweb.conf">    # See https://github.com/kogakure/gitweb-theme for more help and pointers

    # path to git projects (&lt;project&gt;.git)
    $projectroot = "/srv/git";

    @git_base_url_list = ("git://git.troglobit.com", "http://git.troglobit.com");

    # directory to use for temp files
    $git_temp = "/tmp";

    $site_name = "git.troglobit.com";

    # target of the home link on top of all pages
    $home_link = $my_uri || "/";

    # html text to include at home page
    #$home_text = "indextext.html";

    # file with project list; by default, simply scan the projectroot dir.
    #$projects_list = $projectroot;

    # stylesheet to use
    @stylesheets = ("static/gitweb.css");

    # javascript code for gitweb
    $javascript = "static/gitweb.js";

    # logo to use
    $logo = "static/git-logo.png";

    # the 'favicon'
    $favicon = "static/git-favicon.png";

    # git-diff-tree(1) options to use for generated patches
    #@diff_opts = ("-M");
    @diff_opts = ();

    # Enable PATH_INFO so the server can produce URLs of the
    # form: http://git.hokietux.net/project.git/xxx/xxx
    # This allows for pretty URLs *within* the Git repository,
    # also needs the Apache rewrite rules for full effect.
    $feature{'pathinfo'}{'default'} = [1];

    # Neat way of prefixing the top URL listing
    our @extra_breadcrumbs = (
          [ 'Troglobit Software' =&gt; 'http://troglobit.com/' ],
        );

    # List avatars next to committers
    $feature{'avatar'}{'default'} = ['gravatar'];

    # The category name is read from .git/category, in the same manner as .git/description.
    $projects_list_group_categories = 1;
    $project_list_default_category = "misc";

    $projects_list_description_width = 80;

    # Enable blame, pickaxe search, snapshop, search, and grep
    # support, but still allow individual projects to turn them off.
    # These are features that users can use to interact with your Git trees. They
    # consume some CPU whenever a user uses them, so you can turn them off if you
    # need to.  Note that the 'override' option means that you can override the
    # setting on a per-repository basis.
    $feature{'blame'}{'default'} = [1];
    $feature{'blame'}{'override'} = [1];

    $feature{'pickaxe'}{'default'} = [1];
    $feature{'pickaxe'}{'override'} = [1];

    $feature{'snapshot'}{'default'} = [1];
    $feature{'snapshot'}{'override'} = [1];

    $feature{'search'}{'default'} = [1];

    $feature{'grep'}{'default'} = [1];
    $feature{'grep'}{'override'} = [1];

    $feature{'highlight'}{'default'} = [1];
</code></pre>

<p>The impossibly simple Apache config has been ripped from the intro by
<a href="http://dereenigne.org/debian/debian-gitweb-server">Jonathan McCrohan</a>,
the GitWeb config is a mixture of findings on the Internets.  Notice the
breadcrumbs and the grouping settings, very useful.</p>

<p>The magic with the pretty URLs is in both files, all <code>RewriteRule</code> lines
in the Apache <code>.conf</code> and the <code>$feature{'pathinfo'}{'default'} = [1];</code>
setting in <code>gitweb.conf</code>.</p>

<p>Also, try out the cool <a href="https://github.com/kogakure/gitweb-theme">theme</a>
I use, it looks a lot better than the default.</p>

<p>Happy coding!</p>
]]></content>
  </entry>
  
</feed>
