<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Itunes | Troglobit]]></title>
  <link href="http://troglobit.github.io/blog/categories/itunes/atom.xml" rel="self"/>
  <link href="http://troglobit.github.io/"/>
  <updated>2015-09-20T16:01:16+02:00</updated>
  <id>http://troglobit.github.io/</id>
  <author>
    <name><![CDATA[Joachim Nilsson]]></name>
    <email><![CDATA[troglobit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HowTo: Use Ubuntu to Serve Music to iTunes]]></title>
    <link href="http://troglobit.github.io/blog/2010/12/31/howto-setup-debian-slash-ubuntu-to-serve-music-to-itunes/"/>
    <updated>2010-12-31T19:26:37+01:00</updated>
    <id>http://troglobit.github.io/blog/2010/12/31/howto-setup-debian-slash-ubuntu-to-serve-music-to-itunes</id>
    <content type="html"><![CDATA[<p>OK, so we finally got an iPad.  The effective marketing droids of Apple
are doing a good job, even the Linux zealots are starting to use their
products :-)</p>

<p>So, how to serve the immense music collection of our family to the iPad?
Well, it seems the magic integration with iTunes is not enough (yet), so
you need a <a href="http://itunes.apple.com/app/simple-daap-client/id369605270">Simple Daap Client</a> app on your iPad to get the most out
of this HowTo. I hope DAAP sharing for iPad will be added soon, that
would be really cool!</p>

<p>I used the <a href="http://www.fireflymediaserver.org/">Firefly Media Server</a>, which in Debian/Ubuntu is known as
<a href="apt://mt-daapd">mt-daapd</a>.  It needs som minor setting up to play nice with the
Avahi multicast DNS (mDNS) services that we will use to let iTunes
discover our new service.</p>

<p>First go ahead and install mt-daapd</p>

<pre><code>sudo apt-get install mt-daapd
</code></pre>

<p>Then make sure to edit the file <code>/etc/default/mt-daapd</code> file, it usually
does not exist in the default setup, so create it and add the following
contents to disable the built-in mDNS server:</p>

<pre><code># -m Disables the built-in mDNS server, useful if you already run Avahi
DAEMON_OPTS="-m"
</code></pre>

<p>The default configuration of must be updated with the location of your
music library.  On my system it is <code>/pub/Music</code>, so I edit the file
<code>/etc/mt-daapd.conf</code> and change:</p>

<pre><code># Location of the mp3 files to share.  Note that because the
# files are stored in the database by inode, these must be
# in the same physical filesystem.
mp3_dir = /pub/Music
</code></pre>

<p>If you like, you can change the <code>admin_pw</code> (mt-daapd) and default port
to something other than the defaults.  After changing the settings you
need to restart the service:</p>

<pre><code>sudo service mt-daapd restart
</code></pre>

<p>Now enter <code>localhost:3689</code> in your browser window, leave the username
field empty and set password to mt-daapd.  Unless you changed any of the
defaults above.</p>

<p>Time for multicast!  The Avahi service on GNU/Linux systems is what
Bonjour/Rendez-Vous is to Apple systems.  It provides seamless
interaction between clients and servers on a LAN.  My HP printer, for
instance, pops up automatically in Windows, OS X and Linux these days
because these operating systems listen in on network mDNS servers that
broadcast (or rather multicast) available services.  Very neat.</p>

<p>However, as usual there are a few snags you might need to work around to
get everything to work.  Thanks to my ISP (Telia, Sweden), I need to tell
Avahi the following nasty things in <code>/etc/default/avahi-daemon</code></p>

<pre><code># 1 = Try to detect unicast dns servers that serve .local and disable avahi in
# that case, 0 = Don't try to detect .local unicast dns servers, can cause
# troubles on misconfigured networks
AVAHI_DAEMON_DETECT_LOCAL=0
</code></pre>

<p>And also edit the file <code>/etc/avahi/avahi-daemon.conf</code>, the following is
not the entire contents of the file, only the sections I&rsquo;ve changed:</p>

<pre><code>[server]
# Comment out any current/previous work arounds
#domain-name=local
#domain-name=.alocal
disallow-other-stacks=yes

[publish]
publish-workstation=no
publish-domain=no
</code></pre>

<p>Also, in the directory <code>/etc/avahi/services/</code> we need to add an entry for
DAAP.  Create the file <code>/etc/avahi/services/daap.service</code>:</p>

<pre><code>&lt;!DOCTYPE service-group SYSTEM "avahi-service.dtd"&gt;
&lt;!-- iTunes DAAP, music streaming, for mt-daapd or Firefly Media Server
     See avahi.service(5) for more information about this configuration file --&gt;

&lt;service-group&gt;
    &lt;name replace-wildcards="yes"&gt;%h&lt;/name&gt;

    &lt;service&gt;
        &lt;type&gt;_daap._tcp&lt;/type&gt;
        &lt;port&gt;3689&lt;/port&gt;
        &lt;txt-record&gt;txtvers=1&lt;/txt-record&gt;
        &lt;txt-record&gt;iTSh Version=131073&lt;/txt-record&gt;
        &lt;txt-record&gt;Version=196610&lt;/txt-record&gt;
    &lt;/service&gt;

    &lt;service&gt;
        &lt;type&gt;_rsp._tcp&lt;/type&gt;
        &lt;port&gt;3689&lt;/port&gt;
    &lt;/service&gt;
&lt;/service-group&gt;
</code></pre>

<p>Now, restart avahi and see your music server pop up automatically as a
Share in iTunes:</p>

<pre><code>sudo service avahi-daemon restart
</code></pre>

<p>Good Luck!</p>
]]></content>
  </entry>
  
</feed>
